//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package convert ;import (_ac "github.com/unidoc/unioffice/common/logger";_bb "github.com/unidoc/unioffice/common/tempstorage";_dg "github.com/unidoc/unioffice/internal/convertutils";_bf "github.com/unidoc/unioffice/measurement";_de "github.com/unidoc/unioffice/schema/soo/dml";
_ec "github.com/unidoc/unioffice/schema/soo/dml/chart";_eg "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_aa "github.com/unidoc/unioffice/schema/soo/sml";_g "github.com/unidoc/unioffice/spreadsheet";_ega "github.com/unidoc/unioffice/spreadsheet/reference";
_d "github.com/unidoc/unipdf/v3/creator";_be "github.com/unidoc/unipdf/v3/model";_b "image";_e "strconv";);func (_fdb *convertContext )makeMergedCells (){_fb :=[]*mergedCell {};for _ ,_afe :=range _fdb ._caged .MergedCells (){_acc ,_dfce ,_bd :=_ega .ParseRangeReference (_afe .Reference ());
if _bd !=nil {_ac .Log .Debug ("\u0065\u0072r\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u006d\u0065\u0072\u0067\u0065\u0064\u0020\u0063\u0065\u006c\u006c: \u0025\u0073",_bd );continue ;};_ecc :=mergedCell {_cgea :_acc .RowIdx ,_dbg :_acc .ColumnIdx ,_bdcg :_dfce .RowIdx ,_dggf :_dfce .ColumnIdx };
for _beg :=_ecc ._dbg -1;_beg < _ecc ._dggf ;_beg ++{_ecc ._feed +=_fdb ._bga [_beg ]._egg ;};for _bbe :=_ecc ._cgea -1;_bbe < _ecc ._bdcg ;_bbe ++{_ecc ._faef +=_fdb ._dac [_bbe ]._gbeb ;};_fb =append (_fb ,&_ecc );};_fdb ._bag =_fb ;};func (_caa *convertContext )fillPages (){for _bfe ,_fce :=range _caa ._fcd {_dbe :=_caa ._dac [_fce ._gdad :_fce ._acfg ];
for _efcd ,_adgd :=range _dbe {_abd :=0;_gdbd :=0.0;_gbe :=[]*cell {};if _adgd ._efgf {for _ ,_fdfc :=range _adgd ._dgce {_ccfd :=_caa ._eedg [_abd ];_caa ._cabb =_ccfd ._aaff [_bfe ];_caa ._cabb ._gac =true ;_eee :=_fdfc ._fbbb ;if _gdbd +_eee > _ccfd ._dagae {_caa .addRowToPage (_gbe ,_efcd );
_gbe =[]*cell {_fdfc };_gdbd =_eee ;_abd ++;}else {_fdfc ._ccca =_gdbd ;_gbe =append (_gbe ,_fdfc );_gdbd +=_eee ;};};if len (_gbe )> 0{_cag :=_caa ._eedg [_abd ];_caa ._cabb =_cag ._aaff [_bfe ];_caa ._cabb ._gac =true ;_caa .addRowToPage (_gbe ,_efcd );
};};};};};

// RegisterFont makes a PdfFont accessible for using in converting to PDF.
func RegisterFont (name string ,style FontStyle ,font *_be .PdfFont ){_dg .RegisterFont (name ,style ,font );};func _faae (_bdec []*symbol )float64 {_cded :=0.0;for _ ,_gfg :=range _bdec {if _gfg ._bcdf > _cded {_cded =_gfg ._bcdf ;};};return _cded ;};
type mergedCell struct{_cgea uint32 ;_dbg uint32 ;_bdcg uint32 ;_dggf uint32 ;_feed float64 ;_faef float64 ;};func (_gcg *convertContext )makeCols (){_bea :=_gcg ._caged ;_bad :=_bea .X ();_gfb :=[]*colInfo {};_fcb :=[]colWidthRange {};if _aggf :=_bad .Cols ;
len (_aggf )> 0{for _ ,_cfb :=range _aggf [0].Col {_ffb :=65.0;if _gfc :=_cfb .WidthAttr ;_gfc !=nil {if *_gfc > 0.83{*_gfc -=0.83;};if *_gfc <=1{_ffb =*_gfc *11;}else {_ffb =5+*_gfc *6;};};_fg :=int (_cfb .MinAttr -1);_bcc :=int (_cfb .MaxAttr -1);_fcb =append (_fcb ,colWidthRange {_edeg :_fg ,_dbf :_bcc ,_bace :_ffb ,_ddgb :_gcg .getStyle (_cfb .StyleAttr )});
};};_acaf :=0;for _aga :=0;_aga <=_gcg ._ddcf ;_aga ++{var _ea float64 ;var _feda *style ;if _acaf >=len (_fcb ){_ea =65;}else {_ccb :=_fcb [_acaf ];if _aga >=_ccb ._edeg &&_aga <=_ccb ._dbf {_ea =_ccb ._bace ;_feda =_ccb ._ddgb ;if _aga ==_ccb ._dbf {_acaf ++;
};}else {_ea =65;};};_gfb =append (_gfb ,&colInfo {_egg :_ea ,_gggd :_feda });};_gcg ._bga =_gfb ;};func (_dcf *convertContext )distributeAnchors (){for _ ,_fcf :=range _dcf ._feb {_geg ,_dfca :=_fcf ._fggd ,_fcf ._daae ;_cgc ,_gbea :=_fcf ._bdcd ,_fcf ._eccc ;
_adf ,_ffde :=_fcf ._cbde ,_fcf ._bgfe ;_efcb ,_dcd :=_fcf ._bbdb ,_fcf ._dgfd ;var _gdc ,_gaa ,_fgf ,_cdf *page ;for _ ,_ddg :=range _dcf ._eedg {for _ ,_gbaa :=range _ddg ._aaff {if _geg >=_gbaa ._beef ._gdad &&_geg < _gbaa ._beef ._acfg {if _cgc >=_gbaa ._dfg ._fedd &&_cgc < _gbaa ._dfg ._bcec {_gbaa ._gac =true ;
_gdc =_gbaa ;};if _efcb >=_gbaa ._dfg ._fedd &&_efcb < _gbaa ._dfg ._bcec {_gbaa ._gac =true ;_gaa =_gbaa ;};};if _adf >=_gbaa ._beef ._gdad &&_adf < _gbaa ._beef ._acfg {if _cgc >=_gbaa ._dfg ._fedd &&_cgc < _gbaa ._dfg ._bcec {_gbaa ._gac =true ;_cdf =_gbaa ;
};if _efcb >=_gbaa ._dfg ._fedd &&_efcb < _gbaa ._dfg ._bcec {_gbaa ._gac =true ;_fgf =_gbaa ;};};};};_gag :=_gdc !=_gaa ;_dce :=_gdc !=_cdf ;if _gag &&_dce {_bbg :=_dcf ._bga [_cgc ]._begf +_bf .FromEMU (_gbea );_egb :=_gdc ._dfg ._dagae ;_accc :=_dcf ._bga [_efcb ]._begf +_bf .FromEMU (_dcd );
_gde :=_dcf ._dac [_geg ]._bdcf +_bf .FromEMU (_dfca );_dgc :=float64 (_gdc ._beef ._ggg );_dec :=_dcf ._dac [_adf ]._bdcf +_bf .FromEMU (_ffde );_ece :=_accc +_egb -_bbg ;_beaa :=_dec +_dgc -_gde ;_aeba :=_dcf .imageFromAnchor (_fcf ,_ece ,_beaa );_gdc ._beb =append (_gdc ._beb ,_dcf .getImage (_aeba ,_beaa ,_ece ,_bbg ,_gde ,_egb -_bbg ,_dgc -_gde ,_dg .ImgPart_lt ));
_gaa ._beb =append (_gaa ._beb ,_dcf .getImage (_aeba ,_beaa ,_ece ,0,_gde ,_egb -_bbg ,_dgc -_gde ,_dg .ImgPart_rt ));_cdf ._beb =append (_cdf ._beb ,_dcf .getImage (_aeba ,_beaa ,_ece ,_bbg ,0,_egb -_bbg ,_dgc -_gde ,_dg .ImgPart_lb ));_fgf ._beb =append (_fgf ._beb ,_dcf .getImage (_aeba ,_beaa ,_ece ,0,0,_egb -_bbg ,_dgc -_gde ,_dg .ImgPart_rb ));
}else if _gag {_cge :=_dcf ._dac [_geg ]._bdcf +_bf .FromEMU (_dfca );_eccdf :=_dcf ._dac [_adf ]._bdcf +_bf .FromEMU (_ffde );_fcg :=_dcf ._bga [_cgc ]._begf +_bf .FromEMU (_gbea );_bed :=_gdc ._dfg ._dagae ;_cde :=_dcf ._bga [_efcb ]._begf +_bf .FromEMU (_dcd );
_dcfa :=_cde +_bed -_fcg ;_fef :=_eccdf -_cge ;_bce :=_dcf .imageFromAnchor (_fcf ,_dcfa ,_fef );_gdc ._beb =append (_gdc ._beb ,_dcf .getImage (_bce ,_fef ,_dcfa ,_fcg ,_cge ,_bed -_fcg ,0,_dg .ImgPart_l ));_gaa ._beb =append (_gaa ._beb ,_dcf .getImage (_bce ,_fef ,_dcfa ,0,_cge ,_bed -_fcg ,0,_dg .ImgPart_r ));
}else if _dce {_ecde :=_dcf ._bga [_cgc ]._begf +_bf .FromEMU (_gbea );_abf :=_dcf ._bga [_efcb ]._begf +_bf .FromEMU (_dcd );_dfe :=_dcf ._dac [_geg ]._bdcf +_bf .FromEMU (_dfca );_bac :=float64 (_gdc ._beef ._ggg );_fgbg :=_dcf ._dac [_adf ]._bdcf +_bf .FromEMU (_ffde );
_fbe :=_abf -_ecde ;_bcf :=_fgbg +_bac -_dfe ;_bgf :=_dcf .imageFromAnchor (_fcf ,_fbe ,_bcf );_gdc ._beb =append (_gdc ._beb ,_dcf .getImage (_bgf ,_bcf ,_fbe ,_ecde ,_dfe ,0,_bac -_dfe ,_dg .ImgPart_t ));_cdf ._beb =append (_cdf ._beb ,_dcf .getImage (_bgf ,_bcf ,_fbe ,_ecde ,0,0,_bac -_dfe ,_dg .ImgPart_b ));
}else {_fbeb :=_dcf ._bga [_cgc ]._begf +_bf .FromEMU (_gbea );_efb :=_dcf ._bga [_efcb ]._begf +_bf .FromEMU (_dcd );_bcce :=_dcf ._dac [_geg ]._bdcf +_bf .FromEMU (_dfca );_ecee :=_dcf ._dac [_adf ]._bdcf +_bf .FromEMU (_ffde );_ddcg :=_efb -_fbeb ;_geea :=_ecee -_bcce ;
_gdce :=_dcf .imageFromAnchor (_fcf ,_ddcg ,_geea );_gdc ._beb =append (_gdc ._beb ,_dcf .getImage (_gdce ,_geea ,_ddcg ,_fbeb ,_bcce ,0,0,_dg .ImgPart_whole ));};};};type rowInfo struct{_bdcf float64 ;_efgf bool ;_gbeb float64 ;_gfca *style ;_dgce []*cell ;
_adef float64 ;};func (_ggf *convertContext )combineCellStyleWithRPrElt (_ebd *style ,_ecdc *_aa .CT_RPrElt )*style {_gcef :=*_ebd ;_dfgb :=_ggf .getStyleFromRPrElt (_ecdc );if _dfgb ==nil {return &_gcef ;};if _dfgb ._ebfg !=nil {_gcef ._ebfg =_dfgb ._ebfg ;
};if _dfgb ._fgd !=nil {_gcef ._fgd =_dfgb ._fgd ;};if _dfgb ._gbf !=nil {_gcef ._gbf =_dfgb ._gbf ;};if _dfgb ._gef !=nil {_gcef ._gef =_dfgb ._gef ;};if _dfgb ._fge !=nil {_gcef ._fge =_dfgb ._fge ;};if _dfgb ._bdca !=nil {_gcef ._bdca =_dfgb ._bdca ;
};if _dfgb ._faeeg !=nil {_gcef ._faeeg =_dfgb ._faeeg ;};if _dfgb ._fedg !=nil {_gcef ._fedg =_dfgb ._fedg ;};return &_gcef ;};type anchor struct{_deac _b .Image ;_edcb *_ec .ChartSpace ;_fggd int ;_daae int64 ;_bdcd int ;_eccc int64 ;_cbde int ;_bgfe int64 ;
_bbdb int ;_dgfd int64 ;};func _cafa (_daga []*symbol )float64 {_edd :=0.0;for _ ,_edf :=range _daga {_edd +=_edf ._dgfc ;};return _edd ;};var _ef =3.025/_dcfe (1);

// ConvertToPdf converts a sheet to a PDF file. This package is beta, breaking changes can take place.
func ConvertToPdf (s *_g .Sheet )*_d .Creator {_c :=s .X ();if _c ==nil {return nil ;};var _f _d .PageSize ;var _gfd bool ;if _fe :=_c .PageSetup ;_fe !=nil {if _fd :=_fe .PaperSizeAttr ;_fd !=nil {_f =_egce [*_fd ];};_gfd =_fe .OrientationAttr ==_aa .ST_OrientationLandscape ;
};if (_f ==_d .PageSize {}){_f =_egce [1];};if _gfd {_f [0],_f [1]=_f [1],_f [0];};_aac :=_d .New ();_aac .SetPageSize (_f );var _efa ,_eea ,_fed ,_aaa float64 ;if _ag :=_c .PageMargins ;_ag !=nil {_fed =_ag .LeftAttr ;_aaa =_ag .RightAttr ;_efa =_ag .TopAttr ;
_eea =_ag .BottomAttr ;};if _fed < 0.25{_fed =0.25;};if _aaa < 0.25{_aaa =0.25;};_efa *=_bf .Inch ;_eea *=_bf .Inch ;_fed *=_bf .Inch ;_aaa *=_bf .Inch ;_aac .SetPageMargins (_fed ,_aaa ,_efa ,_eea );_da :=s .Workbook ();var _bfa *_de .Theme ;if len (_da .Themes ())> 0{_bfa =_da .Themes ()[0];
};_bfg :=&convertContext {_aeef :_aac ,_caged :s ,_cage :s .Workbook (),_gdcbb :_bfa ,_cdd :&s .Workbook ().StyleSheet ,_eef :_efa ,_gagg :_fed ,_gaae :_f [1]-_eea -_efa ,_fdeb :_f [0]-_aaa -_fed };_bfg .makeAnchors ();_bfg .determineMaxIndexes ();if _bfg ._cef ==0&&_bfg ._ddcf ==0{_aac .NewPage ();
return _aac ;};_bfg .makeCols ();_bfg .makeRows ();_bfg .makeMergedCells ();_bfg .makeCells ();_bfg .makePagespans ();_bfg .makeRowspans ();_bfg .makePages ();_bfg .fillPages ();_bfg .distributeAnchors ();_bfg .drawSheet ();return _aac ;};func _cece (_dcee *symbol ){_fbb :=_d .New ();
_daa :=_fbb .NewStyledParagraph ();_daa .SetMargins (0,0,0,0);_ded :=_daa .Append (_dcee ._dcdfa );if _dcee ._gafg !=nil {_ded .Style =*_dcee ._gafg ;};_dcee ._bcdf =_daa .Height ();if _dcee ._dgfc ==0{_dcee ._dgfc =_daa .Width ();};};

// FontStyle represents a kind of font styling. It can be FontStyle_Regular, FontStyle_Bold, FontStyle_Italic and FontStyle_BoldItalic.
type FontStyle =_dg .FontStyle ;type colWidthRange struct{_edeg int ;_dbf int ;_bace float64 ;_ddgb *style ;};type colInfo struct{_begf float64 ;_egg float64 ;_gggd *style ;};type style struct{_ebfg *string ;_fgd *float64 ;_gbf *string ;_gef *bool ;_fge *bool ;
_bdca *bool ;_faeeg *bool ;_fedg *bool ;_cgbe *border ;_ecad *border ;_bda *border ;_eged *border ;_fbd bool ;_acb _aa .ST_VerticalAlignment ;_dfbc _aa .ST_HorizontalAlignment ;};func (_gfef *convertContext )makeRows (){_efgdf :=[]*rowInfo {};_ebe :=_gfef ._caged .Rows ();
_bcg :=0;for _ ,_gaf :=range _ebe {_bcg ++;_cec :=int (_gaf .RowNumber ());if _cec > _bcg {for _efc :=_bcg ;_efc < _cec ;_efc ++{_efgdf =append (_efgdf ,&rowInfo {_gbeb :16/_ef });};_bcg =_cec ;};var _eeg float64 ;if _gaf .X ().HtAttr ==nil {_eeg =16;}else {_eeg =*_gaf .X ().HtAttr ;
};_efgdf =append (_efgdf ,&rowInfo {_gbeb :_eeg /_ef ,_efgf :true ,_gfca :_gfef .getStyle (_gaf .X ().SAttr )});};for _ecf :=len (_efgdf );_ecf < _gfef ._cef ;_ecf ++{_efgdf =append (_efgdf ,&rowInfo {_gbeb :16/_ef });};_gfef ._dac =_efgdf ;};type cell struct{_debe _aa .ST_CellType ;
_fda int ;_ccca float64 ;_fdg []*line ;_gacg float64 ;_fbbb float64 ;_ffbb float64 ;_bbfa float64 ;_fbae float64 ;_age *_d .TextStyle ;_agag *border ;_efade *border ;_egef *border ;_dde *border ;_eeb bool ;_eded bool ;};var _gc =_dcfe (0.0625);func (_bee *convertContext )alignSymbolsVertically (_dfb *cell ,_dcg _aa .ST_VerticalAlignment ){var _gdg float64 ;
switch _dcg {case _aa .ST_VerticalAlignmentTop :_gdg =_df ;if _dfb ._eeb {_gdg -=_af ;}else if _dfb ._eded {_gdg +=4*_af ;};for _ ,_abe :=range _dfb ._fdg {_gdg +=_abe ._bbcd ;_abe ._ccfg =_gdg ;_gdg +=_gd ;};case _aa .ST_VerticalAlignmentCenter :_gce :=0.0;
for _ ,_egec :=range _dfb ._fdg {_gce +=_egec ._bbcd +_dcfe (1);};_gdg =0.5*(_dfb ._ffbb -_gce );if _dfb ._eeb {_gdg -=2*_af ;}else if _dfb ._eded {_gdg +=2*_af ;};for _ ,_aaaa :=range _dfb ._fdg {_gdg +=_aaaa ._bbcd +0.5*_gd ;_aaaa ._ccfg =_gdg ;_gdg +=0.5*_gd ;
};default:_gdg =_dfb ._ffbb -_df ;if _dfb ._eeb {_gdg -=4*_af ;}else if _dfb ._eded {_gdg +=_af ;};for _agd :=len (_dfb ._fdg )-1;_agd >=0;_agd --{_dfb ._fdg [_agd ]._ccfg =_gdg ;_gdg -=_dfb ._fdg [_agd ]._bbcd ;_gdg -=_gd ;};};};func (_eae *convertContext )makeCells (){_dab :=_eae ._caged ;
_gca :=_dab .Rows ();_eff :=0;for _ ,_dea :=range _eae ._dac {_dea ._dgce =[]*cell {};_fcbd :=0.0;_efd :=_dea ._gfca ;if _dea ._efgf {_bfc :=_gca [_eff ];_eff ++;_adg :=_dea ._gbeb ;for _ ,_dfa :=range _bfc .Cells (){_gfbb ,_bg :=_ega .ParseCellReference (_dfa .Reference ());
if _bg !=nil {_ac .Log .Debug ("\u0043\u0061\u006e\u006eo\u0074\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0061\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u003a \u0025\u0073",_bg );continue ;};_eag :=_eae ._bga [_gfbb .ColumnIdx ];_cab :=_eag ._egg ;
_bde :=_cab ;_eed :=_eag ._gggd ;var _gfee ,_acg ,_gg ,_bdg bool ;for _ ,_gfdc :=range _eae ._bag {if _gfbb .RowIdx >=_gfdc ._cgea &&_gfbb .RowIdx <=_gfdc ._bdcg &&_gfbb .ColumnIdx >=_gfdc ._dbg &&_gfbb .ColumnIdx <=_gfdc ._dggf {if _gfbb .ColumnIdx ==_gfdc ._dbg &&_gfbb .RowIdx ==_gfdc ._cgea {_cab =_gfdc ._feed ;
_adg =_gfdc ._faef ;};_gfee =_gfbb .RowIdx !=_gfdc ._cgea ;_acg =_gfbb .RowIdx !=_gfdc ._bdcg ;_gg =_gfbb .ColumnIdx !=_gfdc ._dbg ;_bdg =_gfbb .ColumnIdx !=_gfdc ._dggf ;};};_dff :=_eae .getStyleFromCell (_dfa ,_efd ,_eed );var _dgd ,_dabb ,_egc bool ;
var _fgb ,_eccd ,_aeb ,_fab *border ;var _bbf _aa .ST_VerticalAlignment ;var _gb _aa .ST_HorizontalAlignment ;if _dff !=nil {if !_gfee {_fgb =_dff ._cgbe ;};if !_acg {_eccd =_dff ._ecad ;};if !_gg {_aeb =_dff ._bda ;};if !_bdg {_fab =_dff ._eged ;};if _eccd !=nil &&_eccd ._agfa > _fcbd {_fcbd =_eccd ._agfa ;
};_bbf =_dff ._acb ;_gb =_dff ._dfbc ;if _dff ._faeeg !=nil {_dgd =*_dff ._faeeg ;};if _dff ._fedg !=nil {_dabb =*_dff ._fedg ;};_egc =_dff ._fbd ;};_gba ,_fdf :=_eae .getContentFromCell (_dfa ,_dff ,_cab ,_egc );_ccff :=&cell {_debe :_fdf ,_gacg :_cab ,_fbbb :_bde ,_ffbb :_adg ,_fdg :_gba ,_agag :_fgb ,_efade :_eccd ,_egef :_aeb ,_dde :_fab ,_eeb :_dgd ,_eded :_dabb };
_eae .alignSymbolsHorizontally (_ccff ,_gb );_eae .alignSymbolsVertically (_ccff ,_bbf );_dea ._dgce =append (_dea ._dgce ,_ccff );};};_dea ._adef =_fcbd ;};};func (_fdba *convertContext )getColorStringFromSmlColor (_dgfbf *_aa .CT_Color )*string {var _fedb string ;
if _dgfbf .RgbAttr !=nil {_fedb =*_dgfbf .RgbAttr ;}else if _dgfbf .IndexedAttr !=nil &&*_dgfbf .IndexedAttr < 64{_fedb =_efda [*_dgfbf .IndexedAttr ];}else if _dgfbf .ThemeAttr !=nil {_cefc :=*_dgfbf .ThemeAttr ;_fedb =_fdba .getColorFromTheme (_cefc );
};if _fedb ==""{return nil ;};if len (_fedb )> 6{_fedb =_fedb [(len (_fedb )-6):];};if _dgfbf .TintAttr !=nil {_gbbf :=*_dgfbf .TintAttr ;_fedb =_dg .AdjustColorByTint (_fedb ,_gbbf );};_fedb ="\u0023"+_fedb ;return &_fedb ;};func (_daf *convertContext )makeRowspans (){var _bcd float64 ;
_gad :=0;for _fde ,_ceea :=range _daf ._dac {_deg :=_ceea ._gbeb +_ceea ._adef ;if _bcd +_deg <=_daf ._gaae {_ceea ._bdcf =_bcd ;_bcd +=_deg ;}else {_daf ._fcd =append (_daf ._fcd ,&rowspan {_ggg :_bcd ,_gdad :_gad ,_acfg :_fde });_gad =_fde ;_ceea ._bdcf =0;
_bcd =_deg ;};};_daf ._fcd =append (_daf ._fcd ,&rowspan {_ggg :_bcd ,_gdad :_gad ,_acfg :len (_daf ._dac )});};func _gadf (_cgbf *bool )bool {return _cgbf !=nil &&*_cgbf };const _gf =3;

// RegisterFontsFromDirectory registers all fonts from the given directory automatically detecting font families and styles.
func RegisterFontsFromDirectory (dirName string )error {return _dg .RegisterFontsFromDirectory (dirName )};const _bff =0.25;func (_abfc *convertContext )getSymbolsFromR (_dbef []*_aa .CT_RElt ,_dba *style )[]*symbol {_bcea :=[]*symbol {};for _ ,_gcad :=range _dbef {_caf :=_abfc .combineCellStyleWithRPrElt (_dba ,_gcad .RPr );
for _ ,_egfa :=range _gcad .T {_bcea =append (_bcea ,&symbol {_dcdfa :string (_egfa ),_gafg :_abfc .makeTextStyleFromCellStyle (_caf )});};};return _bcea ;};type border struct{_agfa float64 ;_ffc _d .Color ;};func (_fbf *convertContext )makePages (){for _ ,_bgd :=range _fbf ._eedg {for _ ,_cga :=range _fbf ._fcd {_bgd ._aaff =append (_bgd ._aaff ,&page {_eaeg :[]*pageRow {},_dfg :_bgd ,_beef :_cga });
};};};func (_gdcb *convertContext )drawPage (_dcea *page ){_ead :=_gdcb ._eef ;_acd :=_gdcb ._gagg ;for _ ,_ccg :=range _dcea ._eaeg {_ebg :=_gdcb ._dac [_ccg ._badb ];for _ ,_egf :=range _ccg ._ffdg {_aggd :=_egf ._bbfa < _egf ._ccca ;_cad :=_egf ._fbae > _egf ._ccca +_egf ._gacg ;
var _fee ,_ggc bool ;for _ ,_cdb :=range _egf ._fdg {for _ ,_ebb :=range _cdb ._cbc {if _aggd &&!_fee {_fee =_ebb ._fag < 0;};if _cad &&!_ggc {_ggc =_egf ._gacg < _ebb ._fag +_ebb ._dgfc ;};if _egf ._ccca +_ebb ._fag >=_egf ._bbfa &&_egf ._ccca +_ebb ._fag +_ebb ._dgfc <=_egf ._fbae {_ege :=_gdcb ._aeef .NewStyledParagraph ();
_aff :=_acd +_egf ._ccca +_ebb ._fag ;_fea :=_ead +_ebg ._bdcf +_cdb ._ccfg -_ebb ._bcdf -_dcfe (0.5);_ege .SetPos (_aff ,_fea );var _bgbc *_d .TextChunk ;if _ebb ._dad !=""{_bgbc =_ege .AddExternalLink (_ebb ._dcdfa ,_ebb ._dad );}else {_bgbc =_ege .Append (_ebb ._dcdfa );
};if _ebb ._gafg !=nil {_bgbc .Style =*_ebb ._gafg ;};_gdcb ._aeef .Draw (_ege );};};};var _dcdf ,_acf ,_aef ,_fff ,_adb ,_efff float64 ;var _adfb ,_gga ,_fbc ,_edc _d .Color ;if _agge :=_egf ._agag ;_agge !=nil {_dcdf =_agge ._agfa ;_adfb =_agge ._ffc ;
};if _gab :=_egf ._efade ;_gab !=nil {_acf =_gab ._agfa ;_gga =_gab ._ffc ;};if _dcfaf :=_egf ._egef ;_dcfaf !=nil {_aef =_dcfaf ._agfa ;_adb =_aef /2;_fbc =_dcfaf ._ffc ;};if _dgf :=_egf ._dde ;_dgf !=nil {_fff =_dgf ._agfa ;_efff =_fff /2;_edc =_dgf ._ffc ;
};var _abdd float64 ;if _ccg ._badb > 1{_abdd =_gdcb ._dac [_ccg ._badb -1]._adef ;};_edcg :=_ead +_ebg ._bdcf -0.5*(_abdd -_dcdf );_accg :=_ead +_ebg ._bdcf +_ebg ._gbeb +0.5*(_ebg ._adef +_acf );_cgee :=_acd +_egf ._ccca ;_decg :=_cgee +_egf ._fbbb ;
_dg .DrawLine (_gdcb ._aeef ,_cgee ,_edcg ,_decg ,_edcg ,_dcdf ,_adfb );_dg .DrawLine (_gdcb ._aeef ,_cgee ,_accg ,_decg ,_accg ,_acf ,_gga );if !_fee {_dg .DrawLine (_gdcb ._aeef ,_cgee -_adb ,_edcg ,_cgee -_adb ,_accg ,_aef ,_fbc );};if !_ggc {_dg .DrawLine (_gdcb ._aeef ,_decg -_efff ,_edcg ,_decg -_efff ,_accg ,_fff ,_edc );
};};};for _ ,_dfee :=range _dcea ._beb {if _dfee !=nil {_gdcb ._aeef .Draw (_dfee );};};};func (_dfaa *convertContext )getSymbolsFromString (_ebf string ,_gegg *style )[]*symbol {_dgg :=[]*symbol {};_bbgb :=_dfaa .makeTextStyleFromCellStyle (_gegg );for _ ,_fbfc :=range _ebf {_dgg =append (_dgg ,&symbol {_dcdfa :string (_fbfc ),_gafg :_bbgb });
};return _dgg ;};func _gagf (_eace ,_eab *style ){if _eab ==nil {return ;};if _eace ==nil {_eace =_eab ;return ;};if _eace ._gbf ==nil {_eace ._gbf =_eab ._gbf ;};if _eace ._ebfg ==nil {_eace ._ebfg =_eab ._ebfg ;};if _eace ._fgd ==nil {_eace ._fgd =_eab ._fgd ;
};if _eace ._gef ==nil {_eace ._gef =_eab ._gef ;};if _eace ._fge ==nil {_eace ._fge =_eab ._fge ;};if _eace ._bdca ==nil {_eace ._bdca =_eab ._bdca ;};if _eace ._faeeg ==nil {_eace ._faeeg =_eab ._faeeg ;};if _eace ._fedg ==nil {_eace ._fedg =_eab ._fedg ;
};if _eace ._cgbe ==nil {_eace ._cgbe =_eab ._cgbe ;};if _eace ._ecad ==nil {_eace ._ecad =_eab ._ecad ;};if _eace ._bda ==nil {_eace ._bda =_eab ._bda ;};if _eace ._eged ==nil {_eace ._eged =_eab ._eged ;};if _eace ._acb ==_aa .ST_VerticalAlignmentUnset {_eace ._acb =_eab ._acb ;
};if _eace ._dfbc ==_aa .ST_HorizontalAlignmentUnset {_eace ._dfbc =_eab ._dfbc ;};};type pageRow struct{_badb int ;_ffdg []*cell ;};type rowspan struct{_ggg float64 ;_gdad int ;_acfg int ;};const _af =1.5;func (_cfd *convertContext )getStyle (_ccffd *uint32 )*style {_dgfb :=&style {};
_ecac :=false ;if _ccffd !=nil {_dfbd :=_cfd ._cdd .GetCellStyle (*_ccffd );_ddca :=_dfbd .GetFont ();for _ ,_aaac :=range _ddca .Name {if _aaac !=nil {_dgfb ._gbf =&_aaac .ValAttr ;_ecac =true ;break ;};};for _ ,_dbga :=range _ddca .B {if _dbga !=nil {_aefc :=_dbga .ValAttr ==nil ||*_dbga .ValAttr ;
_dgfb ._gef =&_aefc ;_ecac =true ;break ;};};for _ ,_aea :=range _ddca .I {if _aea !=nil {_gbb :=_aea .ValAttr ==nil ||*_aea .ValAttr ;_dgfb ._fge =&_gbb ;_ecac =true ;break ;};};for _ ,_ced :=range _ddca .U {if _ced !=nil {_bgfd :=_ced .ValAttr ==_aa .ST_UnderlineValuesSingle ||_ced .ValAttr ==_aa .ST_UnderlineValuesUnset ;
_dgfb ._bdca =&_bgfd ;_ecac =true ;break ;};};for _ ,_fefe :=range _ddca .Sz {if _fefe !=nil {_bdgg :=_fefe .ValAttr ;_dgfb ._fgd =&_bdgg ;_ecac =true ;break ;};};for _ ,_dbd :=range _ddca .VertAlign {if _dbd !=nil {_bdeb :=_dbd .ValAttr ==_eg .ST_VerticalAlignRunSuperscript ;
_dgfb ._faeeg =&_bdeb ;_gbab :=_dbd .ValAttr ==_eg .ST_VerticalAlignRunSubscript ;_dgfb ._fedg =&_gbab ;_ecac =true ;break ;};};for _ ,_bbb :=range _ddca .Color {if _bbb !=nil {_dgfb ._ebfg =_cfd .getColorStringFromSmlColor (_bbb );_ecac =true ;break ;
};};_aage :=_dfbd .GetBorder ();if _aage .Top !=nil {_dgfb ._cgbe =_cfd .getBorder (_aage .Top );_ecac =true ;};if _aage .Bottom !=nil {_dgfb ._ecad =_cfd .getBorder (_aage .Bottom );_ecac =true ;};if _aage .Left !=nil {_dgfb ._bda =_cfd .getBorder (_aage .Left );
_ecac =true ;};if _aage .Right !=nil {_dgfb ._eged =_cfd .getBorder (_aage .Right );_ecac =true ;};if _dfbd .Wrapped (){_dgfb ._fbd =true ;_ecac =true ;};if _cgd :=_dfbd .GetVerticalAlignment ();_cgd !=_aa .ST_VerticalAlignmentUnset {_dgfb ._acb =_cgd ;
_ecac =true ;};if _gec :=_dfbd .GetHorizontalAlignment ();_gec !=_aa .ST_HorizontalAlignmentUnset {_dgfb ._dfbc =_gec ;_ecac =true ;};};if _ecac {return _dgfb ;};return nil ;};func (_efga *convertContext )makePagespans (){_efga ._eedg =[]*pagespan {};_fedc :=0.0;
_agf :=0;for _bbd ,_cd :=range _efga ._bga {_efag :=_cd ._egg ;if _fedc +_efag <=_efga ._fdeb {_cd ._begf =_fedc ;_fedc +=_efag ;}else {_cd ._begf =0;_efga ._eedg =append (_efga ._eedg ,&pagespan {_dagae :_fedc ,_fedd :_agf ,_bcec :_bbd });_fedc =_efag ;
_agf =_bbd ;};};_efga ._eedg =append (_efga ._eedg ,&pagespan {_dagae :_fedc ,_fedd :_agf ,_bcec :len (_efga ._bga )});};type page struct{_eaeg []*pageRow ;_gac bool ;_beb []*_d .Image ;_dfg *pagespan ;_beef *rowspan ;};const _ee =0.64;func (_fgc *convertContext )getStyleFromCell (_eba _g .Cell ,_cega ,_abde *style )*style {_gbd :=_eba .X ();
_begc :=_fgc .getStyle (_gbd .SAttr );_gagf (_begc ,_cega );_gagf (_begc ,_abde );return _begc ;};func (_gcf *convertContext )getContentFromCell (_cbf _g .Cell ,_gcc *style ,_dagd float64 ,_dcde bool )([]*line ,_aa .ST_CellType ){_gdd :=_cbf .X ();var _ggb []*symbol ;
switch _gdd .TAttr {case _aa .ST_CellTypeS :_ebeb :=_gdd .V ;if _ebeb !=nil {_bdc ,_cgec :=_e .Atoi (*_ebeb );if _cgec ==nil {_eca :=_gcf ._cage .SharedStrings .X ().Si [_bdc ];if _eca .T !=nil {_ggb =_gcf .getSymbolsFromString (*_eca .T ,_gcc );}else if _eca .R !=nil {_ggb =_gcf .getSymbolsFromR (_eca .R ,_gcc );
};};};case _aa .ST_CellTypeB :_cbd :=_gdd .V ;if _cbd !=nil {if *_cbd =="\u0030"{_ggb =_gcf .getSymbolsFromString ("\u0046\u0041\u004cS\u0045",_gcc );}else {_ggb =_gcf .getSymbolsFromString ("\u0054\u0052\u0055\u0045",_gcc );};};default:_ggb =_gcf .getSymbolsFromString (_cbf .GetFormattedValue (),_gcc );
};_fgg :=0.0;_gfbc :=0.0;var _cdg []*line ;var _dgb bool ;if _gcc !=nil {if _gcc ._faeeg !=nil {if *_gcc ._faeeg {_dgb =true ;};};if _gcc ._fedg !=nil {if *_gcc ._fedg {_dgb =true ;};};};if _dcde {_cdg =[]*line {};_faa :=_dagd -2*_gf ;_bacg :=[]*symbol {};
for _ ,_ecdb :=range _ggb {_cece (_ecdb );if _fgg +_ecdb ._dgfc >=_faa {_ccce :=_faae (_bacg );if _dgb {_ccce /=_ee ;};_cdg =append (_cdg ,&line {_ccfg :_gfbc ,_cbc :_bacg ,_bbcd :_ccce });_bacg =[]*symbol {_ecdb };_fgg =_ecdb ._dgfc ;_gfbc +=_ccce ;}else {_ecdb ._fag =_fgg ;
_fgg +=_ecdb ._dgfc ;_bacg =append (_bacg ,_ecdb );};};_cagg :=_faae (_bacg );if _dgb {_cagg /=_ee ;};if len (_bacg )> 0{_cdg =append (_cdg ,&line {_ccfg :_gfbc ,_cbc :_bacg ,_bbcd :_cagg });};}else {for _ ,_fae :=range _ggb {_cece (_fae );_fae ._fag =_fgg ;
_fgg +=_fae ._dgfc ;};if len (_ggb )> 0{_cdg =[]*line {&line {_cbc :_ggb ,_bbcd :_faae (_ggb )}};};};_bfgb :=_gdd .TAttr ;if _bfgb ==_aa .ST_CellTypeUnset {_bfgb =_aa .ST_CellTypeN ;};return _cdg ,_bfgb ;};func (_ffa *convertContext )getImage (_eccg _b .Image ,_dege ,_efgg ,_eac ,_aeee ,_egdba ,_gdff float64 ,_ecg _dg .ImgPart )*_d .Image {_aeee +=_ffa ._eef ;
_eac +=_ffa ._gagg ;_ade ,_fdbg :=_dg .GetImage (_ffa ._aeef ,_eccg ,_dege ,_efgg ,_eac ,_aeee ,_egdba ,_gdff ,_ecg );if _fdbg !=nil {_ac .Log .Debug ("\u0043\u0061\u006eno\u0074\u0020\u0067\u0065\u0074\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_fdbg );
return nil ;};return _ade ;};func (_gfcb *convertContext )getBorder (_aeg *_aa .CT_BorderPr )*border {_cadg :=&border {};switch _aeg .StyleAttr {case _aa .ST_BorderStyleThin :_cadg ._agfa =_gc ;case _aa .ST_BorderStyleMedium :_cadg ._agfa =_gc *2;case _aa .ST_BorderStyleThick :_cadg ._agfa =_gc *4;
};if _cadg ._agfa ==0.0{return nil ;};if _cce :=_aeg .Color ;_cce !=nil {_bbcg :=_gfcb .getColorStringFromSmlColor (_cce );if _bbcg !=nil {_cadg ._ffc =_d .ColorRGBFromHex (*_bbcg );}else {_cadg ._ffc =_d .ColorBlack ;};};return _cadg ;};func (_ede *convertContext )alignSymbolsHorizontally (_ffe *cell ,_efcg _aa .ST_HorizontalAlignment ){if _efcg ==_aa .ST_HorizontalAlignmentUnset {switch _ffe ._debe {case _aa .ST_CellTypeB :_efcg =_aa .ST_HorizontalAlignmentCenter ;
case _aa .ST_CellTypeN :_efcg =_aa .ST_HorizontalAlignmentRight ;default:_efcg =_aa .ST_HorizontalAlignmentLeft ;};};var _eadc float64 ;for _ ,_accd :=range _ffe ._fdg {switch _efcg {case _aa .ST_HorizontalAlignmentLeft :_eadc =_gf ;case _aa .ST_HorizontalAlignmentRight :_decc :=_cafa (_accd ._cbc );
_eadc =_ffe ._gacg -_gf -_decc ;case _aa .ST_HorizontalAlignmentCenter :_dgba :=_cafa (_accd ._cbc );_eadc =(_ffe ._gacg -_dgba )/2;};for _ ,_fcfg :=range _accd ._cbc {_fcfg ._fag +=_eadc ;};};};var _egce =map[uint32 ]_d .PageSize {1:_d .PageSize {8.5*_bf .Inch ,11*_bf .Inch },2:_d .PageSize {8.5*_bf .Inch ,11*_bf .Inch },3:_d .PageSize {11*_bf .Inch ,17*_bf .Inch },4:_d .PageSize {17*_bf .Inch ,11*_bf .Inch },5:_d .PageSize {8.5*_bf .Inch ,14*_bf .Inch },6:_d .PageSize {5.5*_bf .Inch ,8.5*_bf .Inch },7:_d .PageSize {7.5*_bf .Inch ,10*_bf .Inch },8:_d .PageSize {_dcfe (297),_dcfe (420)},9:_d .PageSize {_dcfe (210),_dcfe (297)},10:_d .PageSize {_dcfe (210),_dcfe (297)},11:_d .PageSize {_dcfe (148),_dcfe (210)},70:_d .PageSize {_dcfe (105),_dcfe (148)},12:_d .PageSize {_dcfe (250),_dcfe (354)},13:_d .PageSize {_dcfe (182),_dcfe (257)},14:_d .PageSize {8.5*_bf .Inch ,13*_bf .Inch },20:_d .PageSize {4.125*_bf .Inch ,9.5*_bf .Inch },27:_d .PageSize {_dcfe (110),_dcfe (220)},28:_d .PageSize {_dcfe (162),_dcfe (229)},34:_d .PageSize {_dcfe (250),_dcfe (176)},29:_d .PageSize {_dcfe (324),_dcfe (458)},30:_d .PageSize {_dcfe (229),_dcfe (324)},31:_d .PageSize {_dcfe (114),_dcfe (162)},37:_d .PageSize {3.88*_bf .Inch ,7.5*_bf .Inch },43:_d .PageSize {_dcfe (100),_dcfe (148)},69:_d .PageSize {_dcfe (200),_dcfe (148)}};
var _gd =_dcfe (1);const (FontStyle_Regular FontStyle =0;FontStyle_Bold FontStyle =1;FontStyle_Italic FontStyle =2;FontStyle_BoldItalic FontStyle =3;);func (_ae *convertContext )determineMaxIndexes (){var _ecd ,_agg int ;_ecd =int (_ae ._caged .MaxColumnIdx ());
_dd :=_ae ._caged .Rows ();if len (_dd )> 0{_agg =int (_dd [len (_dd )-1].RowNumber ());};for _ ,_cee :=range _ae ._feb {if _cee ._cbde >=_agg {_agg =_cee ._cbde +1;};if _cee ._bbdb >=_ecd {_ecd =_cee ._bbdb +1;};};_ae ._cef =_agg ;_ae ._ddcf =_ecd ;};
const _df =2;func (_ggcd *convertContext )makeTextStyleFromCellStyle (_eaf *style )*_d .TextStyle {_eeac :=_ggcd ._aeef .NewTextStyle ();if _eaf ==nil {_eeac .FontSize =_dg .DefaultFontSize ;_eeac .Font =_dg .AssignStdFontByName (_eeac ,_dg .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][FontStyle_Regular ]);
return &_eeac ;};if _gadf (_eaf ._bdca ){_eeac .Underline =true ;_eeac .UnderlineStyle =_d .TextDecorationLineStyle {Offset :0.5,Thickness :_dcfe (1/32)};};var _aaaf FontStyle ;if _gadf (_eaf ._gef )&&_gadf (_eaf ._fge ){_aaaf =FontStyle_BoldItalic ;}else if _gadf (_eaf ._gef ){_aaaf =FontStyle_Bold ;
}else if _gadf (_eaf ._fge ){_aaaf =FontStyle_Italic ;}else {_aaaf =FontStyle_Regular ;};_bafd :="\u0064e\u0066\u0061\u0075\u006c\u0074";if _eaf ._gbf !=nil {_bafd =*_eaf ._gbf ;};if _bfb ,_eebe :=_dg .StdFontsMap [_bafd ];_eebe {_eeac .Font =_dg .AssignStdFontByName (_eeac ,_bfb [_aaaf ]);
}else if _gcge :=_dg .GetRegisteredFont (_bafd ,_aaaf );_gcge !=nil {_eeac .Font =_gcge ;}else {_ac .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0025\u0073\u0020\u0077\u0069\u0074h\u0020\u0073\u0074\u0079\u006c\u0065\u0020\u0025s\u0020i\u0073\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002c\u0020\u0072\u0065\u0073\u0065\u0074 \u0074\u006f\u0020\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u002e",_bafd ,_aaaf );
_eeac .Font =_dg .AssignStdFontByName (_eeac ,_dg .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][_aaaf ]);};if _eaf ._fgd !=nil {_eeac .FontSize =*_eaf ._fgd ;};if _eaf ._ebfg !=nil {_eeac .Color =_d .ColorRGBFromHex (*_eaf ._ebfg );};if _eaf ._faeeg !=nil &&*_eaf ._faeeg {_eeac .FontSize *=_ee ;
}else if _eaf ._fedg !=nil &&*_eaf ._fedg {_eeac .FontSize *=_ee ;};return &_eeac ;};func (_ebfc *convertContext )getColorFromTheme (_cgaa uint32 )string {_eabf :=_ebfc ._cage .Themes ();if len (_eabf )!=0{_cfda :=_eabf [0];if _agdd :=_cfda .ThemeElements ;
_agdd !=nil {if _dedc :=_agdd .ClrScheme ;_dedc !=nil {switch _cgaa {case 0:return _dg .GetColorStringFromDmlColor (_dedc .Lt1 );case 1:return _dg .GetColorStringFromDmlColor (_dedc .Dk1 );case 2:return _dg .GetColorStringFromDmlColor (_dedc .Lt2 );case 3:return _dg .GetColorStringFromDmlColor (_dedc .Dk2 );
case 4:return _dg .GetColorStringFromDmlColor (_dedc .Accent1 );case 5:return _dg .GetColorStringFromDmlColor (_dedc .Accent2 );case 6:return _dg .GetColorStringFromDmlColor (_dedc .Accent3 );case 7:return _dg .GetColorStringFromDmlColor (_dedc .Accent4 );
case 8:return _dg .GetColorStringFromDmlColor (_dedc .Accent5 );case 9:return _dg .GetColorStringFromDmlColor (_dedc .Accent6 );};};};};return "";};func (_bgg *convertContext )drawSheet (){for _ed ,_gdf :=range _bgg ._eedg {_bdgd :=len (_gdf ._aaff );if _ed ==len (_bgg ._eedg )-1{for _gbc :=len (_gdf ._aaff )-1;
_gbc >=0;_gbc --{if !_gdf ._aaff [_gbc ]._gac {_bdgd =_gbc ;};};};_bccc :=_gdf ._aaff [:_bdgd ];for _ ,_egd :=range _bccc {_bgg ._aeef .NewPage ();_bgg .drawPage (_egd );};};};func (_ccgg *convertContext )getStyleFromRPrElt (_ecgg *_aa .CT_RPrElt )*style {if _ecgg ==nil {return nil ;
};_cff :=&style {};_cff ._gbf =&_ecgg .RFont .ValAttr ;if _ffg :=_ecgg .B ;_ffg !=nil {_dge :=_ffg .ValAttr ==nil ||*_ffg .ValAttr ;_cff ._gef =&_dge ;};if _faf :=_ecgg .I ;_faf !=nil {_ffac :=_faf .ValAttr ==nil ||*_faf .ValAttr ;_cff ._fge =&_ffac ;};
if _fcfe :=_ecgg .U ;_fcfe !=nil {_bgc :=_fcfe .ValAttr ==_aa .ST_UnderlineValuesSingle ||_fcfe .ValAttr ==_aa .ST_UnderlineValuesUnset ;_cff ._bdca =&_bgc ;};if _fgga :=_ecgg .VertAlign ;_fgga !=nil {_bfcd :=_fgga .ValAttr ==_eg .ST_VerticalAlignRunSuperscript ;
_cff ._faeeg =&_bfcd ;_eaa :=_fgga .ValAttr ==_eg .ST_VerticalAlignRunSubscript ;_cff ._fedg =&_eaa ;};if _bcge :=_ecgg .Sz ;_bcge !=nil {_dgdg :=_bcge .ValAttr ;_cff ._fgd =&_dgdg ;};if _adea :=_ecgg .Color ;_adea !=nil {_cff ._ebfg =_ccgg .getColorStringFromSmlColor (_adea );
};return _cff ;};func (_bab *convertContext )addRowToPage (_caab []*cell ,_cecf int ){_ccd :=0.0;_aaf :=_bab ._fdeb ;for _ ,_gdec :=range _caab {if len (_gdec ._fdg )!=0{_gdec ._bbfa =_ccd ;_ccd =_gdec ._ccca +_gdec ._gacg ;};};for _dag :=len (_caab )-1;
_dag >=0;_dag --{_bbeg :=_caab [_dag ];if len (_bbeg ._fdg )!=0{_bbeg ._fbae =_aaf ;_aaf =_bbeg ._ccca ;};};_bab ._cabb ._eaeg =append (_bab ._cabb ._eaeg ,&pageRow {_badb :_cecf ,_ffdg :_caab });};type symbol struct{_dcdfa string ;_fag float64 ;_bcdf float64 ;
_dgfc float64 ;_gafg *_d .TextStyle ;_dad string ;};func _dcfe (_fddfe float64 )float64 {return _fddfe *_bf .Millimeter };type convertContext struct{_aeef *_d .Creator ;_cage *_g .Workbook ;_gdcbb *_de .Theme ;_caged *_g .Sheet ;_cdd *_g .StyleSheet ;_cef int ;
_ddcf int ;_eedg []*pagespan ;_cabb *page ;_bga []*colInfo ;_dac []*rowInfo ;_fcd []*rowspan ;_eef float64 ;_gagg float64 ;_gaae float64 ;_fdeb float64 ;_bag []*mergedCell ;_feb []*anchor ;};type pagespan struct{_dagae float64 ;_aaff []*page ;_fedd int ;
_bcec int ;};var _efda =[]string {"\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0030\u0030","\u0030\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0038\u0030\u0030\u0030","\u0038\u0030\u0030\u0030\u0038\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0063\u0030\u0063\u0030\u0063\u0030","\u0038\u0030\u0038\u0030\u0038\u0030","\u0039\u0039\u0039\u0039\u0066\u0066","\u0039\u0039\u0033\u0033\u0036\u0036","\u0066\u0066\u0066\u0066\u0063\u0063","\u0063\u0063\u0066\u0066\u0066\u0066","\u0036\u0036\u0030\u0030\u0036\u0036","\u0066\u0066\u0038\u0030\u0038\u0030","\u0030\u0030\u0036\u0036\u0063\u0063","\u0063\u0063\u0063\u0063\u0066\u0066","\u0030\u0030\u0030\u0030\u0038\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0030\u0030\u0063\u0063\u0066\u0066","\u0063\u0063\u0066\u0066\u0066\u0066","\u0063\u0063\u0066\u0066\u0063\u0063","\u0066\u0066\u0066\u0066\u0039\u0039","\u0039\u0039\u0063\u0063\u0066\u0066","\u0066\u0066\u0039\u0039\u0063\u0063","\u0063\u0063\u0039\u0039\u0066\u0066","\u0066\u0066\u0063\u0063\u0039\u0039","\u0033\u0033\u0036\u0036\u0066\u0066","\u0033\u0033\u0063\u0063\u0063\u0063","\u0039\u0039\u0063\u0063\u0030\u0030","\u0066\u0066\u0063\u0063\u0030\u0030","\u0066\u0066\u0039\u0039\u0030\u0030","\u0066\u0066\u0036\u0036\u0030\u0030","\u0036\u0036\u0036\u0036\u0039\u0039","\u0039\u0036\u0039\u0036\u0039\u0036","\u0030\u0030\u0033\u0033\u0036\u0036","\u0033\u0033\u0039\u0039\u0036\u0036","\u0030\u0030\u0033\u0033\u0030\u0030","\u0033\u0033\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0036\u0036","\u0033\u0033\u0033\u0033\u0039\u0039","\u0033\u0033\u0033\u0033\u0033\u0033"};
func (_feg *convertContext )imageFromAnchor (_efaga *anchor ,_faaf ,_geeaa float64 )_b .Image {if _efaga ._deac !=nil {return _efaga ._deac ;};if _efaga ._edcb !=nil {_ceb ,_ccdg :=_dg .MakeImageFromChartSpace (_efaga ._edcb ,_faaf ,_geeaa ,_feg ._gdcbb );
if _ccdg !=nil {_ac .Log .Debug ("C\u0061\u006e\u006e\u006f\u0074\u0020\u006d\u0061\u006b\u0065\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067e\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u0068\u0061\u0072tS\u0070\u0061\u0063e\u003a \u0025\u0073",_ccdg );
return nil ;};return _ceb ;};return nil ;};func (_afg *convertContext )makeAnchors (){_afb ,_fa :=_afg ._caged .GetDrawing ();if _afb !=nil {for _ ,_fdd :=range _afb .EG_Anchor {_ba :=&anchor {};if _cf :=_fdd .TwoCellAnchor ;_cf !=nil {_db ,_afd :=_cf .From ,_cf .To ;
if _db ==nil ||_afd ==nil {return ;};_ba ._fggd =int (_db .Row );_ba ._daae =_dg .FromSTCoordinate (_db .RowOff );_ba ._bdcd =int (_db .Col );_ba ._eccc =_dg .FromSTCoordinate (_db .ColOff );_ba ._cbde =int (_afd .Row );_ba ._bgfe =_dg .FromSTCoordinate (_afd .RowOff );
_ba ._bbdb =int (_afd .Col );_ba ._dgfd =_dg .FromSTCoordinate (_afd .ColOff );if _ffd :=_cf .Choice ;_ffd !=nil {if _gdb :=_ffd .Pic ;_gdb !=nil {if _ad :=_gdb .BlipFill ;_ad !=nil {if _ge :=_ad .Blip ;_ge !=nil {if _gee :=_ge .EmbedAttr ;_gee !=nil {for _ ,_dfc :=range _fa .X ().Relationship {if _dfc .IdAttr ==*_gee {for _ ,_aag :=range _afg ._cage .Images {if _aag .Target ()==_dfc .TargetAttr {_efg ,_aca :=_bb .Open (_aag .Path ());
if _aca !=nil {_ac .Log .Debug ("\u004fp\u0065\u006e\u0020\u0069m\u0061\u0067\u0065\u0020\u0066i\u006ce\u0020e\u0072\u0072\u006f\u0072\u003a\u0020\u0025s",_aca );continue ;};_cc ,_ ,_aca :=_b .Decode (_efg );if _aca !=nil {_ac .Log .Debug ("\u0044\u0065\u0063\u006fde\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020%\u0073",_aca );
continue ;};_ba ._deac =_cc ;};};};};};};};}else if _efgd :=_ffd .GraphicFrame ;_efgd !=nil {if _dc :=_efgd .Graphic ;_dc !=nil {if _ga :=_dc .GraphicData ;_ga !=nil {for _ ,_bec :=range _ga .Any {if _fc ,_eb :=_bec .(*_ec .Chart );_eb {for _ ,_ce :=range _fa .X ().Relationship {if _ce .IdAttr ==_fc .IdAttr {_ca :=_afg ._cage .GetChartByTargetId (_ce .TargetAttr );
if _ca !=nil {_ba ._edcb =_ca ;};};};};};};};};};};if _ba ._deac !=nil ||_ba ._edcb !=nil {_afg ._feb =append (_afg ._feb ,_ba );};};};};type line struct{_ccfg float64 ;_cbc []*symbol ;_bbcd float64 ;};