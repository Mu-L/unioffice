//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package convert ;import (_ga "github.com/unidoc/unioffice/v2/common/logger";_f "github.com/unidoc/unioffice/v2/common/tempstorage";_cf "github.com/unidoc/unioffice/v2/internal/convertutils";_ef "github.com/unidoc/unioffice/v2/measurement";_de "github.com/unidoc/unioffice/v2/schema/soo/dml";
_gfg "github.com/unidoc/unioffice/v2/schema/soo/dml/chart";_gf "github.com/unidoc/unioffice/v2/schema/soo/ofc/sharedTypes";_aa "github.com/unidoc/unioffice/v2/schema/soo/sml";_ge "github.com/unidoc/unioffice/v2/spreadsheet";_cg "github.com/unidoc/unioffice/v2/spreadsheet/formula";
_ab "github.com/unidoc/unioffice/v2/spreadsheet/reference";_d "github.com/unidoc/unipdf/v3/creator";_e "github.com/unidoc/unipdf/v3/model";_c "image";_b "math";_g "sort";_bg "strconv";);func (_gbbg *convertContext )getImage (_ebbc _c .Image ,_adcce ,_bcae ,_bee ,_gbac ,_ccba ,_gfbd float64 ,_bde _cf .ImgPart )*_d .Image {_gbac +=_gbbg ._gac ;
_bee +=_gbbg ._fcf ;_ddbb ,_cdb :=_cf .GetImage (_gbbg ._ggec ,_ebbc ,_adcce ,_bcae ,_bee ,_gbac ,_ccba ,_gfbd ,_bde );if _cdb !=nil {_ga .Log .Debug ("\u0043\u0061\u006eno\u0074\u0020\u0067\u0065\u0074\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_cdb );
return nil ;};return _ddbb ;};const _af =1.5;func (_eacb *convertContext )makeCols (){_agef :=_eacb ._bfbf ;_bdc :=_agef .X ();_ad :=[]*colInfo {};_gfde :=[]colWidthRange {};if _edc :=_bdc .Cols ;len (_edc )> 0{for _ ,_gdad :=range _edc [0].Col {_dfb :=_da ;
if _fgcc :=_gdad .WidthAttr ;_fgcc !=nil {if *_fgcc > 0.83{*_fgcc -=0.83;};if *_fgcc <=1{_dfb =*_fgcc *11;}else {_dfb =5+*_fgcc *6;};};_gef :=int (_gdad .MinAttr -1);_bec :=int (_gdad .MaxAttr -1);_gfde =append (_gfde ,colWidthRange {_bfg :_gef ,_gbcf :_bec ,_abbc :_dfb ,_caeb :_eacb .getStyle (_gdad .StyleAttr )});
};};_ebb :=0;for _aea :=0;_aea <=_eacb ._cfae ;_aea ++{if _aea < _eacb ._dcgb ||(_aea > _eacb ._deg &&_eacb ._deg > 0){continue ;};var _dd float64 ;var _ffd *style ;if len (_gfde )==0{_dd =_da ;}else if _ebb < len (_gfde ){_cge :=_gfde [_ebb ];if _aea >=_cge ._bfg &&_aea <=_cge ._gbcf {_dd =_cge ._abbc ;
_ffd =_cge ._caeb ;if _aea ==_cge ._gbcf {_ebb ++;};}else {continue ;};};_ad =append (_ad ,&colInfo {_aaga :_dd ,_cbg :_ffd });};_cged :=0.0;for _ ,_dea :=range _ad {_cged +=_dea ._aaga ;};_eacb ._fce =1.0;if _cged > _eacb ._gggf {_eacb ._fce =_eacb ._gggf /_cged ;
for _ ,_fdgb :=range _ad {_fdgb ._aaga *=_eacb ._fce ;};};_eacb ._aggf =_ad ;};const _geb =0.64;const _bd =15.0;func (_gbd *convertContext )makeRows (){_bgf :=[]*rowInfo {};_bgec :=_gbd ._bfbf .Rows ();_ecf :=0;_feg :=0.0;for _fdd ,_dbc :=range _bgec {if _fdd < _gbd ._ceef ||(_fdd > _gbd ._caf &&_gbd ._caf > 0){continue ;
};_ecf ++;_deb :=int (_dbc .RowNumber ());if _deb > _ecf {for _gee :=_ecf ;_gee < _deb ;_gee ++{_bgf =append (_bgf ,&rowInfo {_dbbf :_bd /_gb });_feg +=_bd /_gb ;};_ecf =_deb ;};var _acb float64 ;if _dbc .X ().HtAttr ==nil {_acb =_bd ;}else {_acb =*_dbc .X ().HtAttr ;
};_bgf =append (_bgf ,&rowInfo {_dbbf :_acb /_gb ,_bdb :true ,_dega :_gbd .getStyle (_dbc .X ().SAttr )});_feg +=_acb /_gb ;};for _adg :=len (_bgf );_adg < _gbd ._ccc ;_adg ++{_bgf =append (_bgf ,&rowInfo {_dbbf :_bd /_gb });_feg +=_bd /_gb ;};if _gbd ._efg ||_feg >=_gbd ._fgea {_gafb :=_gbd ._fce ;
if _gbd ._fgea /_feg < _gbd ._fce {_gafb =_gbd ._fgea /_feg ;};for _ ,_efb :=range _bgf {_efb ._dbbf *=_gafb ;};};_gbd ._gbgg =_bgf ;};type pageRow struct{_gfdf int ;_ceab []*cell ;};const _cgg =2;func (_gdd *convertContext )fillPages (){for _dbb ,_efcd :=range _gdd ._ddc {_ffa :=_gdd ._gbgg [_efcd ._bgdae :_efcd ._ege ];
for _aee ,_aafe :=range _ffa {_bag :=0;_bfcg :=0.0;_ded :=[]*cell {};if _aafe ._bdb {for _ ,_adfd :=range _aafe ._acad {_dcc :=_gdd ._cfef [_bag ];_gdd ._bfbc =_dcc ._bcbd [_dbb ];_gdd ._bfbc ._dccd =true ;_bab :=_adfd ._gcgd ;if _bfcg +_bab > _dcc ._afag {_gdd .addRowToPage (_ded ,_aee );
_ded =[]*cell {_adfd };_bfcg =_bab ;_bag ++;}else {_adfd ._aeba =_bfcg ;_ded =append (_ded ,_adfd );_bfcg +=_bab ;};};if len (_ded )> 0{_cbad :=_gdd ._cfef [_bag ];_gdd ._bfbc =_cbad ._bcbd [_dbb ];_gdd ._bfbc ._dccd =true ;_gdd .addRowToPage (_ded ,_aee );
};};};};};func (_fae *convertContext )determineMaxIndexes (){var _egf ,_ed int ;_egf =int (_fae ._bfbf .MaxColumnIdx ());_df :=_fae ._bfbf .Rows ();if len (_df )> 0{_ed =int (_df [len (_df )-1].RowNumber ());};for _ ,_fb :=range _fae ._cbfd {if _fb ._daee >=_ed {_ed =_fb ._daee +1;
};if _fb ._beb >=_egf {_egf =_fb ._beb +1;};};_fae ._ccc =_ed ;_fae ._cfae =_egf ;};var _dabec =[]string {"\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0030\u0030","\u0030\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0038\u0030\u0030\u0030","\u0038\u0030\u0030\u0030\u0038\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0063\u0030\u0063\u0030\u0063\u0030","\u0038\u0030\u0038\u0030\u0038\u0030","\u0039\u0039\u0039\u0039\u0066\u0066","\u0039\u0039\u0033\u0033\u0036\u0036","\u0066\u0066\u0066\u0066\u0063\u0063","\u0063\u0063\u0066\u0066\u0066\u0066","\u0036\u0036\u0030\u0030\u0036\u0036","\u0066\u0066\u0038\u0030\u0038\u0030","\u0030\u0030\u0036\u0036\u0063\u0063","\u0063\u0063\u0063\u0063\u0066\u0066","\u0030\u0030\u0030\u0030\u0038\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0030\u0030\u0063\u0063\u0066\u0066","\u0063\u0063\u0066\u0066\u0066\u0066","\u0063\u0063\u0066\u0066\u0063\u0063","\u0066\u0066\u0066\u0066\u0039\u0039","\u0039\u0039\u0063\u0063\u0066\u0066","\u0066\u0066\u0039\u0039\u0063\u0063","\u0063\u0063\u0039\u0039\u0066\u0066","\u0066\u0066\u0063\u0063\u0039\u0039","\u0033\u0033\u0036\u0036\u0066\u0066","\u0033\u0033\u0063\u0063\u0063\u0063","\u0039\u0039\u0063\u0063\u0030\u0030","\u0066\u0066\u0063\u0063\u0030\u0030","\u0066\u0066\u0039\u0039\u0030\u0030","\u0066\u0066\u0036\u0036\u0030\u0030","\u0036\u0036\u0036\u0036\u0039\u0039","\u0039\u0036\u0039\u0036\u0039\u0036","\u0030\u0030\u0033\u0033\u0036\u0036","\u0033\u0033\u0039\u0039\u0036\u0036","\u0030\u0030\u0033\u0033\u0030\u0030","\u0033\u0033\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0036\u0036","\u0033\u0033\u0033\u0033\u0039\u0039","\u0033\u0033\u0033\u0033\u0033\u0033"};
type colWidthRange struct{_bfg int ;_gbcf int ;_abbc float64 ;_caeb *style ;};const _be =0.25;func (_gae *convertContext )makeCells (){_gg :=_gae ._bfbf ;_ega :=_gg .Rows ();_ebbg :=0;for _egaa ,_adf :=range _gae ._gbgg {if _egaa < _gae ._ceef ||(_egaa > _gae ._caf &&_gae ._caf > 0){continue ;
};_adf ._acad =[]*cell {};_cea :=0.0;_fbg :=_adf ._dega ;if _adf ._bdb {_fgf :=_ega [_ebbg ];_ebbg ++;_bfd :=_adf ._dbbf ;for _ ,_gec :=range _fgf .Cells (){_ged ,_fgcf :=_ab .ParseCellReference (_gec .Reference ());if _fgcf !=nil {_ga .Log .Debug ("\u0043\u0061\u006e\u006eo\u0074\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0061\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u003a \u0025\u0073",_fgcf );
continue ;};if int (_ged .ColumnIdx )< _gae ._dcgb ||(int (_ged .ColumnIdx )> _gae ._deg &&_gae ._deg > 0){continue ;};_gcg :=_gae ._aggf [_ged .ColumnIdx ];_bcdf :=_gcg ._aaga ;_efe :=_bcdf ;_ede :=_gcg ._cbg ;var _dfd ,_geec ,_cfe ,_gdg bool ;for _ ,_afc :=range _gae ._geff {if _ged .RowIdx >=_afc ._cfbb &&_ged .RowIdx <=_afc ._aaffc &&_ged .ColumnIdx >=_afc ._ffbf &&_ged .ColumnIdx <=_afc ._gdf {if _ged .ColumnIdx ==_afc ._ffbf &&_ged .RowIdx ==_afc ._cfbb {_bcdf =_afc ._aggaa ;
_bfd =_afc ._cgee ;};_dfd =_ged .RowIdx !=_afc ._cfbb ;_geec =_ged .RowIdx !=_afc ._aaffc ;_cfe =_ged .ColumnIdx !=_afc ._ffbf ;_gdg =_ged .ColumnIdx !=_afc ._gdf ;};};var _ecb *style ;for _ ,_aaa :=range _gae ._fec {_gede ,_agag ,_eea :=_ab .ParseRangeReference (_aaa .Reference ());
if _eea !=nil ||_gede .RowIdx > _ged .RowIdx ||_gede .ColumnIdx > _ged .ColumnIdx ||_agag .RowIdx < _ged .RowIdx ||_agag .ColumnIdx < _ged .ColumnIdx ||_gae ._dca .StyleSheet .X ().TableStyles ==nil {continue ;};_bca :=_ged .RowIdx ==_gede .RowIdx ;for _ ,_efbc :=range _gae ._dca .StyleSheet .X ().TableStyles .TableStyle {if _aaa .X ().TableStyleInfo .NameAttr !=nil &&_efbc .NameAttr ==*_aaa .X ().TableStyleInfo .NameAttr {for _ ,_fcd :=range _efbc .TableStyleElement {if !_bca &&_fcd .TypeAttr ==_aa .ST_TableStyleTypeWholeTable {_ecb =_gae .getDxfStyle (_fcd .DxfIdAttr );
};if _bca &&_fcd .TypeAttr ==_aa .ST_TableStyleTypeHeaderRow {_ecb =_gae .getDxfStyle (_fcd .DxfIdAttr );};};};};};_gbag :=_gae .getStyleFromCell (_gec ,_fbg ,_ede ,_ecb );var _cbc ,_cggae ,_aef ,_gbg bool ;var _dbd ,_ddf ,_bbf ,_aaf *border ;var _bce _aa .ST_VerticalAlignment ;
var _bfaa _aa .ST_HorizontalAlignment ;if _gbag !=nil {if !_dfd {_dbd =_gbag ._adca ;};if !_geec {_ddf =_gbag ._aadgb ;};if !_cfe {_bbf =_gbag ._efgg ;};if !_gdg {_aaf =_gbag ._gce ;};if _ddf !=nil &&_ddf ._fbce > _cea {_cea =_ddf ._fbce ;};_bce =_gbag ._ebdbg ;
_bfaa =_gbag ._gca ;if _gbag ._ddca !=nil {_cbc =*_gbag ._ddca ;};if _gbag ._fafd !=nil {_cggae =*_gbag ._fafd ;};_aef =_gbag ._dgaf ;_gbg =_gbag ._dag ;};var _gfb _d .Color ;if _gbag !=nil &&_gbag ._aegf !=nil {_gfb =_d .ColorRGBFromHex (*_gbag ._aegf );
};_dga ,_bea :=_gae .getContentFromCell (_gg ,_gec ,_gbag ,_bcdf ,_aef ,_gbg );_dba :=&cell {_bbdb :_bea ,_bgff :_bcdf ,_gcgd :_efe ,_cga :_bfd ,_bdgf :_dga ,_bfba :_dbd ,_faaeg :_ddf ,_fdb :_bbf ,_cca :_aaf ,_gcgc :_cbc ,_gcfd :_cggae ,_gbcd :_gfb };_gae .alignSymbolsHorizontally (_dba ,_bfaa );
_gae .alignSymbolsVertically (_dba ,_bce );_adf ._acad =append (_adf ._acad ,_dba );};};_adf ._fbfb =_cea ;};};const _da =64.0;const (FontStyle_Regular FontStyle =0;FontStyle_Bold FontStyle =1;FontStyle_Italic FontStyle =2;FontStyle_BoldItalic FontStyle =3;
);func (_fcc *convertContext )getSymbolsFromR (_cad []*_aa .CT_RElt ,_aced *style )[]*symbol {_gcdg :=[]*symbol {};for _ ,_cddb :=range _cad {_bgda :=_fcc .combineCellStyleWithRPrElt (_aced ,_cddb .RPr );for _ ,_ggeb :=range _cddb .T {_gcdg =append (_gcdg ,&symbol {_gafd :string (_ggeb ),_dad :_fcc .makeTextStyleFromCellStyle (_bgda )});
};};return _gcdg ;};func (_eacc *convertContext )makeRowspans (){var _faf float64 ;_fbgc :=0;for _beaf ,_bdd :=range _eacc ._gbgg {_acbe :=_bdd ._dbbf +_bdd ._fbfb ;if _faf +_acbe <=_eacc ._fgea {_bdd ._gffg =_faf ;_faf +=_acbe ;}else {_eacc ._ddc =append (_eacc ._ddc ,&rowspan {_gbe :_faf ,_bgdae :_fbgc ,_ege :_beaf });
_fbgc =_beaf ;_bdd ._gffg =0;_faf =_acbe ;};};_eacc ._ddc =append (_eacc ._ddc ,&rowspan {_gbe :_faf ,_bgdae :_fbgc ,_ege :len (_eacc ._gbgg )});};func (_bb *convertContext )makeMergedCells (){_fgb :=[]*mergedCell {};for _ ,_ebe :=range _bb ._bfbf .MergedCells (){_ddg ,_gbc ,_fcb :=_ab .ParseRangeReference (_ebe .Reference ());
if _fcb !=nil {_ga .Log .Debug ("\u0065\u0072r\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u006d\u0065\u0072\u0067\u0065\u0064\u0020\u0063\u0065\u006c\u006c: \u0025\u0073",_fcb );continue ;};_edg :=mergedCell {_cfbb :_ddg .RowIdx ,_ffbf :_ddg .ColumnIdx ,_aaffc :_gbc .RowIdx ,_gdf :_gbc .ColumnIdx };
for _eef :=_edg ._ffbf -1;_eef < _edg ._gdf ;_eef ++{_edg ._aggaa +=_bb ._aggf [_eef ]._aaga ;};for _cgga :=_edg ._cfbb -1;_cgga < _edg ._aaffc ;_cgga ++{_edg ._cgee +=_bb ._gbgg [_cgga ]._dbbf ;};_fgb =append (_fgb ,&_edg );};_bb ._geff =_fgb ;};type page struct{_bcbb []*pageRow ;
_dccd bool ;_bcdfa []*_d .Image ;_faeb *pagespan ;_agga *rowspan ;};func _aag (_dcde []*symbol )float64 {_efbd :=0.0;for _ ,_cee :=range _dcde {if _cee ._bfae > _efbd {_efbd =_cee ._bfae ;};};return _efbd ;};

// RegisterFontsFromDirectory registers all fonts from the given directory automatically detecting font families and styles.
func RegisterFontsFromDirectory (dirName string )error {return _cf .RegisterFontsFromDirectory (dirName )};func (_cfeg *convertContext )makePagespans (){_cfeg ._cfef =[]*pagespan {};_dae :=0.0;_fad :=0;for _gea ,_becb :=range _cfeg ._aggf {_cfc :=_becb ._aaga ;
if _dae +_cfc <=_cfeg ._gggf {_becb ._dgc =_dae ;_dae +=_cfc ;}else {_becb ._dgc =0;_cfeg ._cfef =append (_cfeg ._cfef ,&pagespan {_afag :_dae ,_gdbc :_fad ,_gaec :_gea });_dae =_cfc ;_fad =_gea ;};};_cfeg ._cfef =append (_cfeg ._cfef ,&pagespan {_afag :_dae ,_gdbc :_fad ,_gaec :len (_cfeg ._aggf )});
};func _cgdf (_ffeg ,_gbdd *style ){if _gbdd ==nil {return ;};if _ffeg ==nil {_ffeg =_gbdd ;return ;};if _ffeg ._aegf ==nil {_ffeg ._aegf =_gbdd ._aegf ;};if _ffeg ._ccdd ==nil {_ffeg ._ccdd =_gbdd ._ccdd ;};if _ffeg ._aeac ==nil {_ffeg ._aeac =_gbdd ._aeac ;
};if _ffeg ._aeb ==nil {_ffeg ._aeb =_gbdd ._aeb ;};if _ffeg ._dfe ==nil {_ffeg ._dfe =_gbdd ._dfe ;};if _ffeg ._bbe ==nil {_ffeg ._bbe =_gbdd ._bbe ;};if _ffeg ._dcbg ==nil {_ffeg ._dcbg =_gbdd ._dcbg ;};if _ffeg ._ddca ==nil {_ffeg ._ddca =_gbdd ._ddca ;
};if _ffeg ._fafd ==nil {_ffeg ._fafd =_gbdd ._fafd ;};if _ffeg ._adca ==nil {_ffeg ._adca =_gbdd ._adca ;};if _ffeg ._aadgb ==nil {_ffeg ._aadgb =_gbdd ._aadgb ;};if _ffeg ._efgg ==nil {_ffeg ._efgg =_gbdd ._efgg ;};if _ffeg ._gce ==nil {_ffeg ._gce =_gbdd ._gce ;
};if _ffeg ._ebdbg ==_aa .ST_VerticalAlignmentUnset {_ffeg ._ebdbg =_gbdd ._ebdbg ;};if _ffeg ._gca ==_aa .ST_HorizontalAlignmentUnset {_ffeg ._gca =_gbdd ._gca ;};};func (_gfdc *convertContext )drawPage (_ade *page ){_cfeb :=_gfdc ._gac ;_gga :=_gfdc ._fcf ;
for _ ,_fga :=range _ade ._bcbb {_bcf :=_gfdc ._gbgg [_fga ._gfdf ];for _ ,_cdd :=range _fga ._ceab {var _aded float64 ;if _fga ._gfdf > 1{_aded =_gfdc ._gbgg [_fga ._gfdf -1]._fbfb ;};var _gfga ,_aafb float64 ;if _cbd :=_cdd ._bfba ;_cbd !=nil {_gfga =_cbd ._fbce ;
};if _fgad :=_cdd ._faaeg ;_fgad !=nil {_aafb =_fgad ._fbce ;};_fgdc :=_cfeb +_bcf ._gffg -0.5*(_aded -_gfga );_afb :=_cfeb +_bcf ._gffg +_bcf ._dbbf +0.5*(_bcf ._fbfb +_aafb );_bffa :=_gga +_cdd ._aeba ;_gcb :=_bffa +_cdd ._gcgd ;if _cdd ._gbcd !=nil &&_cdd ._gbcd !=_d .ColorBlack {_cf .FillRectangle (_gfdc ._ggec ,_bffa ,_fgdc ,_gcb -_bffa ,_afb -_fgdc ,_cdd ._gbcd );
};};};for _ ,_dda :=range _ade ._bcbb {_dcb :=_gfdc ._gbgg [_dda ._gfdf ];for _ ,_fged :=range _dda ._ceab {_dcd :=_fged ._fbde < _fged ._aeba ;_bbc :=_fged ._bffaa > _fged ._aeba +_fged ._bgff ;var _gafbb ,_ecba bool ;for _ ,_acaa :=range _fged ._bdgf {for _ ,_ccb :=range _acaa ._gebb {if _dcd &&!_gafbb {_gafbb =_ccb ._cgbf < 0;
};if _bbc &&!_ecba {_ecba =_fged ._bgff < _ccb ._cgbf +_ccb ._ggge ;};if _fged ._aeba +_ccb ._cgbf >=_fged ._fbde &&_fged ._aeba +_ccb ._cgbf +_ccb ._ggge <=_fged ._bffaa {_fag :=_gfdc ._ggec .NewStyledParagraph ();_gge :=_gga +_fged ._aeba +_ccb ._cgbf ;
_bgd :=_cfeb +_dcb ._gffg +_acaa ._cdgg -_ccb ._bfae -_efed (0.5);_fag .SetPos (_gge ,_bgd );var _bef *_d .TextChunk ;if _ccb ._caga !=""{_bef =_fag .AddExternalLink (_ccb ._gafd ,_ccb ._caga );}else {_bef =_fag .Append (_ccb ._gafd );};if _ccb ._dad !=nil {_bef .Style =*_ccb ._dad ;
};_gfdc ._ggec .Draw (_fag );};};};var _adc ,_gff ,_abbb ,_gffb ,_gcfg ,_aab float64 ;var _bfeb ,_abgb ,_bgfa ,_ggg _d .Color ;if _cag :=_fged ._bfba ;_cag !=nil {_adc =_cag ._fbce ;_bfeb =_cag ._cbagc ;};if _afec :=_fged ._faaeg ;_afec !=nil {_gff =_afec ._fbce ;
_abgb =_afec ._cbagc ;};if _ffac :=_fged ._fdb ;_ffac !=nil {_abbb =_ffac ._fbce ;_gcfg =_abbb /2;_bgfa =_ffac ._cbagc ;};if _eag :=_fged ._cca ;_eag !=nil {_gffb =_eag ._fbce ;_aab =_gffb /2;_ggg =_eag ._cbagc ;};var _eaf float64 ;if _dda ._gfdf > 1{_eaf =_gfdc ._gbgg [_dda ._gfdf -1]._fbfb ;
};_acf :=_cfeb +_dcb ._gffg -0.5*(_eaf -_adc );_aggg :=_cfeb +_dcb ._gffg +_dcb ._dbbf +0.5*(_dcb ._fbfb +_gff );_acd :=_gga +_fged ._aeba ;_fbc :=_acd +_fged ._gcgd ;_cf .DrawLine (_gfdc ._ggec ,_acd ,_acf ,_fbc ,_acf ,_adc ,_bfeb );_cf .DrawLine (_gfdc ._ggec ,_acd ,_aggg ,_fbc ,_aggg ,_gff ,_abgb );
if !_gafbb {_cf .DrawLine (_gfdc ._ggec ,_acd -_gcfg ,_acf ,_acd -_gcfg ,_aggg ,_abbb ,_bgfa );};if !_ecba {_cf .DrawLine (_gfdc ._ggec ,_fbc -_aab ,_acf ,_fbc -_aab ,_aggg ,_gffb ,_ggg );};};};for _ ,_fed :=range _ade ._bcdfa {if _fed !=nil {_gfdc ._ggec .Draw (_fed );
};};};func (_dec *convertContext )makeTextStyleFromCellStyle (_ccf *style )*_d .TextStyle {_faeg :=_dec ._ggec .NewTextStyle ();if _ccf ==nil {_faeg .FontSize =_cf .DefaultFontSize ;_faeg .Font =_cf .AssignStdFontByName (_faeg ,_cf .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][FontStyle_Regular ]);
return &_faeg ;};if _eaa (_ccf ._dcbg ){_faeg .Underline =true ;_faeg .UnderlineStyle =_d .TextDecorationLineStyle {Offset :0.5,Thickness :_efed (1/32)};};var _gecd FontStyle ;if _eaa (_ccf ._dfe )&&_eaa (_ccf ._bbe ){_gecd =FontStyle_BoldItalic ;}else if _eaa (_ccf ._dfe ){_gecd =FontStyle_Bold ;
}else if _eaa (_ccf ._bbe ){_gecd =FontStyle_Italic ;}else {_gecd =FontStyle_Regular ;};_gbcfd :="\u0064e\u0066\u0061\u0075\u006c\u0074";if _ccf ._ccdd !=nil {_gbcfd =*_ccf ._ccdd ;};if _cagc ,_dagc :=_cf .StdFontsMap [_gbcfd ];_dagc {_faeg .Font =_cf .AssignStdFontByName (_faeg ,_cagc [_gecd ]);
}else if _cbe :=_cf .GetRegisteredFont (_gbcfd ,_gecd );_cbe !=nil {_faeg .Font =_cbe ;}else {_ga .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0025\u0073\u0020\u0077\u0069\u0074h\u0020\u0073\u0074\u0079\u006c\u0065\u0020\u0025s\u0020i\u0073\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002c\u0020\u0072\u0065\u0073\u0065\u0074 \u0074\u006f\u0020\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u002e",_gbcfd ,_gecd );
_faeg .Font =_cf .AssignStdFontByName (_faeg ,_cf .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][_gecd ]);};if _ccf ._aeb !=nil {_faeg .FontSize =_b .Round (*_ccf ._aeb *_dec ._fce );};if _ccf ._aeac !=nil {_faeg .Color =_d .ColorRGBFromHex (*_ccf ._aeac );
};if _ccf ._ddca !=nil &&*_ccf ._ddca {_faeg .FontSize *=_geb ;}else if _ccf ._fafd !=nil &&*_ccf ._fafd {_faeg .FontSize *=_geb ;};return &_faeg ;};

// FontStyle represents a kind of font styling. It can be FontStyle_Regular, FontStyle_Bold, FontStyle_Italic and FontStyle_BoldItalic.
type FontStyle =_cf .FontStyle ;

// Options contains the options for convert process
type Options struct{

// DefaultPageSize is applied when there is no page size explicitly set in the document.
// A4 is the default option.
DefaultPageSize _cf .PageSize ;};func (_adcc *convertContext )getContentFromCell (_ead *_ge .Sheet ,_cbag _ge .Cell ,_gfgc *style ,_fbgg float64 ,_gedc ,_ecff bool )([]*line ,_aa .ST_CellType ){if _ecff {return []*line {},_aa .ST_CellTypeS ;};_ace :=_cbag .X ();
var _dgd []*symbol ;switch _ace .TAttr {case _aa .ST_CellTypeS :_dcbd :=_ace .V ;if _dcbd !=nil {_aegc ,_gddf :=_bg .Atoi (*_dcbd );if _gddf ==nil {_dgee :=_adcc ._dca .SharedStrings .X ().Si [_aegc ];if _dgee .T !=nil {_dgd =_adcc .getSymbolsFromString (*_dgee .T ,_gfgc );
}else if _dgee .R !=nil {_dgd =_adcc .getSymbolsFromR (_dgee .R ,_gfgc );};};};case _aa .ST_CellTypeB :_gdc :=_ace .V ;if _gdc !=nil {if *_gdc =="\u0030"{_dgd =_adcc .getSymbolsFromString ("\u0046\u0041\u004cS\u0045",_gfgc );}else {_dgd =_adcc .getSymbolsFromString ("\u0054\u0052\u0055\u0045",_gfgc );
};};case _aa .ST_CellTypeStr :if _ace .F !=nil {_efa :=_cg .NewEvaluator ();_gedf :=_ead .FormulaContext ().Cell (_cbag .Reference (),_efa );_dgd =_adcc .getSymbolsFromString (_gedf .Value (),_gfgc );};default:_dgd =_adcc .getSymbolsFromString (_cbag .GetFormattedValue (),_gfgc );
};_fcaf :=0.0;_bfb :=0.0;var _dbae []*line ;var _cac bool ;if _gfgc !=nil {if _gfgc ._ddca !=nil {if *_gfgc ._ddca {_cac =true ;};};if _gfgc ._fafd !=nil {if *_gfgc ._fafd {_cac =true ;};};};if _gedc {_dbae =[]*line {};_bddf :=_fbgg -2*_fg ;_gdda :=[]*symbol {};
for _ ,_bcdfg :=range _dgd {_abf (_bcdfg );if _fcaf +_bcdfg ._ggge >=_bddf {_fcdb :=_aag (_gdda );if _cac {_fcdb /=_geb ;};_dbae =append (_dbae ,&line {_cdgg :_bfb ,_gebb :_gdda ,_ceada :_fcdb });_gdda =[]*symbol {_bcdfg };_fcaf =_bcdfg ._ggge ;_bfb +=_fcdb ;
}else {_bcdfg ._cgbf =_fcaf ;_fcaf +=_bcdfg ._ggge ;_gdda =append (_gdda ,_bcdfg );};};_bccd :=_aag (_gdda );if _cac {_bccd /=_geb ;};if len (_gdda )> 0{_dbae =append (_dbae ,&line {_cdgg :_bfb ,_gebb :_gdda ,_ceada :_bccd });};}else {for _ ,_fbdd :=range _dgd {_abf (_fbdd );
_fbdd ._cgbf =_fcaf ;_fcaf +=_fbdd ._ggge ;};if len (_dgd )> 0{_dbae =[]*line {&line {_gebb :_dgd ,_ceada :_aag (_dgd )}};};};_faae :=_ace .TAttr ;if _faae ==_aa .ST_CellTypeUnset {_faae =_aa .ST_CellTypeN ;};return _dbae ,_faae ;};type border struct{_fbce float64 ;
_cbagc _d .Color ;};func (_bba *convertContext )makePages (){for _ ,_bac :=range _bba ._cfef {for _ ,_fde :=range _bba ._ddc {_bac ._bcbd =append (_bac ._bcbd ,&page {_bcbb :[]*pageRow {},_faeb :_bac ,_agga :_fde });};};};func (_dcg *convertContext )getSymbolsFromString (_cde string ,_cfb *style )[]*symbol {_bece :=[]*symbol {};
_bgbf :=_dcg .makeTextStyleFromCellStyle (_cfb );for _ ,_dgf :=range _cde {_bece =append (_bece ,&symbol {_gafd :string (_dgf ),_dad :_bgbf });};return _bece ;};func (_defe *convertContext )alignSymbolsVertically (_gbf *cell ,_aeab _aa .ST_VerticalAlignment ){var _aad float64 ;
switch _aeab {case _aa .ST_VerticalAlignmentTop :_aad =_cgg ;if _gbf ._gcgc {_aad -=_af ;}else if _gbf ._gcfd {_aad +=4*_af ;};for _ ,_cede :=range _gbf ._bdgf {_aad +=_cede ._ceada ;_cede ._cdgg =_aad ;_aad +=_bc ;};case _aa .ST_VerticalAlignmentCenter :_cfbg :=0.0;
for _ ,_bfdf :=range _gbf ._bdgf {_cfbg +=_bfdf ._ceada +_efed (1);};_aad =0.5*(_gbf ._cga -_cfbg );if _gbf ._gcgc {_aad -=2*_af ;}else if _gbf ._gcfd {_aad +=2*_af ;};for _ ,_cbf :=range _gbf ._bdgf {_aad +=_cbf ._ceada +0.5*_bc ;_cbf ._cdgg =_aad ;_aad +=0.5*_bc ;
};default:_aad =_gbf ._cga -_cgg ;if _gbf ._gcgc {_aad -=4*_af ;}else if _gbf ._gcfd {_aad +=_af ;};for _ggga :=len (_gbf ._bdgf )-1;_ggga >=0;_ggga --{_gbf ._bdgf [_ggga ]._cdgg =_aad ;_aad -=_gbf ._bdgf [_ggga ]._ceada ;_aad -=_bc ;};};};type convertContext struct{_ggec *_d .Creator ;
_dca *_ge .Workbook ;_eecg *_de .Theme ;_bfbf *_ge .Sheet ;_ddfc *_ge .StyleSheet ;_ccc int ;_cfae int ;_cfef []*pagespan ;_bfbc *page ;_aggf []*colInfo ;_gbgg []*rowInfo ;_ddc []*rowspan ;_gac float64 ;_fcf float64 ;_fgea float64 ;_gggf float64 ;_geff []*mergedCell ;
_cbfd []*anchor ;_fce float64 ;_dcgb int ;_deg int ;_ceef int ;_caf int ;_efg bool ;_fec []_ge .Table ;};var _gfd =_efed (0.0625);var _gb =3.025/_efed (1);func (_geaf *convertContext )distributeAnchors (){for _ ,_aafg :=range _geaf ._cbfd {_bfe ,_bdg :=_aafg ._bcfa ,_aafg ._bdef ;
_bced ,_beg :=_aafg ._abfe ,_aafg ._ggd ;_efbb ,_eba :=_aafg ._daee ,_aafg ._ecg ;_cgef ,_edea :=_aafg ._beb ,_aafg ._cada ;if _bfe < _geaf ._ceef ||(_efbb > _geaf ._caf &&_geaf ._caf > 0){continue ;};if _bced < _geaf ._dcgb ||(_cgef > _geaf ._deg &&_geaf ._deg > 0){continue ;
};var _bcdc ,_bcce ,_begb ,_fgd *page ;for _ ,_bcb :=range _geaf ._cfef {for _ ,_gab :=range _bcb ._bcbd {if _bfe >=_gab ._agga ._bgdae &&_bfe < _gab ._agga ._ege {if _bced >=_gab ._faeb ._gdbc &&_bced < _gab ._faeb ._gaec {_gab ._dccd =true ;_bcdc =_gab ;
};if _cgef >=_gab ._faeb ._gdbc &&_cgef < _gab ._faeb ._gaec {_gab ._dccd =true ;_bcce =_gab ;};};if _efbb >=_gab ._agga ._bgdae &&_efbb < _gab ._agga ._ege {if _bced >=_gab ._faeb ._gdbc &&_bced < _gab ._faeb ._gaec {_gab ._dccd =true ;_fgd =_gab ;};if _cgef >=_gab ._faeb ._gdbc &&_cgef < _gab ._faeb ._gaec {_gab ._dccd =true ;
_begb =_gab ;};};};};_cgb :=_bcdc !=_bcce ;_bbfe :=_bcdc !=_fgd ;if _cgb &&_bbfe {_ffdf :=_geaf ._aggf [_bced ]._dgc +_ef .FromEMU (_beg );_dbbb :=_bcdc ._faeb ._afag ;_def :=_geaf ._aggf [_cgef ]._dgc +_ef .FromEMU (_edea );_bcca :=_geaf ._gbgg [_bfe ]._gffg +_ef .FromEMU (_bdg );
_bcafb :=float64 (_bcdc ._agga ._gbe );_fbd :=_geaf ._gbgg [_efbb ]._gffg +_ef .FromEMU (_eba );_eab :=_def +_dbbb -_ffdf ;_add :=_fbd +_bcafb -_bcca ;_ebdb :=_geaf .imageFromAnchor (_aafg ,_eab ,_add );_bcdc ._bcdfa =append (_bcdc ._bcdfa ,_geaf .getImage (_ebdb ,_add ,_eab ,_ffdf ,_bcca ,_dbbb -_ffdf ,_bcafb -_bcca ,_cf .ImgPart_lt ));
_bcce ._bcdfa =append (_bcce ._bcdfa ,_geaf .getImage (_ebdb ,_add ,_eab ,0,_bcca ,_dbbb -_ffdf ,_bcafb -_bcca ,_cf .ImgPart_rt ));_fgd ._bcdfa =append (_fgd ._bcdfa ,_geaf .getImage (_ebdb ,_add ,_eab ,_ffdf ,0,_dbbb -_ffdf ,_bcafb -_bcca ,_cf .ImgPart_lb ));
_begb ._bcdfa =append (_begb ._bcdfa ,_geaf .getImage (_ebdb ,_add ,_eab ,0,0,_dbbb -_ffdf ,_bcafb -_bcca ,_cf .ImgPart_rb ));}else if _cgb {_ece :=_geaf ._gbgg [_bfe ]._gffg +_ef .FromEMU (_bdg );_cead :=_geaf ._gbgg [_efbb ]._gffg +_ef .FromEMU (_eba );
_ffb :=_geaf ._aggf [_bced ]._dgc +_ef .FromEMU (_beg );_cc :=_bcdc ._faeb ._afag ;_bcde :=_geaf ._aggf [_cgef ]._dgc +_ef .FromEMU (_edea );_aca :=_bcde +_cc -_ffb ;_ecfg :=_cead -_ece ;_faa :=_geaf .imageFromAnchor (_aafg ,_aca ,_ecfg );_bcdc ._bcdfa =append (_bcdc ._bcdfa ,_geaf .getImage (_faa ,_ecfg ,_aca ,_ffb ,_ece ,_cc -_ffb ,0,_cf .ImgPart_l ));
_bcce ._bcdfa =append (_bcce ._bcdfa ,_geaf .getImage (_faa ,_ecfg ,_aca ,0,_ece ,_cc -_ffb ,0,_cf .ImgPart_r ));}else if _bbfe {_egcf :=_geaf ._aggf [_bced ]._dgc +_ef .FromEMU (_beg );_aaad :=_geaf ._aggf [_cgef ]._dgc +_ef .FromEMU (_edea );_ffc :=_geaf ._gbgg [_bfe ]._gffg +_ef .FromEMU (_bdg );
_ceg :=float64 (_bcdc ._agga ._gbe );_baf :=_geaf ._gbgg [_efbb ]._gffg +_ef .FromEMU (_eba );_cgbg :=_aaad -_egcf ;_afcf :=_baf +_ceg -_ffc ;_eegd :=_geaf .imageFromAnchor (_aafg ,_cgbg ,_afcf );_bcdc ._bcdfa =append (_bcdc ._bcdfa ,_geaf .getImage (_eegd ,_afcf ,_cgbg ,_egcf ,_ffc ,0,_ceg -_ffc ,_cf .ImgPart_t ));
_fgd ._bcdfa =append (_fgd ._bcdfa ,_geaf .getImage (_eegd ,_afcf ,_cgbg ,_egcf ,0,0,_ceg -_ffc ,_cf .ImgPart_b ));}else {_gcf :=_geaf ._aggf [_bced ]._dgc +_ef .FromEMU (_beg );_fcdf :=_geaf ._aggf [_cgef ]._dgc +_ef .FromEMU (_edea );_gbb :=_geaf ._gbgg [_bfe ]._gffg +_ef .FromEMU (_bdg );
_cae :=_geaf ._gbgg [_efbb ]._gffg +_ef .FromEMU (_eba );_eebc :=_fcdf -_gcf ;_cef :=_cae -_gbb ;_bbfec :=_geaf .imageFromAnchor (_aafg ,_eebc ,_cef );_bcdc ._bcdfa =append (_bcdc ._bcdfa ,_geaf .getImage (_bbfec ,_cef ,_eebc ,_gcf ,_gbb ,0,0,_cf .ImgPart_whole ));
};};};func (_daeg *convertContext )alignSymbolsHorizontally (_fade *cell ,_dgdb _aa .ST_HorizontalAlignment ){if _dgdb ==_aa .ST_HorizontalAlignmentUnset {switch _fade ._bbdb {case _aa .ST_CellTypeB :_dgdb =_aa .ST_HorizontalAlignmentCenter ;case _aa .ST_CellTypeN :_dgdb =_aa .ST_HorizontalAlignmentRight ;
default:_dgdb =_aa .ST_HorizontalAlignmentLeft ;};};var _baff float64 ;for _ ,_dabd :=range _fade ._bdgf {switch _dgdb {case _aa .ST_HorizontalAlignmentLeft :_baff =_fg ;case _aa .ST_HorizontalAlignmentRight :_dabe :=_aadg (_dabd ._gebb );_baff =_fade ._bgff -_fg -_dabe ;
case _aa .ST_HorizontalAlignmentCenter :_geba :=_aadg (_dabd ._gebb );_baff =(_fade ._bgff -_geba )/2;};for _ ,_feb :=range _dabd ._gebb {_feb ._cgbf +=_baff ;};};};type anchor struct{_bbee _c .Image ;_cgedb *_gfg .ChartSpace ;_bcfa int ;_bdef int64 ;_abfe int ;
_ggd int64 ;_daee int ;_ecg int64 ;_beb int ;_cada int64 ;};type pagespan struct{_afag float64 ;_bcbd []*page ;_gdbc int ;_gaec int ;};func (_ecfe *convertContext )combineCellStyleWithRPrElt (_effec *style ,_gbeg *_aa .CT_RPrElt )*style {_cda :=*_effec ;
_bace :=_ecfe .getStyleFromRPrElt (_gbeg );if _bace ==nil {return &_cda ;};if _bace ._aeac !=nil {_cda ._aeac =_bace ._aeac ;};if _bace ._aeb !=nil {_cda ._aeb =_bace ._aeb ;};if _bace ._ccdd !=nil {_cda ._ccdd =_bace ._ccdd ;};if _bace ._dfe !=nil {_cda ._dfe =_bace ._dfe ;
};if _bace ._bbe !=nil {_cda ._bbe =_bace ._bbe ;};if _bace ._dcbg !=nil {_cda ._dcbg =_bace ._dcbg ;};if _bace ._ddca !=nil {_cda ._ddca =_bace ._ddca ;};if _bace ._fafd !=nil {_cda ._fafd =_bace ._fafd ;};return &_cda ;};func (_ebdf *convertContext )getColorStringFromSmlColor (_dcgaa *_aa .CT_Color )*string {var _egab string ;
if _dcgaa .RgbAttr !=nil {_egab =*_dcgaa .RgbAttr ;}else if _dcgaa .IndexedAttr !=nil &&*_dcgaa .IndexedAttr < 64{_egab =_dabec [*_dcgaa .IndexedAttr ];}else if _dcgaa .ThemeAttr !=nil {_egfd :=*_dcgaa .ThemeAttr ;_egab =_ebdf .getColorFromTheme (_egfd );
};if _egab ==""{return nil ;};if len (_egab )> 6{_egab =_egab [(len (_egab )-6):];};if _dcgaa .TintAttr !=nil {_cage :=*_dcgaa .TintAttr ;_egab =_cf .AdjustColorByTint (_egab ,_cage );};_egab ="\u0023"+_egab ;return &_egab ;};func _abf (_egb *symbol ){_fgcg :=_d .New ();
_ceaf :=_fgcg .NewStyledParagraph ();_ceaf .SetMargins (0,0,0,0);_gfce :=_ceaf .Append (_egb ._gafd );if _egb ._dad !=nil {_gfce .Style =*_egb ._dad ;};_egb ._bfae =_ceaf .Height ();if _egb ._ggge ==0{_egb ._ggge =_ceaf .Width ();};};type cell struct{_bbdb _aa .ST_CellType ;
_accg int ;_aeba float64 ;_bdgf []*line ;_bgff float64 ;_gcgd float64 ;_cga float64 ;_fbde float64 ;_bffaa float64 ;_fcbe *_d .TextStyle ;_bfba *border ;_faaeg *border ;_fdb *border ;_cca *border ;_gcgc bool ;_gcfd bool ;_gbcd _d .Color ;};func (_bgde *convertContext )getBorder (_bdge *_aa .CT_BorderPr )*border {_bfad :=&border {};
switch _bdge .StyleAttr {case _aa .ST_BorderStyleHair :_bfad ._fbce =_gfd /2;case _aa .ST_BorderStyleThin :_bfad ._fbce =_gfd ;case _aa .ST_BorderStyleMedium :_bfad ._fbce =_gfd *2;case _aa .ST_BorderStyleThick :_bfad ._fbce =_gfd *4;};if _bfad ._fbce ==0.0{return nil ;
};if _cfea :=_bdge .Color ;_cfea !=nil {_fdc :=_bgde .getColorStringFromSmlColor (_cfea );if _fdc !=nil {_bfad ._cbagc =_d .ColorRGBFromHex (*_fdc );}else {_bfad ._cbagc =_d .ColorBlack ;};};return _bfad ;};func (_ba *convertContext )makeAnchors (){_abe ,_cdf :=_ba ._bfbf .GetDrawing ();
if _abe !=nil {for _ ,_db :=range _abe .EG_Anchor {_efce :=&anchor {};if _dc :=_db .AnchorChoice .TwoCellAnchor ;_dc !=nil {_eeb ,_gba :=_dc .From ,_dc .To ;if _eeb ==nil ||_gba ==nil {return ;};_efce ._bcfa =int (_eeb .Row );_efce ._bdef =_cf .FromSTCoordinate (_eeb .RowOff );
_efce ._abfe =int (_eeb .Col );_efce ._ggd =_cf .FromSTCoordinate (_eeb .ColOff );_efce ._daee =int (_gba .Row );_efce ._ecg =_cf .FromSTCoordinate (_gba .RowOff );_efce ._beb =int (_gba .Col );_efce ._cada =_cf .FromSTCoordinate (_gba .ColOff );if _bgb :=_dc .ObjectChoicesChoice ;
_bgb !=nil {if _eff :=_bgb .Pic ;_eff !=nil {if _age :=_eff .BlipFill ;_age !=nil {if _afa :=_age .Blip ;_afa !=nil {if _gaf :=_afa .EmbedAttr ;_gaf !=nil {for _ ,_fa :=range _cdf .X ().Relationship {if _fa .IdAttr ==*_gaf {for _ ,_bcd :=range _ba ._dca .Images {if _bcd .Target ()==_fa .TargetAttr {_ff ,_agc :=_f .Open (_bcd .Path ());
if _agc !=nil {_ga .Log .Debug ("\u004fp\u0065\u006e\u0020\u0069m\u0061\u0067\u0065\u0020\u0066i\u006ce\u0020e\u0072\u0072\u006f\u0072\u003a\u0020\u0025s",_agc );continue ;};_eac ,_ ,_agc :=_c .Decode (_ff );if _agc !=nil {_ga .Log .Debug ("\u0044\u0065\u0063\u006fde\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020%\u0073",_agc );
continue ;};_efce ._bbee =_eac ;};};};};};};};}else if _egc :=_bgb .GraphicFrame ;_egc !=nil {if _cba :=_egc .Graphic ;_cba !=nil {if _bfc :=_cba .GraphicData ;_bfc !=nil {for _ ,_cfa :=range _bfc .Any {if _fgc ,_bff :=_cfa .(*_gfg .Chart );_bff {for _ ,_bcc :=range _cdf .X ().Relationship {if _bcc .IdAttr ==_fgc .IdAttr {_afe :=_ba ._dca .GetChartByTargetId (_bcc .TargetAttr );
if _afe !=nil {_efce ._cgedb =_afe ;};};};};};};};};};};if _efce ._bbee !=nil ||_efce ._cgedb !=nil {_ba ._cbfd =append (_ba ._cbfd ,_efce );};};};};func (_fagc *convertContext )getStyleFromCell (_aae _ge .Cell ,_gdac ,_ebc ,_cdbb *style )*style {if _cdbb !=nil {_cgdf (_cdbb ,_gdac );
_cgdf (_cdbb ,_ebc );return _cdbb ;};_cbfc :=_aae .X ();_dccc :=_fagc .getStyle (_cbfc .SAttr );_cgdf (_dccc ,_gdac );_cgdf (_dccc ,_ebc );return _dccc ;};func (_bbfc *convertContext )getColorFromTheme (_aabc uint32 )string {_cgbfd :=_bbfc ._dca .Themes ();
if len (_cgbfd )!=0{_ebcf :=_cgbfd [0];if _ecc :=_ebcf .ThemeElements ;_ecc !=nil {if _egbd :=_ecc .ClrScheme ;_egbd !=nil {switch _aabc {case 0:return _cf .GetColorStringFromDmlColor (_egbd .Lt1 );case 1:return _cf .GetColorStringFromDmlColor (_egbd .Dk1 );
case 2:return _cf .GetColorStringFromDmlColor (_egbd .Lt2 );case 3:return _cf .GetColorStringFromDmlColor (_egbd .Dk2 );case 4:return _cf .GetColorStringFromDmlColor (_egbd .Accent1 );case 5:return _cf .GetColorStringFromDmlColor (_egbd .Accent2 );case 6:return _cf .GetColorStringFromDmlColor (_egbd .Accent3 );
case 7:return _cf .GetColorStringFromDmlColor (_egbd .Accent4 );case 8:return _cf .GetColorStringFromDmlColor (_egbd .Accent5 );case 9:return _cf .GetColorStringFromDmlColor (_egbd .Accent6 );};};};};return "";};var _efba =map[uint32 ]_d .PageSize {1:_d .PageSize {8.5*_ef .Inch ,11*_ef .Inch },2:_d .PageSize {8.5*_ef .Inch ,11*_ef .Inch },3:_d .PageSize {11*_ef .Inch ,17*_ef .Inch },4:_d .PageSize {17*_ef .Inch ,11*_ef .Inch },5:_d .PageSize {8.5*_ef .Inch ,14*_ef .Inch },6:_d .PageSize {5.5*_ef .Inch ,8.5*_ef .Inch },7:_d .PageSize {7.5*_ef .Inch ,10*_ef .Inch },8:_d .PageSize {_efed (297),_efed (420)},9:_d .PageSize {_efed (210),_efed (297)},10:_d .PageSize {_efed (210),_efed (297)},11:_d .PageSize {_efed (148),_efed (210)},70:_d .PageSize {_efed (105),_efed (148)},12:_d .PageSize {_efed (250),_efed (354)},13:_d .PageSize {_efed (182),_efed (257)},14:_d .PageSize {8.5*_ef .Inch ,13*_ef .Inch },20:_d .PageSize {4.125*_ef .Inch ,9.5*_ef .Inch },27:_d .PageSize {_efed (110),_efed (220)},28:_d .PageSize {_efed (162),_efed (229)},34:_d .PageSize {_efed (250),_efed (176)},29:_d .PageSize {_efed (324),_efed (458)},30:_d .PageSize {_efed (229),_efed (324)},31:_d .PageSize {_efed (114),_efed (162)},37:_d .PageSize {3.88*_ef .Inch ,7.5*_ef .Inch },43:_d .PageSize {_efed (100),_efed (148)},69:_d .PageSize {_efed (200),_efed (148)}};
var _bc =_efed (1);

// ConvertToPdfWithOptions convert a sheet to PDF with given options.
func ConvertToPdfWithOptions (s *_ge .Sheet ,opts *Options )*_d .Creator {_fc :=s .X ();if _fc ==nil {return nil ;};var _cfd _d .PageSize ;_efc :=true ;_ae :=false ;if _fc .SheetPr !=nil &&_fc .SheetPr .PageSetUpPr !=nil &&_fc .SheetPr .PageSetUpPr .FitToPageAttr !=nil &&*_fc .SheetPr .PageSetUpPr .FitToPageAttr {_ae =true ;
};if _gfdd :=_fc .PageSetup ;_gfdd !=nil {_efc =_gfdd .OrientationAttr ==_aa .ST_OrientationLandscape ;if _cd :=_gfdd .PaperSizeAttr ;_cd !=nil {_cfd =_efba [*_cd ];};};if (_cfd ==_d .PageSize {}){_cfd =_cf .GetDefaultPageSize ();if opts !=nil &&opts .DefaultPageSize !=_cf .DefaultPageSize {_cfd =_cf .GetPageDimensions (opts .DefaultPageSize );
};};if _efc {_cfd [0],_cfd [1]=_cfd [1],_cfd [0];};_ac :=_d .New ();_ac .SetPageSize (_cfd );var _ca ,_cdc ,_eb ,_ea float64 ;if _dab :=_fc .PageMargins ;_dab !=nil {_eb =_dab .LeftAttr ;_ea =_dab .RightAttr ;_ca =_dab .TopAttr ;_cdc =_dab .BottomAttr ;
};if _eb < _be {_eb =_be ;};if _ea < _be {_ea =_be ;};if _ca < _eg {_ca =_eg ;};if _cdc < _eg {_cdc =_eg ;};_ca *=_ef .Inch ;_cdc *=_ef .Inch ;_eb *=_ef .Inch ;_ea *=_ef .Inch ;_ac .SetPageMargins (_eb ,_ea ,_ca ,_cdc );_ee :=s .Workbook ();var _cb *_de .Theme ;
if len (_ee .Themes ())> 0{_cb =_ee .Themes ()[0];};var _ec ,_ce ,_aeg ,_abc int ;for _ ,_ag :=range _ee .DefinedNames (){if _ag .Name ()=="\u005f\u0078l\u006e\u006d\u002eP\u0072\u0069\u006e\u0074\u005f\u0041\u0072\u0065\u0061"{_dg ,_dee ,_eeg ,_gfc :=_cf .ParseExcelRange (_ag .Content ());
if _gfc ==nil &&s .Name ()==_dg {_ec =int (_dee .ColumnIdx );_ce =int (_eeg .ColumnIdx );_aeg =int (_dee .RowIdx );_abc =int (_eeg .RowIdx );};};};_fe :=[]_ge .Table {};if _fc .TableParts !=nil &&_fc .TableParts .TablePart !=nil {_ebd :=0;_dgb :=s .Workbook ().Tables ();
_g .Slice (_dgb [:],func (_gd ,_bf int )bool {return _dgb [_gd ].X ().IdAttr < _dgb [_bf ].X ().IdAttr });for _ ,_bfa :=range s .Workbook ().Sheets (){if _bfa .Name ()==s .Name (){break ;}else {if _bfa .X ().TableParts !=nil &&_bfa .X ().TableParts .TablePart !=nil {_ebd +=len (_bfa .X ().TableParts .TablePart );
};};};if len (_dgb )>=_ebd +len (_fc .TableParts .TablePart ){_fe =append (_fe ,_dgb [_ebd :_ebd +len (_fc .TableParts .TablePart )]...);};};_cgd :=&convertContext {_ggec :_ac ,_bfbf :s ,_dca :s .Workbook (),_eecg :_cb ,_ddfc :&s .Workbook ().StyleSheet ,_gac :_ca ,_fcf :_eb ,_fgea :_cfd [1]-_cdc -_ca ,_gggf :_cfd [0]-_ea -_eb ,_dcgb :_ec ,_deg :_ce ,_ceef :_aeg ,_caf :_abc ,_efg :_ae ,_fec :_fe };
_cgd .makeAnchors ();_cgd .determineMaxIndexes ();if _cgd ._ccc ==0&&_cgd ._cfae ==0{_ac .NewPage ();return _ac ;};_cgd .makeCols ();_cgd .makeRows ();_cgd .makeMergedCells ();_cgd .makeCells ();_cgd .makePagespans ();_cgd .makeRowspans ();_cgd .makePages ();
_cgd .fillPages ();_cgd .distributeAnchors ();_cgd .drawSheet ();return _ac ;};func (_ebdc *convertContext )getStyleFromRPrElt (_agcb *_aa .CT_RPrElt )*style {if _agcb ==nil ||_agcb .RPrEltChoice ==nil ||len (_agcb .RPrEltChoice )==0{return nil ;};_eeff :=&style {};
for _ ,_cafd :=range _agcb .RPrEltChoice {if _cafd .RFont !=nil {_eeff ._ccdd =&_cafd .RFont .ValAttr ;};if _efcc :=_cafd .B ;_efcc !=nil {_fgbg :=_efcc .ValAttr ==nil ||*_efcc .ValAttr ;_eeff ._dfe =&_fgbg ;};if _fdbf :=_cafd .I ;_fdbf !=nil {_aebaf :=_fdbf .ValAttr ==nil ||*_fdbf .ValAttr ;
_eeff ._bbe =&_aebaf ;};if _bga :=_cafd .U ;_bga !=nil {_bfbca :=_bga .ValAttr ==_aa .ST_UnderlineValuesSingle ||_bga .ValAttr ==_aa .ST_UnderlineValuesUnset ;_eeff ._dcbg =&_bfbca ;};if _cagf :=_cafd .VertAlign ;_cagf !=nil {_baef :=_cagf .ValAttr ==_gf .ST_VerticalAlignRunSuperscript ;
_eeff ._ddca =&_baef ;_efgb :=_cagf .ValAttr ==_gf .ST_VerticalAlignRunSubscript ;_eeff ._fafd =&_efgb ;};if _acdg :=_cafd .Sz ;_acdg !=nil {_gbacb :=_acdg .ValAttr ;_eeff ._aeb =&_gbacb ;};if _adfa :=_cafd .Color ;_adfa !=nil {_eeff ._aeac =_ebdc .getColorStringFromSmlColor (_adfa );
};};return _eeff ;};func (_adfb *convertContext )drawSheet (){for _aeeg ,_fca :=range _adfb ._cfef {_gdb :=len (_fca ._bcbd );if _aeeg ==len (_adfb ._cfef )-1{for _abb :=len (_fca ._bcbd )-1;_abb >=0;_abb --{if !_fca ._bcbd [_abb ]._dccd {_gdb =_abb ;};
};};_eae :=_fca ._bcbd [:_gdb ];for _ ,_dce :=range _eae {_adfb ._ggec .NewPage ();_adfb .drawPage (_dce );};};};

// RegisterFont makes a PdfFont accessible for using in converting to PDF.
func RegisterFont (name string ,style FontStyle ,font *_e .PdfFont ){_cf .RegisterFont (name ,style ,font );};type symbol struct{_gafd string ;_cgbf float64 ;_bfae float64 ;_ggge float64 ;_dad *_d .TextStyle ;_caga string ;};func _aadg (_fegg []*symbol )float64 {_cgf :=0.0;
for _ ,_fgeg :=range _fegg {_cgf +=_fgeg ._ggge ;};return _cgf ;};func (_ddd *convertContext )imageFromAnchor (_dfbde *anchor ,_bfff ,_edge float64 )_c .Image {if _dfbde ._bbee !=nil {return _dfbde ._bbee ;};if _dfbde ._cgedb !=nil {_gbga ,_eabd :=_cf .MakeImageFromChartSpace (_dfbde ._cgedb ,_bfff ,_edge ,_ddd ._eecg ,_ddd ._dca );
if _eabd !=nil {_ga .Log .Debug ("C\u0061\u006e\u006e\u006f\u0074\u0020\u006d\u0061\u006b\u0065\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067e\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u0068\u0061\u0072tS\u0070\u0061\u0063e\u003a \u0025\u0073",_eabd );
return nil ;};return _gbga ;};return nil ;};const _fg =3;func (_dbac *convertContext )addRowToPage (_agcf []*cell ,_dfbd int ){_ccd :=0.0;_fdf :=_dbac ._gggf ;for _ ,_acc :=range _agcf {if len (_acc ._bdgf )!=0{_acc ._fbde =_ccd ;_ccd =_acc ._aeba +_acc ._bgff ;
};};for _fcdg :=len (_agcf )-1;_fcdg >=0;_fcdg --{_abgf :=_agcf [_fcdg ];if len (_abgf ._bdgf )!=0{_abgf ._bffaa =_fdf ;_fdf =_abgf ._aeba ;};};_dbac ._bfbc ._bcbb =append (_dbac ._bfbc ._bcbb ,&pageRow {_gfdf :_dfbd ,_ceab :_agcf });};type rowInfo struct{_gffg float64 ;
_bdb bool ;_dbbf float64 ;_dega *style ;_acad []*cell ;_fbfb float64 ;};type colInfo struct{_dgc float64 ;_aaga float64 ;_cbg *style ;};func (_ccg *convertContext )getStyle (_geg *uint32 )*style {_fagb :=&style {};_aeed :=false ;if _geg !=nil {_dcga :=_ccg ._ddfc .GetCellStyle (*_geg );
if _ccg ._ddfc .GetNumberFormat (_dcga .NumberFormat ()).GetFormat ()=="\u003b\u003b\u003b"{_fagb ._dag =true ;};_efcde :=_dcga .GetFill ();if _efcde !=nil &&_efcde .FillChoice !=nil &&_efcde .FillChoice .PatternFill !=nil {if _efcde .FillChoice .PatternFill .FgColor !=nil {_fagb ._aegf =_ccg .getColorStringFromSmlColor (_efcde .FillChoice .PatternFill .FgColor );
}else if _efcde .FillChoice .PatternFill .BgColor !=nil {_fagb ._aegf =_ccg .getColorStringFromSmlColor (_efcde .FillChoice .PatternFill .BgColor );};};_bae :=_dcga .GetFont ();for _ ,_daf :=range _bae .FontChoice {if _daf .Name !=nil {_fagb ._ccdd =&_daf .Name .ValAttr ;
_aeed =true ;}else if _daf .B !=nil {_fcbb :=_daf .B .ValAttr ==nil ||*_daf .B .ValAttr ;_fagb ._dfe =&_fcbb ;_aeed =true ;}else if _daf .I !=nil {_cgbga :=_daf .I .ValAttr ==nil ||*_daf .I .ValAttr ;_fagb ._bbe =&_cgbga ;_aeed =true ;}else if _daf .U !=nil {_ebf :=_daf .U .ValAttr ==_aa .ST_UnderlineValuesSingle ||_daf .U .ValAttr ==_aa .ST_UnderlineValuesUnset ;
_fagb ._dcbg =&_ebf ;_aeed =true ;}else if _daf .Sz !=nil {_ebfg :=_daf .Sz .ValAttr ;_fagb ._aeb =&_ebfg ;_aeed =true ;}else if _daf .VertAlign !=nil {_ebag :=_daf .VertAlign .ValAttr ==_gf .ST_VerticalAlignRunSuperscript ;_fagb ._ddca =&_ebag ;_fea :=_daf .VertAlign .ValAttr ==_gf .ST_VerticalAlignRunSubscript ;
_fagb ._fafd =&_fea ;_aeed =true ;}else if _daf .Color !=nil {_fagb ._aeac =_ccg .getColorStringFromSmlColor (_daf .Color );_aeed =true ;};};_gddb :=_dcga .GetBorder ();if _gddb .Top !=nil {_fagb ._adca =_ccg .getBorder (_gddb .Top );_aeed =true ;};if _gddb .Bottom !=nil {_fagb ._aadgb =_ccg .getBorder (_gddb .Bottom );
_aeed =true ;};if _gddb .Left !=nil {_fagb ._efgg =_ccg .getBorder (_gddb .Left );_aeed =true ;};if _gddb .Right !=nil {_fagb ._gce =_ccg .getBorder (_gddb .Right );_aeed =true ;};if _dcga .Wrapped (){_fagb ._dgaf =true ;_aeed =true ;};if _acdf :=_dcga .GetVerticalAlignment ();
_acdf !=_aa .ST_VerticalAlignmentUnset {_fagb ._ebdbg =_acdf ;_aeed =true ;};if _aceb :=_dcga .GetHorizontalAlignment ();_aceb !=_aa .ST_HorizontalAlignmentUnset {_fagb ._gca =_aceb ;_aeed =true ;};};if _aeed {return _fagb ;};return nil ;};func (_eeca *convertContext )getDxfStyle (_fgbf *uint32 )*style {_bcedb :=&style {};
_bacg :=false ;if _fgbf !=nil {var _eed *_aa .CT_Dxf ;for _aeeb ,_cbcg :=range _eeca ._ddfc .X ().Dxfs .Dxf {if uint32 (_aeeb )==*_fgbf {_eed =_cbcg ;};};if _eed ==nil {return nil ;};if _eed .Fill !=nil &&_eed .Fill .FillChoice !=nil &&_eed .Fill .FillChoice .PatternFill !=nil {if _eed .Fill .FillChoice .PatternFill .FgColor !=nil {_bcedb ._aegf =_eeca .getColorStringFromSmlColor (_eed .Fill .FillChoice .PatternFill .FgColor );
}else if _eed .Fill .FillChoice .PatternFill .BgColor !=nil {_bcedb ._aegf =_eeca .getColorStringFromSmlColor (_eed .Fill .FillChoice .PatternFill .BgColor );};};_fega :=_eed .Font ;for _ ,_bfdg :=range _fega .FontChoice {if _bfdg .Name !=nil {_bcedb ._ccdd =&_bfdg .Name .ValAttr ;
_bacg =true ;}else if _bfdg .B !=nil {_gdcc :=_bfdg .B .ValAttr ==nil ||*_bfdg .B .ValAttr ;_bcedb ._dfe =&_gdcc ;_bacg =true ;}else if _bfdg .I !=nil {_dbfg :=_bfdg .I .ValAttr ==nil ||*_bfdg .I .ValAttr ;_bcedb ._bbe =&_dbfg ;_bacg =true ;}else if _bfdg .U !=nil {_gedcb :=_bfdg .U .ValAttr ==_aa .ST_UnderlineValuesSingle ||_bfdg .U .ValAttr ==_aa .ST_UnderlineValuesUnset ;
_bcedb ._dcbg =&_gedcb ;_bacg =true ;}else if _bfdg .Sz !=nil {_dgbg :=_bfdg .Sz .ValAttr ;_bcedb ._aeb =&_dgbg ;_bacg =true ;}else if _bfdg .VertAlign !=nil {_effe :=_bfdg .VertAlign .ValAttr ==_gf .ST_VerticalAlignRunSuperscript ;_bcedb ._ddca =&_effe ;
_ffe :=_bfdg .VertAlign .ValAttr ==_gf .ST_VerticalAlignRunSubscript ;_bcedb ._fafd =&_ffe ;_bacg =true ;}else if _bfdg .Color !=nil {_bcedb ._aeac =_eeca .getColorStringFromSmlColor (_bfdg .Color );_bacg =true ;};};_gdccg :=_eed .Border ;if _gdccg !=nil {if _gdccg .Top !=nil {_bcedb ._adca =_eeca .getBorder (_gdccg .Top );
_bacg =true ;};if _gdccg .Bottom !=nil {_bcedb ._aadgb =_eeca .getBorder (_gdccg .Bottom );_bacg =true ;};if _gdccg .Left !=nil {_bcedb ._efgg =_eeca .getBorder (_gdccg .Left );_bacg =true ;};if _gdccg .Right !=nil {_bcedb ._gce =_eeca .getBorder (_gdccg .Right );
_bacg =true ;};};if _eed .Alignment !=nil {if _cdde :=_eed .Alignment .VerticalAttr ;_cdde !=_aa .ST_VerticalAlignmentUnset {_bcedb ._ebdbg =_cdde ;_bacg =true ;};if _ccag :=_eed .Alignment .HorizontalAttr ;_ccag !=_aa .ST_HorizontalAlignmentUnset {_bcedb ._gca =_ccag ;
_bacg =true ;};};};if _bacg {return _bcedb ;};return nil ;};

// ConvertToPdf converts a sheet to a PDF file. This package is beta, breaking changes can take place.
func ConvertToPdf (s *_ge .Sheet )*_d .Creator {return ConvertToPdfWithOptions (s ,nil )};func _eaa (_bbfb *bool )bool {return _bbfb !=nil &&*_bbfb };type mergedCell struct{_cfbb uint32 ;_ffbf uint32 ;_aaffc uint32 ;_gdf uint32 ;_aggaa float64 ;_cgee float64 ;
};type rowspan struct{_gbe float64 ;_bgdae int ;_ege int ;};type style struct{_aegf *string ;_aeac *string ;_aeb *float64 ;_ccdd *string ;_dfe *bool ;_bbe *bool ;_dcbg *bool ;_ddca *bool ;_fafd *bool ;_adca *border ;_aadgb *border ;_efgg *border ;_gce *border ;
_dgaf bool ;_ebdbg _aa .ST_VerticalAlignment ;_gca _aa .ST_HorizontalAlignment ;_dag bool ;};func _efed (_cecb float64 )float64 {return _cecb *_ef .Millimeter };type line struct{_cdgg float64 ;_gebb []*symbol ;_ceada float64 ;};const _eg =0.0;