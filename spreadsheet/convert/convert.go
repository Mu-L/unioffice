//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package convert ;import (_f "github.com/unidoc/unioffice/v2/common/logger";_aa "github.com/unidoc/unioffice/v2/common/tempstorage";_bd "github.com/unidoc/unioffice/v2/internal/convertutils";_dae "github.com/unidoc/unioffice/v2/measurement";_e "github.com/unidoc/unioffice/v2/schema/soo/dml";
_gb "github.com/unidoc/unioffice/v2/schema/soo/dml/chart";_cg "github.com/unidoc/unioffice/v2/schema/soo/ofc/sharedTypes";_ca "github.com/unidoc/unioffice/v2/schema/soo/sml";_dd "github.com/unidoc/unioffice/v2/spreadsheet";_ga "github.com/unidoc/unioffice/v2/spreadsheet/formula";
_af "github.com/unidoc/unioffice/v2/spreadsheet/reference";_de "github.com/unidoc/unipdf/v4/creator";_g "github.com/unidoc/unipdf/v4/model";_d "image";_b "math";_da "sort";_a "strconv";);func (_bddf *convertContext )getBorder (_efdf *_ca .CT_BorderPr )*border {_eacd :=&border {};
switch _efdf .StyleAttr {case _ca .ST_BorderStyleHair :_eacd ._gccg =_ead /2;case _ca .ST_BorderStyleThin :_eacd ._gccg =_ead ;case _ca .ST_BorderStyleMedium :_eacd ._gccg =_ead *2;case _ca .ST_BorderStyleThick :_eacd ._gccg =_ead *4;};if _eacd ._gccg ==0.0{return nil ;
};if _cgef :=_efdf .Color ;_cgef !=nil {_cbd :=_bddf .getColorStringFromSmlColor (_cgef );if _cbd !=nil {_eacd ._bcfbg =_de .ColorRGBFromHex (*_cbd );}else {_eacd ._bcfbg =_de .ColorBlack ;};};return _eacd ;};const _dg =3;func (_gca *convertContext )determineMaxIndexes (){var _gaa ,_cfb int ;
_gaa =int (_gca ._ebef .MaxColumnIdx ());_cefc :=_gca ._ebef .Rows ();if len (_cefc )> 0{_cfb =int (_cefc [len (_cefc )-1].RowNumber ());};for _ ,_fde :=range _gca ._ddcb {if _fde ._aegd >=_cfb {_cfb =_fde ._aegd +1;};if _fde ._gbfcb >=_gaa {_gaa =_fde ._gbfcb +1;
};};_gca ._cdbc =_cfb ;_gca ._cbc =_gaa ;};func (_bgde *convertContext )getStyleFromRPrElt (_ebac *_ca .CT_RPrElt )*style {if _ebac ==nil ||_ebac .RPrEltChoice ==nil ||len (_ebac .RPrEltChoice )==0{return nil ;};_aea :=&style {};for _ ,_fdeg :=range _ebac .RPrEltChoice {if _fdeg .RFont !=nil {_aea ._agbc =&_fdeg .RFont .ValAttr ;
};if _bccfe :=_fdeg .B ;_bccfe !=nil {_efea :=_bccfe .ValAttr ==nil ||*_bccfe .ValAttr ;_aea ._bdd =&_efea ;};if _fcba :=_fdeg .I ;_fcba !=nil {_cebg :=_fcba .ValAttr ==nil ||*_fcba .ValAttr ;_aea ._gcgac =&_cebg ;};if _befc :=_fdeg .U ;_befc !=nil {_dbdc :=_befc .ValAttr ==_ca .ST_UnderlineValuesSingle ||_befc .ValAttr ==_ca .ST_UnderlineValuesUnset ;
_aea ._fcgeg =&_dbdc ;};if _abgc :=_fdeg .VertAlign ;_abgc !=nil {_cdcf :=_abgc .ValAttr ==_cg .ST_VerticalAlignRunSuperscript ;_aea ._acf =&_cdcf ;_ebec :=_abgc .ValAttr ==_cg .ST_VerticalAlignRunSubscript ;_aea ._cbbf =&_ebec ;};if _bgcb :=_fdeg .Sz ;
_bgcb !=nil {_ecca :=_bgcb .ValAttr ;_aea ._feg =&_ecca ;};if _bdab :=_fdeg .Color ;_bdab !=nil {_aea ._dfbe =_bgde .getColorStringFromSmlColor (_bdab );};};return _aea ;};func (_efa *convertContext )makePages (){for _ ,_ecdg :=range _efa ._fgfg {for _ ,_eadd :=range _efa ._dfcc {_ecdg ._cfcc =append (_ecdg ._cfcc ,&page {_afg :[]*pageRow {},_gge :_ecdg ,_dfbg :_eadd });
};};};func (_cb *convertContext )fillPages (){for _cca ,_ffb :=range _cb ._dfcc {_cff :=_cb ._fagc [_ffb ._cbcb :_ffb ._eaff ];for _deda ,_agf :=range _cff {_bec :=0;_aae :=0.0;_dbbag :=[]*cell {};if _agf ._ceg {for _ ,_bfe :=range _agf ._aabb {_fec :=_cb ._fgfg [_bec ];
_cb ._geab =_fec ._cfcc [_cca ];_cb ._geab ._fbad =true ;_ggb :=_bfe ._fbdbd ;if _aae +_ggb > _fec ._bad {_cb .addRowToPage (_dbbag ,_deda );_dbbag =[]*cell {_bfe };_aae =_ggb ;_bec ++;}else {_bfe ._eag =_aae ;_dbbag =append (_dbbag ,_bfe );_aae +=_ggb ;
};};if len (_dbbag )> 0{_abgf :=_cb ._fgfg [_bec ];_cb ._geab =_abgf ._cfcc [_cca ];_cb ._geab ._fbad =true ;_cb .addRowToPage (_dbbag ,_deda );};};};};};type line struct{_gbef float64 ;_gage []*symbol ;_ecef float64 ;};func (_bba *convertContext )drawSheet (){for _gbfb ,_fgd :=range _bba ._fgfg {_egda :=len (_fgd ._cfcc );
if _gbfb ==len (_bba ._fgfg )-1{for _dece :=len (_fgd ._cfcc )-1;_dece >=0;_dece --{if !_fgd ._cfcc [_dece ]._fbad {_egda =_dece ;};};};_ddb :=_fgd ._cfcc [:_egda ];for _ ,_bccac :=range _ddb {_bba ._baee .NewPage ();_bba .drawPage (_bccac );};};};const _ef =0.0;
var _ag =_gegac (1);

// ConvertToPdf converts a sheet to a PDF file. This package is beta, breaking changes can take place.
func ConvertToPdf (s *_dd .Sheet )*_de .Creator {return ConvertToPdfWithOptions (s ,nil )};func (_ebe *convertContext )makeCells (){_faa :=_ebe ._ebef ;_abb :=_faa .Rows ();_aaf :=0;for _cdc ,_gfb :=range _ebe ._fagc {if _cdc < _ebe ._ccag ||(_cdc > _ebe ._ddcc &&_ebe ._ddcc > 0){continue ;
};_gfb ._aabb =[]*cell {};_eec :=0.0;_gddad :=_gfb ._fdfe ;if _gfb ._ceg {_efd :=_abb [_aaf ];_aaf ++;_fdb :=_gfb ._cfee ;for _ ,_ae :=range _efd .Cells (){_afbb ,_aga :=_af .ParseCellReference (_ae .Reference ());if _aga !=nil {_f .Log .Debug ("\u0043\u0061\u006e\u006eo\u0074\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0061\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u003a \u0025\u0073",_aga );
continue ;};if int (_afbb .ColumnIdx )< _ebe ._cfae ||(int (_afbb .ColumnIdx )> _ebe ._fage &&_ebe ._fage > 0){continue ;};_abe :=_ebe ._ccab [_afbb .ColumnIdx ];_gcaf :=_abe ._fdfa ;_ebb :=_gcaf ;_cafa :=_abe ._cecee ;var _cgd ,_fcd ,_cfa ,_dde bool ;
for _ ,_cc :=range _ebe ._efda {if _afbb .RowIdx >=_cc ._ccabb &&_afbb .RowIdx <=_cc ._ggf &&_afbb .ColumnIdx >=_cc ._gegbc &&_afbb .ColumnIdx <=_cc ._gdea {if _afbb .ColumnIdx ==_cc ._gegbc &&_afbb .RowIdx ==_cc ._ccabb {_gcaf =_cc ._fda ;_fdb =_cc ._deca ;
};_cgd =_afbb .RowIdx !=_cc ._ccabb ;_fcd =_afbb .RowIdx !=_cc ._ggf ;_cfa =_afbb .ColumnIdx !=_cc ._gegbc ;_dde =_afbb .ColumnIdx !=_cc ._gdea ;};};var _afdb *style ;for _ ,_dada :=range _ebe ._gaeb {_ddd ,_abc ,_bee :=_af .ParseRangeReference (_dada .Reference ());
if _bee !=nil ||_ddd .RowIdx > _afbb .RowIdx ||_ddd .ColumnIdx > _afbb .ColumnIdx ||_abc .RowIdx < _afbb .RowIdx ||_abc .ColumnIdx < _afbb .ColumnIdx ||_ebe ._bfag .StyleSheet .X ().TableStyles ==nil {continue ;};_ede :=_afbb .RowIdx ==_ddd .RowIdx ;for _ ,_cec :=range _ebe ._bfag .StyleSheet .X ().TableStyles .TableStyle {if _dada .X ().TableStyleInfo .NameAttr !=nil &&_cec .NameAttr ==*_dada .X ().TableStyleInfo .NameAttr {for _ ,_efe :=range _cec .TableStyleElement {if !_ede &&_efe .TypeAttr ==_ca .ST_TableStyleTypeWholeTable {_afdb =_ebe .getDxfStyle (_efe .DxfIdAttr );
};if _ede &&_efe .TypeAttr ==_ca .ST_TableStyleTypeHeaderRow {_afdb =_ebe .getDxfStyle (_efe .DxfIdAttr );};};};};};_aag :=_ebe .getStyleFromCell (_ae ,_gddad ,_cafa ,_afdb );var _fdc ,_fdbe ,_edac ,_daa bool ;var _ceb ,_dbbf ,_ebc ,_gbg *border ;var _ecb _ca .ST_VerticalAlignment ;
var _dbba _ca .ST_HorizontalAlignment ;if _aag !=nil {if !_cgd {_ceb =_aag ._eba ;};if !_fcd {_dbbf =_aag ._dfbb ;};if !_cfa {_ebc =_aag ._dfa ;};if !_dde {_gbg =_aag ._gbgg ;};if _dbbf !=nil &&_dbbf ._gccg > _eec {_eec =_dbbf ._gccg ;};_ecb =_aag ._aedg ;
_dbba =_aag ._febf ;if _aag ._acf !=nil {_fdc =*_aag ._acf ;};if _aag ._cbbf !=nil {_fdbe =*_aag ._cbbf ;};_edac =_aag ._aadc ;_daa =_aag ._afdbd ;};var _gbfc _de .Color ;if _aag !=nil &&_aag ._adcb !=nil {_gbfc =_de .ColorRGBFromHex (*_aag ._adcb );};
_ccg ,_cde :=_ebe .getContentFromCell (_faa ,_ae ,_aag ,_gcaf ,_edac ,_daa );_eca :=&cell {_ecc :_cde ,_gfcf :_gcaf ,_fbdbd :_ebb ,_bccfg :_fdb ,_dfab :_ccg ,_egb :_ceb ,_acgbc :_dbbf ,_bdac :_ebc ,_egde :_gbg ,_bff :_fdc ,_cdbg :_fdbe ,_aee :_gbfc };_ebe .alignSymbolsHorizontally (_eca ,_dbba );
_ebe .alignSymbolsVertically (_eca ,_ecb );_gfb ._aabb =append (_gfb ._aabb ,_eca );};};_gfb ._fdd =_eec ;};};const _gd =1.5;type page struct{_afg []*pageRow ;_fbad bool ;_dggc []*_de .Image ;_gge *pagespan ;_dfbg *rowspan ;};func (_fbd *convertContext )makeCols (){_gcc :=_fbd ._ebef ;
_fgbg :=_gcc .X ();_gbf :=[]*colInfo {};_gdd :=[]colWidthRange {};if _eda :=_fgbg .Cols ;len (_eda )> 0{for _ ,_bcc :=range _eda [0].Col {_bgc :=_fbc ;if _cfd :=_bcc .WidthAttr ;_cfd !=nil {if *_cfd > 0.83{*_cfd -=0.83;};if *_cfd <=1{_bgc =*_cfd *11;}else {_bgc =5+*_cfd *6;
};};_gfe :=int (_bcc .MinAttr -1);_cea :=int (_bcc .MaxAttr -1);_gdd =append (_gdd ,colWidthRange {_bbdg :_gfe ,_dbe :_cea ,_gdc :_bgc ,_ddag :_fbd .getStyle (_bcc .StyleAttr )});};};_fga :=0;for _cda :=0;_cda <=_fbd ._cbc ;_cda ++{if _cda < _fbd ._cfae ||(_cda > _fbd ._fage &&_fbd ._fage > 0){continue ;
};var _adca float64 ;var _eea *style ;if len (_gdd )==0{_adca =_fbc ;}else if _fga < len (_gdd ){_dec :=_gdd [_fga ];if _cda >=_dec ._bbdg &&_cda <=_dec ._dbe {_adca =_dec ._gdc ;_eea =_dec ._ddag ;if _cda ==_dec ._dbe {_fga ++;};}else {continue ;};};_gbf =append (_gbf ,&colInfo {_fdfa :_adca ,_cecee :_eea });
};_cac :=0.0;for _ ,_fcb :=range _gbf {_cac +=_fcb ._fdfa ;};_fbd ._fdba =1.0;if _cac > _fbd ._gcd {_fbd ._fdba =_fbd ._gcd /_cac ;for _ ,_agd :=range _gbf {_agd ._fdfa *=_fbd ._fdba ;};};_fbd ._ccab =_gbf ;};type rowInfo struct{_bgad float64 ;_ceg bool ;
_cfee float64 ;_fdfe *style ;_aabb []*cell ;_fdd float64 ;};func _fce (_fad *symbol ){_dggd :=_de .New ();_gfce :=_dggd .NewStyledParagraph ();_gfce .SetMargins (0,0,0,0);_dadae :=_gfce .Append (_fad ._gfcg );if _fad ._feca !=nil {_dadae .Style =*_fad ._feca ;
};_fad ._fdbg =_gfce .Height ();if _fad ._gdaa ==0{_fad ._gdaa =_gfce .Width ();};};func (_bef *convertContext )makeRowspans (){var _fdbc float64 ;_fcge :=0;for _bdf ,_bcd :=range _bef ._fagc {_ecd :=_bcd ._cfee +_bcd ._fdd ;if _fdbc +_ecd <=_bef ._ecae {_bcd ._bgad =_fdbc ;
_fdbc +=_ecd ;}else {_bef ._dfcc =append (_bef ._dfcc ,&rowspan {_gded :_fdbc ,_cbcb :_fcge ,_eaff :_bdf });_fcge =_bdf ;_bcd ._bgad =0;_fdbc =_ecd ;};};_bef ._dfcc =append (_bef ._dfcc ,&rowspan {_gded :_fdbc ,_cbcb :_fcge ,_eaff :len (_bef ._fagc )});
};var _abbe =map[uint32 ]_de .PageSize {1:_de .PageSize {8.5*_dae .Inch ,11*_dae .Inch },2:_de .PageSize {8.5*_dae .Inch ,11*_dae .Inch },3:_de .PageSize {11*_dae .Inch ,17*_dae .Inch },4:_de .PageSize {17*_dae .Inch ,11*_dae .Inch },5:_de .PageSize {8.5*_dae .Inch ,14*_dae .Inch },6:_de .PageSize {5.5*_dae .Inch ,8.5*_dae .Inch },7:_de .PageSize {7.5*_dae .Inch ,10*_dae .Inch },8:_de .PageSize {_gegac (297),_gegac (420)},9:_de .PageSize {_gegac (210),_gegac (297)},10:_de .PageSize {_gegac (210),_gegac (297)},11:_de .PageSize {_gegac (148),_gegac (210)},70:_de .PageSize {_gegac (105),_gegac (148)},12:_de .PageSize {_gegac (250),_gegac (354)},13:_de .PageSize {_gegac (182),_gegac (257)},14:_de .PageSize {8.5*_dae .Inch ,13*_dae .Inch },20:_de .PageSize {4.125*_dae .Inch ,9.5*_dae .Inch },27:_de .PageSize {_gegac (110),_gegac (220)},28:_de .PageSize {_gegac (162),_gegac (229)},34:_de .PageSize {_gegac (250),_gegac (176)},29:_de .PageSize {_gegac (324),_gegac (458)},30:_de .PageSize {_gegac (229),_gegac (324)},31:_de .PageSize {_gegac (114),_gegac (162)},37:_de .PageSize {3.88*_dae .Inch ,7.5*_dae .Inch },43:_de .PageSize {_gegac (100),_gegac (148)},69:_de .PageSize {_gegac (200),_gegac (148)}};
func (_fbbd *convertContext )makeMergedCells (){_gbb :=[]*mergedCell {};for _ ,_cdaa :=range _fbbd ._ebef .MergedCells (){_fbda ,_ffaf ,_age :=_af .ParseRangeReference (_cdaa .Reference ());if _age !=nil {_f .Log .Debug ("\u0065\u0072r\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u006d\u0065\u0072\u0067\u0065\u0064\u0020\u0063\u0065\u006c\u006c: \u0025\u0073",_age );
continue ;};_dag :=mergedCell {_ccabb :_fbda .RowIdx ,_gegbc :_fbda .ColumnIdx ,_ggf :_ffaf .RowIdx ,_gdea :_ffaf .ColumnIdx };for _eed :=_dag ._gegbc -1;_eed < _dag ._gdea ;_eed ++{_dag ._fda +=_fbbd ._ccab [_eed ]._fdfa ;};for _egd :=_dag ._ccabb -1;
_egd < _dag ._ggf ;_egd ++{_dag ._deca +=_fbbd ._fagc [_egd ]._cfee ;};_gbb =append (_gbb ,&_dag );};_fbbd ._efda =_gbb ;};func (_aec *convertContext )getStyle (_defb *uint32 )*style {_egf :=&style {};_dadd :=false ;if _defb !=nil {_dfbf :=_aec ._gdac .GetCellStyle (*_defb );
if _aec ._gdac .GetNumberFormat (_dfbf .NumberFormat ()).GetFormat ()=="\u003b\u003b\u003b"{_egf ._afdbd =true ;};_cfba :=_dfbf .GetFill ();if _cfba !=nil &&_cfba .FillChoice !=nil &&_cfba .FillChoice .PatternFill !=nil {if _cfba .FillChoice .PatternFill .FgColor !=nil {_egf ._adcb =_aec .getColorStringFromSmlColor (_cfba .FillChoice .PatternFill .FgColor );
}else if _cfba .FillChoice .PatternFill .BgColor !=nil {_egf ._adcb =_aec .getColorStringFromSmlColor (_cfba .FillChoice .PatternFill .BgColor );};};_dgda :=_dfbf .GetFont ();for _ ,_dbab :=range _dgda .FontChoice {if _dbab .Name !=nil {_egf ._agbc =&_dbab .Name .ValAttr ;
_dadd =true ;}else if _dbab .B !=nil {_bbde :=_dbab .B .ValAttr ==nil ||*_dbab .B .ValAttr ;_egf ._bdd =&_bbde ;_dadd =true ;}else if _dbab .I !=nil {_cbaf :=_dbab .I .ValAttr ==nil ||*_dbab .I .ValAttr ;_egf ._gcgac =&_cbaf ;_dadd =true ;}else if _dbab .U !=nil {_ceca :=_dbab .U .ValAttr ==_ca .ST_UnderlineValuesSingle ||_dbab .U .ValAttr ==_ca .ST_UnderlineValuesUnset ;
_egf ._fcgeg =&_ceca ;_dadd =true ;}else if _dbab .Sz !=nil {_faca :=_dbab .Sz .ValAttr ;_egf ._feg =&_faca ;_dadd =true ;}else if _dbab .VertAlign !=nil {_ffbd :=_dbab .VertAlign .ValAttr ==_cg .ST_VerticalAlignRunSuperscript ;_egf ._acf =&_ffbd ;_dfd :=_dbab .VertAlign .ValAttr ==_cg .ST_VerticalAlignRunSubscript ;
_egf ._cbbf =&_dfd ;_dadd =true ;}else if _dbab .Color !=nil {_egf ._dfbe =_aec .getColorStringFromSmlColor (_dbab .Color );_dadd =true ;};};_fbgg :=_dfbf .GetBorder ();if _fbgg .Top !=nil {_egf ._eba =_aec .getBorder (_fbgg .Top );_dadd =true ;};if _fbgg .Bottom !=nil {_egf ._dfbb =_aec .getBorder (_fbgg .Bottom );
_dadd =true ;};if _fbgg .Left !=nil {_egf ._dfa =_aec .getBorder (_fbgg .Left );_dadd =true ;};if _fbgg .Right !=nil {_egf ._gbgg =_aec .getBorder (_fbgg .Right );_dadd =true ;};if _dfbf .Wrapped (){_egf ._aadc =true ;_dadd =true ;};if _bdg :=_dfbf .GetVerticalAlignment ();
_bdg !=_ca .ST_VerticalAlignmentUnset {_egf ._aedg =_bdg ;_dadd =true ;};if _gccc :=_dfbf .GetHorizontalAlignment ();_gccc !=_ca .ST_HorizontalAlignmentUnset {_egf ._febf =_gccc ;_dadd =true ;};};if _dadd {return _egf ;};return nil ;};const _ea =2;var _becc =[]string {"\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0030\u0030","\u0030\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0038\u0030\u0030\u0030","\u0038\u0030\u0030\u0030\u0038\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0063\u0030\u0063\u0030\u0063\u0030","\u0038\u0030\u0038\u0030\u0038\u0030","\u0039\u0039\u0039\u0039\u0066\u0066","\u0039\u0039\u0033\u0033\u0036\u0036","\u0066\u0066\u0066\u0066\u0063\u0063","\u0063\u0063\u0066\u0066\u0066\u0066","\u0036\u0036\u0030\u0030\u0036\u0036","\u0066\u0066\u0038\u0030\u0038\u0030","\u0030\u0030\u0036\u0036\u0063\u0063","\u0063\u0063\u0063\u0063\u0066\u0066","\u0030\u0030\u0030\u0030\u0038\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0030\u0030\u0063\u0063\u0066\u0066","\u0063\u0063\u0066\u0066\u0066\u0066","\u0063\u0063\u0066\u0066\u0063\u0063","\u0066\u0066\u0066\u0066\u0039\u0039","\u0039\u0039\u0063\u0063\u0066\u0066","\u0066\u0066\u0039\u0039\u0063\u0063","\u0063\u0063\u0039\u0039\u0066\u0066","\u0066\u0066\u0063\u0063\u0039\u0039","\u0033\u0033\u0036\u0036\u0066\u0066","\u0033\u0033\u0063\u0063\u0063\u0063","\u0039\u0039\u0063\u0063\u0030\u0030","\u0066\u0066\u0063\u0063\u0030\u0030","\u0066\u0066\u0039\u0039\u0030\u0030","\u0066\u0066\u0036\u0036\u0030\u0030","\u0036\u0036\u0036\u0036\u0039\u0039","\u0039\u0036\u0039\u0036\u0039\u0036","\u0030\u0030\u0033\u0033\u0036\u0036","\u0033\u0033\u0039\u0039\u0036\u0036","\u0030\u0030\u0033\u0033\u0030\u0030","\u0033\u0033\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0036\u0036","\u0033\u0033\u0033\u0033\u0039\u0039","\u0033\u0033\u0033\u0033\u0033\u0033"};


// ConvertToPdfWithOptions convert a sheet to PDF with given options.
func ConvertToPdfWithOptions (s *_dd .Sheet ,opts *Options )*_de .Creator {_deg :=s .X ();if _deg ==nil {return nil ;};var _ac _de .PageSize ;_ge :=true ;_cd :=false ;if _deg .SheetPr !=nil &&_deg .SheetPr .PageSetUpPr !=nil &&_deg .SheetPr .PageSetUpPr .FitToPageAttr !=nil &&*_deg .SheetPr .PageSetUpPr .FitToPageAttr {_cd =true ;
};if _fg :=_deg .PageSetup ;_fg !=nil {_ge =_fg .OrientationAttr ==_ca .ST_OrientationLandscape ;if _gab :=_fg .PaperSizeAttr ;_gab !=nil {_ac =_abbe [*_gab ];};};if (_ac ==_de .PageSize {}){_ac =_bd .GetDefaultPageSize ();if opts !=nil &&opts .DefaultPageSize !=_bd .DefaultPageSize {_ac =_bd .GetPageDimensions (opts .DefaultPageSize );
};};if _ge {_ac [0],_ac [1]=_ac [1],_ac [0];};_fd :=_de .New ();_fd .SetPageSize (_ac );var _fc ,_fbb ,_ee ,_eg float64 ;if _ed :=_deg .PageMargins ;_ed !=nil {_ee =_ed .LeftAttr ;_eg =_ed .RightAttr ;_fc =_ed .TopAttr ;_fbb =_ed .BottomAttr ;};if _ee < _cf {_ee =_cf ;
};if _eg < _cf {_eg =_cf ;};if _fc < _ef {_fc =_ef ;};if _fbb < _ef {_fbb =_ef ;};_fc *=_dae .Inch ;_fbb *=_dae .Inch ;_ee *=_dae .Inch ;_eg *=_dae .Inch ;_fd .SetPageMargins (_ee ,_eg ,_fc ,_fbb );_caf :=s .Workbook ();var _bf *_e .Theme ;if len (_caf .Themes ())> 0{_bf =_caf .Themes ()[0];
};var _dac ,_fgf ,_gf ,_def int ;for _ ,_ff :=range _caf .DefinedNames (){if _ff .Name ()=="\u005f\u0078l\u006e\u006d\u002eP\u0072\u0069\u006e\u0074\u005f\u0041\u0072\u0065\u0061"{_ad ,_bg ,_ec ,_fcg :=_bd .ParseExcelRange (_ff .Content ());if _fcg ==nil &&s .Name ()==_ad {_dac =int (_bg .ColumnIdx );
_fgf =int (_ec .ColumnIdx );_gf =int (_bg .RowIdx );_def =int (_ec .RowIdx );};};};_acb :=[]_dd .Table {};if _deg .TableParts !=nil &&_deg .TableParts .TablePart !=nil {_fe :=0;_ffa :=s .Workbook ().Tables ();_da .Slice (_ffa [:],func (_gabf ,_gfc int )bool {return _ffa [_gabf ].X ().IdAttr < _ffa [_gfc ].X ().IdAttr });
for _ ,_fge :=range s .Workbook ().Sheets (){if _fge .Name ()==s .Name (){break ;}else {if _fge .X ().TableParts !=nil &&_fge .X ().TableParts .TablePart !=nil {_fe +=len (_fge .X ().TableParts .TablePart );};};};if len (_ffa )>=_fe +len (_deg .TableParts .TablePart ){_acb =append (_acb ,_ffa [_fe :_fe +len (_deg .TableParts .TablePart )]...);
};};_bgf :=&convertContext {_baee :_fd ,_ebef :s ,_bfag :s .Workbook (),_cag :_bf ,_gdac :&s .Workbook ().StyleSheet ,_aab :_fc ,_cfdef :_ee ,_ecae :_ac [1]-_fbb -_fc ,_gcd :_ac [0]-_eg -_ee ,_cfae :_dac ,_fage :_fgf ,_ccag :_gf ,_ddcc :_def ,_bdffe :_cd ,_gaeb :_acb };
_bgf .makeAnchors ();_bgf .determineMaxIndexes ();if _bgf ._cdbc ==0&&_bgf ._cbc ==0{_fd .NewPage ();return _fd ;};_bgf .makeCols ();_bgf .makeRows ();_bgf .makeMergedCells ();_bgf .makeCells ();_bgf .makePagespans ();_bgf .makeRowspans ();_bgf .makePages ();
_bgf .fillPages ();_bgf .distributeAnchors ();_bgf .drawSheet ();return _fd ;};type convertContext struct{_baee *_de .Creator ;_bfag *_dd .Workbook ;_cag *_e .Theme ;_ebef *_dd .Sheet ;_gdac *_dd .StyleSheet ;_cdbc int ;_cbc int ;_fgfg []*pagespan ;_geab *page ;
_ccab []*colInfo ;_fagc []*rowInfo ;_dfcc []*rowspan ;_aab float64 ;_cfdef float64 ;_ecae float64 ;_gcd float64 ;_efda []*mergedCell ;_ddcb []*anchor ;_fdba float64 ;_cfae int ;_fage int ;_ccag int ;_ddcc int ;_bdffe bool ;_gaeb []_dd .Table ;};type symbol struct{_gfcg string ;
_cbbg float64 ;_fdbg float64 ;_gdaa float64 ;_feca *_de .TextStyle ;_dbfd string ;};func (_cdda *convertContext )makeTextStyleFromCellStyle (_ccf *style )*_de .TextStyle {_fafc :=_cdda ._baee .NewTextStyle ();if _ccf ==nil {_fafc .FontSize =_bd .DefaultFontSize ;
_fafc .Font =_bd .AssignStdFontByName (_fafc ,_bd .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][FontStyle_Regular ]);return &_fafc ;};if _ggd (_ccf ._fcgeg ){_fafc .Underline =true ;_fafc .UnderlineStyle =_de .TextDecorationLineStyle {Offset :0.5,Thickness :_gegac (1/32)};
};var _daaf FontStyle ;if _ggd (_ccf ._bdd )&&_ggd (_ccf ._gcgac ){_daaf =FontStyle_BoldItalic ;}else if _ggd (_ccf ._bdd ){_daaf =FontStyle_Bold ;}else if _ggd (_ccf ._gcgac ){_daaf =FontStyle_Italic ;}else {_daaf =FontStyle_Regular ;};_gcdf :="\u0064e\u0066\u0061\u0075\u006c\u0074";
if _ccf ._agbc !=nil {_gcdf =*_ccf ._agbc ;};if _cbcbg ,_eaccd :=_bd .StdFontsMap [_gcdf ];_eaccd {_fafc .Font =_bd .AssignStdFontByName (_fafc ,_cbcbg [_daaf ]);}else if _cgdg :=_bd .GetRegisteredFont (_gcdf ,_daaf );_cgdg !=nil {_fafc .Font =_cgdg ;}else {_f .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0025\u0073\u0020\u0077\u0069\u0074h\u0020\u0073\u0074\u0079\u006c\u0065\u0020\u0025s\u0020i\u0073\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002c\u0020\u0072\u0065\u0073\u0065\u0074 \u0074\u006f\u0020\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u002e",_gcdf ,_daaf );
_fafc .Font =_bd .AssignStdFontByName (_fafc ,_bd .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][_daaf ]);};if _ccf ._feg !=nil {_fafc .FontSize =_b .Round (*_ccf ._feg *_cdda ._fdba );};if _ccf ._dfbe !=nil {_fafc .Color =_de .ColorRGBFromHex (*_ccf ._dfbe );
};if _ccf ._acf !=nil &&*_ccf ._acf {_fafc .FontSize *=_fb ;}else if _ccf ._cbbf !=nil &&*_ccf ._cbbf {_fafc .FontSize *=_fb ;};return &_fafc ;};const _fbc =64.0;func (_bccf *convertContext )getImage (_acgb _d .Image ,_ccbg ,_ceaa ,_gcga ,_aaaa ,_dca ,_ecdd float64 ,_gcb _bd .ImgPart )*_de .Image {_aaaa +=_bccf ._aab ;
_gcga +=_bccf ._cfdef ;_dcab ,_fba :=_bd .GetImage (_bccf ._baee ,_acgb ,_ccbg ,_ceaa ,_gcga ,_aaaa ,_dca ,_ecdd ,_gcb );if _fba !=nil {_f .Log .Debug ("\u0043\u0061\u006eno\u0074\u0020\u0067\u0065\u0074\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_fba );
return nil ;};return _dcab ;};func (_dgb *convertContext )getColorStringFromSmlColor (_ebdc *_ca .CT_Color )*string {var _bac string ;if _ebdc .RgbAttr !=nil {_bac =*_ebdc .RgbAttr ;}else if _ebdc .IndexedAttr !=nil &&*_ebdc .IndexedAttr < 64{_bac =_becc [*_ebdc .IndexedAttr ];
}else if _ebdc .ThemeAttr !=nil {_ggbd :=*_ebdc .ThemeAttr ;_bac =_dgb .getColorFromTheme (_ggbd );};if _bac ==""{return nil ;};if len (_bac )> 6{_bac =_bac [(len (_bac )-6):];};if _ebdc .TintAttr !=nil {_cbdd :=*_ebdc .TintAttr ;_bac =_bd .AdjustColorByTint (_bac ,_cbdd );
};_bac ="\u0023"+_bac ;return &_bac ;};func (_dba *convertContext )alignSymbolsVertically (_cecf *cell ,_cefb _ca .ST_VerticalAlignment ){var _bae float64 ;switch _cefb {case _ca .ST_VerticalAlignmentTop :_bae =_ea ;if _cecf ._bff {_bae -=_gd ;}else if _cecf ._cdbg {_bae +=4*_gd ;
};for _ ,_ebgb :=range _cecf ._dfab {_bae +=_ebgb ._ecef ;_ebgb ._gbef =_bae ;_bae +=_ag ;};case _ca .ST_VerticalAlignmentCenter :_dda :=0.0;for _ ,_egac :=range _cecf ._dfab {_dda +=_egac ._ecef +_gegac (1);};_bae =0.5*(_cecf ._bccfg -_dda );if _cecf ._bff {_bae -=2*_gd ;
}else if _cecf ._cdbg {_bae +=2*_gd ;};for _ ,_gdef :=range _cecf ._dfab {_bae +=_gdef ._ecef +0.5*_ag ;_gdef ._gbef =_bae ;_bae +=0.5*_ag ;};default:_bae =_cecf ._bccfg -_ea ;if _cecf ._bff {_bae -=4*_gd ;}else if _cecf ._cdbg {_bae +=_gd ;};for _fcaa :=len (_cecf ._dfab )-1;
_fcaa >=0;_fcaa --{_cecf ._dfab [_fcaa ]._gbef =_bae ;_bae -=_cecf ._dfab [_fcaa ]._ecef ;_bae -=_ag ;};};};func (_afae *convertContext )getSymbolsFromString (_cdb string ,_aed *style )[]*symbol {_cffe :=[]*symbol {};_cfag :=_afae .makeTextStyleFromCellStyle (_aed );
for _ ,_gce :=range _cdb {_cffe =append (_cffe ,&symbol {_gfcg :string (_gce ),_feca :_cfag });};return _cffe ;};

// RegisterFontsFromDirectory registers all fonts from the given directory automatically detecting font families and styles.
func RegisterFontsFromDirectory (dirName string )error {return _bd .RegisterFontsFromDirectory (dirName )};type pageRow struct{_gccf int ;_cgg []*cell ;};func (_dce *convertContext )getColorFromTheme (_gfgf uint32 )string {_fagce :=_dce ._bfag .Themes ();
if len (_fagce )!=0{_badd :=_fagce [0];if _fcag :=_badd .ThemeElements ;_fcag !=nil {if _adb :=_fcag .ClrScheme ;_adb !=nil {switch _gfgf {case 0:return _bd .GetColorStringFromDmlColor (_adb .Lt1 );case 1:return _bd .GetColorStringFromDmlColor (_adb .Dk1 );
case 2:return _bd .GetColorStringFromDmlColor (_adb .Lt2 );case 3:return _bd .GetColorStringFromDmlColor (_adb .Dk2 );case 4:return _bd .GetColorStringFromDmlColor (_adb .Accent1 );case 5:return _bd .GetColorStringFromDmlColor (_adb .Accent2 );case 6:return _bd .GetColorStringFromDmlColor (_adb .Accent3 );
case 7:return _bd .GetColorStringFromDmlColor (_adb .Accent4 );case 8:return _bd .GetColorStringFromDmlColor (_adb .Accent5 );case 9:return _bd .GetColorStringFromDmlColor (_adb .Accent6 );};};};};return "";};var _fa =3.025/_gegac (1);func _aedc (_agecc []*symbol )float64 {_bcbe :=0.0;
for _ ,_bgfb :=range _agecc {_bcbe +=_bgfb ._gdaa ;};return _bcbe ;};func (_gfbg *convertContext )makePagespans (){_gfbg ._fgfg =[]*pagespan {};_df :=0.0;_fff :=0;for _ded ,_gee :=range _gfbg ._ccab {_fgbc :=_gee ._fdfa ;if _df +_fgbc <=_gfbg ._gcd {_gee ._cdde =_df ;
_df +=_fgbc ;}else {_gee ._cdde =0;_gfbg ._fgfg =append (_gfbg ._fgfg ,&pagespan {_bad :_df ,_defc :_fff ,_cccb :_ded });_df =_fgbc ;_fff =_ded ;};};_gfbg ._fgfg =append (_gfbg ._fgfg ,&pagespan {_bad :_df ,_defc :_fff ,_cccb :len (_gfbg ._ccab )});};func (_egc *convertContext )getSymbolsFromR (_fea []*_ca .CT_RElt ,_ceed *style )[]*symbol {_agb :=[]*symbol {};
for _ ,_adfg :=range _fea {_cgc :=_egc .combineCellStyleWithRPrElt (_ceed ,_adfg .RPr );for _ ,_aaa :=range _adfg .T {_agb =append (_agb ,&symbol {_gfcg :string (_aaa ),_feca :_egc .makeTextStyleFromCellStyle (_cgc )});};};return _agb ;};type mergedCell struct{_ccabb uint32 ;
_gegbc uint32 ;_ggf uint32 ;_gdea uint32 ;_fda float64 ;_deca float64 ;};func (_faaa *convertContext )imageFromAnchor (_bcfb *anchor ,_gfec ,_gabd float64 )_d .Image {if _bcfb ._dgd !=nil {return _bcfb ._dgd ;};if _bcfb ._aac !=nil {_ddf ,_geea :=_bd .MakeImageFromChartSpace (_bcfb ._aac ,_gfec ,_gabd ,_faaa ._cag ,_faaa ._bfag );
if _geea !=nil {_f .Log .Debug ("C\u0061\u006e\u006e\u006f\u0074\u0020\u006d\u0061\u006b\u0065\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067e\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u0068\u0061\u0072tS\u0070\u0061\u0063e\u003a \u0025\u0073",_geea );
return nil ;};return _ddf ;};return nil ;};func (_abd *convertContext )alignSymbolsHorizontally (_adfa *cell ,_eeg _ca .ST_HorizontalAlignment ){if _eeg ==_ca .ST_HorizontalAlignmentUnset {switch _adfa ._ecc {case _ca .ST_CellTypeB :_eeg =_ca .ST_HorizontalAlignmentCenter ;
case _ca .ST_CellTypeN :_eeg =_ca .ST_HorizontalAlignmentRight ;default:_eeg =_ca .ST_HorizontalAlignmentLeft ;};};var _aagf float64 ;for _ ,_dgfa :=range _adfa ._dfab {switch _eeg {case _ca .ST_HorizontalAlignmentLeft :_aagf =_dg ;case _ca .ST_HorizontalAlignmentRight :_bgac :=_aedc (_dgfa ._gage );
_aagf =_adfa ._gfcf -_dg -_bgac ;case _ca .ST_HorizontalAlignmentCenter :_fcef :=_aedc (_dgfa ._gage );_aagf =(_adfa ._gfcf -_fcef )/2;};for _ ,_bgfe :=range _dgfa ._gage {_bgfe ._cbbg +=_aagf ;};};};type pagespan struct{_bad float64 ;_cfcc []*page ;_defc int ;
_cccb int ;};type rowspan struct{_gded float64 ;_cbcb int ;_eaff int ;};const _fb =0.64;type style struct{_adcb *string ;_dfbe *string ;_feg *float64 ;_agbc *string ;_bdd *bool ;_gcgac *bool ;_fcgeg *bool ;_acf *bool ;_cbbf *bool ;_eba *border ;_dfbb *border ;
_dfa *border ;_gbgg *border ;_aadc bool ;_aedg _ca .ST_VerticalAlignment ;_febf _ca .ST_HorizontalAlignment ;_afdbd bool ;};const _afa =15.0;func _adfd (_adce []*symbol )float64 {_bgd :=0.0;for _ ,_fgbf :=range _adce {if _fgbf ._fdbg > _bgd {_bgd =_fgbf ._fdbg ;
};};return _bgd ;};

// Options contains the options for convert process
type Options struct{

// DefaultPageSize is applied when there is no page size explicitly set in the document.
// A4 is the default option.
DefaultPageSize _bd .PageSize ;};

// FontStyle represents a kind of font styling. It can be FontStyle_Regular, FontStyle_Bold, FontStyle_Italic and FontStyle_BoldItalic.
type FontStyle =_bd .FontStyle ;

// RegisterFont makes a PdfFont accessible for using in converting to PDF.
func RegisterFont (name string ,style FontStyle ,font *_g .PdfFont ){_bd .RegisterFont (name ,style ,font );};const (FontStyle_Regular FontStyle =0;FontStyle_Bold FontStyle =1;FontStyle_Italic FontStyle =2;FontStyle_BoldItalic FontStyle =3;);func _ecdgc (_afe ,_cecfd *style ){if _cecfd ==nil {return ;
};if _afe ==nil {_afe =_cecfd ;return ;};if _afe ._adcb ==nil {_afe ._adcb =_cecfd ._adcb ;};if _afe ._agbc ==nil {_afe ._agbc =_cecfd ._agbc ;};if _afe ._dfbe ==nil {_afe ._dfbe =_cecfd ._dfbe ;};if _afe ._feg ==nil {_afe ._feg =_cecfd ._feg ;};if _afe ._bdd ==nil {_afe ._bdd =_cecfd ._bdd ;
};if _afe ._gcgac ==nil {_afe ._gcgac =_cecfd ._gcgac ;};if _afe ._fcgeg ==nil {_afe ._fcgeg =_cecfd ._fcgeg ;};if _afe ._acf ==nil {_afe ._acf =_cecfd ._acf ;};if _afe ._cbbf ==nil {_afe ._cbbf =_cecfd ._cbbf ;};if _afe ._eba ==nil {_afe ._eba =_cecfd ._eba ;
};if _afe ._dfbb ==nil {_afe ._dfbb =_cecfd ._dfbb ;};if _afe ._dfa ==nil {_afe ._dfa =_cecfd ._dfa ;};if _afe ._gbgg ==nil {_afe ._gbgg =_cecfd ._gbgg ;};if _afe ._aedg ==_ca .ST_VerticalAlignmentUnset {_afe ._aedg =_cecfd ._aedg ;};if _afe ._febf ==_ca .ST_HorizontalAlignmentUnset {_afe ._febf =_cecfd ._febf ;
};};func (_ace *convertContext )drawPage (_cdd *page ){_afde :=_ace ._aab ;_cfde :=_ace ._cfdef ;for _ ,_dcb :=range _cdd ._afg {_eacc :=_ace ._fagc [_dcb ._gccf ];for _ ,_fdf :=range _dcb ._cgg {var _ege float64 ;if _dcb ._gccf > 1{_ege =_ace ._fagc [_dcb ._gccf -1]._fdd ;
};var _daad ,_fgfc float64 ;if _cfg :=_fdf ._egb ;_cfg !=nil {_daad =_cfg ._gccg ;};if _fcc :=_fdf ._acgbc ;_fcc !=nil {_fgfc =_fcc ._gccg ;};_bgfa :=_afde +_eacc ._bgad -0.5*(_ege -_daad );_fgdb :=_afde +_eacc ._bgad +_eacc ._cfee +0.5*(_eacc ._fdd +_fgfc );
_bed :=_cfde +_fdf ._eag ;_cbf :=_bed +_fdf ._fbdbd ;if _fdf ._aee !=nil &&_fdf ._aee !=_de .ColorBlack {_bd .FillRectangle (_ace ._baee ,_bed ,_bgfa ,_cbf -_bed ,_fgdb -_bgfa ,_fdf ._aee );};};};for _ ,_aeg :=range _cdd ._afg {_agdb :=_ace ._fagc [_aeg ._gccf ];
for _ ,_ccgd :=range _aeg ._cgg {_gcag :=_ccgd ._faag < _ccgd ._eag ;_beg :=_ccgd ._egef > _ccgd ._eag +_ccgd ._gfcf ;var _eab ,_dbd bool ;for _ ,_aad :=range _ccgd ._dfab {for _ ,_fag :=range _aad ._gage {if _gcag &&!_eab {_eab =_fag ._cbbg < 0;};if _beg &&!_dbd {_dbd =_ccgd ._gfcf < _fag ._cbbg +_fag ._gdaa ;
};if _ccgd ._eag +_fag ._cbbg >=_ccgd ._faag &&_ccgd ._eag +_fag ._cbbg +_fag ._gdaa <=_ccgd ._egef {_cgb :=_ace ._baee .NewStyledParagraph ();_fbgf :=_cfde +_ccgd ._eag +_fag ._cbbg ;_ccgc :=_afde +_agdb ._bgad +_aad ._gbef -_fag ._fdbg -_gegac (0.5);
_cgb .SetPos (_fbgf ,_ccgc );var _ggaa *_de .TextChunk ;if _fag ._dbfd !=""{_ggaa =_cgb .AddExternalLink (_fag ._gfcg ,_fag ._dbfd );}else {_ggaa =_cgb .Append (_fag ._gfcg );};if _fag ._feca !=nil {_ggaa .Style =*_fag ._feca ;};_ace ._baee .Draw (_cgb );
};};};var _cdfd ,_ffaa ,_bdbg ,_ega ,_cdaaa ,_gba float64 ;var _bcdb ,_cece ,_dege ,_bda _de .Color ;if _cadf :=_ccgd ._egb ;_cadf !=nil {_cdfd =_cadf ._gccg ;_bcdb =_cadf ._bcfbg ;};if _dbc :=_ccgd ._acgbc ;_dbc !=nil {_ffaa =_dbc ._gccg ;_cece =_dbc ._bcfbg ;
};if _gcg :=_ccgd ._bdac ;_gcg !=nil {_bdbg =_gcg ._gccg ;_cdaaa =_bdbg /2;_dege =_gcg ._bcfbg ;};if _acga :=_ccgd ._egde ;_acga !=nil {_ega =_acga ._gccg ;_gba =_ega /2;_bda =_acga ._bcfbg ;};var _gbad float64 ;if _aeg ._gccf > 1{_gbad =_ace ._fagc [_aeg ._gccf -1]._fdd ;
};_gdb :=_afde +_agdb ._bgad -0.5*(_gbad -_cdfd );_cffg :=_afde +_agdb ._bgad +_agdb ._cfee +0.5*(_agdb ._fdd +_ffaa );_gad :=_cfde +_ccgd ._eag ;_adcc :=_gad +_ccgd ._fbdbd ;_bd .DrawLine (_ace ._baee ,_gad ,_gdb ,_adcc ,_gdb ,_cdfd ,_bcdb );_bd .DrawLine (_ace ._baee ,_gad ,_cffg ,_adcc ,_cffg ,_ffaa ,_cece );
if !_eab {_bd .DrawLine (_ace ._baee ,_gad -_cdaaa ,_gdb ,_gad -_cdaaa ,_cffg ,_bdbg ,_dege );};if !_dbd {_bd .DrawLine (_ace ._baee ,_adcc -_gba ,_gdb ,_adcc -_gba ,_cffg ,_ega ,_bda );};};};for _ ,_cafb :=range _cdd ._dggc {if _cafb !=nil {_ace ._baee .Draw (_cafb );
};};};func (_bb *convertContext )makeRows (){_eb :=[]*rowInfo {};_edc :=_bb ._ebef .Rows ();_fabe :=0;_bcca :=0.0;for _abg ,_gdda :=range _edc {if _abg < _bb ._ccag ||(_abg > _bb ._ddcc &&_bb ._ddcc > 0){continue ;};_fabe ++;_adf :=int (_gdda .RowNumber ());
if _adf > _fabe {for _bde :=_fabe ;_bde < _adf ;_bde ++{_eb =append (_eb ,&rowInfo {_cfee :_afa /_fa });_bcca +=_afa /_fa ;};_fabe =_adf ;};var _ddc float64 ;if _gdda .X ().HtAttr ==nil {_ddc =_afa ;}else {_ddc =*_gdda .X ().HtAttr ;};_eb =append (_eb ,&rowInfo {_cfee :_ddc /_fa ,_ceg :true ,_fdfe :_bb .getStyle (_gdda .X ().SAttr )});
_bcca +=_ddc /_fa ;};for _gegb :=len (_eb );_gegb < _bb ._cdbc ;_gegb ++{_eb =append (_eb ,&rowInfo {_cfee :_afa /_fa });_bcca +=_afa /_fa ;};if _bb ._bdffe ||_bcca >=_bb ._ecae {_be :=_bb ._fdba ;if _bb ._ecae /_bcca < _bb ._fdba {_be =_bb ._ecae /_bcca ;
};for _ ,_afd :=range _eb {_afd ._cfee *=_be ;};};_bb ._fagc =_eb ;};type border struct{_gccg float64 ;_bcfbg _de .Color ;};func (_aceg *convertContext )getContentFromCell (_cdfe *_dd .Sheet ,_fbdb _dd .Cell ,_begg *style ,_ccc float64 ,_fbce ,_agg bool )([]*line ,_ca .ST_CellType ){if _agg {return []*line {},_ca .ST_CellTypeS ;
};_cfdg :=_fbdb .X ();var _cgea []*symbol ;switch _cfdg .TAttr {case _ca .ST_CellTypeS :_agec :=_cfdg .V ;if _agec !=nil {_adeg ,_ece :=_a .Atoi (*_agec );if _ece ==nil {_cgeb :=_aceg ._bfag .SharedStrings .X ().Si [_adeg ];if _cgeb .T !=nil {_cgea =_aceg .getSymbolsFromString (*_cgeb .T ,_begg );
}else if _cgeb .R !=nil {_cgea =_aceg .getSymbolsFromR (_cgeb .R ,_begg );};};};case _ca .ST_CellTypeB :_dfb :=_cfdg .V ;if _dfb !=nil {if *_dfb =="\u0030"{_cgea =_aceg .getSymbolsFromString ("\u0046\u0041\u004cS\u0045",_begg );}else {_cgea =_aceg .getSymbolsFromString ("\u0054\u0052\u0055\u0045",_begg );
};};case _ca .ST_CellTypeStr :if _cfdg .F !=nil {_gae :=_ga .NewEvaluator ();_fca :=_cdfe .FormulaContext ().Cell (_fbdb .Reference (),_gae );_cgea =_aceg .getSymbolsFromString (_fca .Value (),_begg );};default:_cgea =_aceg .getSymbolsFromString (_fbdb .GetFormattedValue (),_begg );
};_ebda :=0.0;_gbeg :=0.0;var _ceec []*line ;var _cbb bool ;if _begg !=nil {if _begg ._acf !=nil {if *_begg ._acf {_cbb =true ;};};if _begg ._cbbf !=nil {if *_begg ._cbbf {_cbb =true ;};};};if _fbce {_ceec =[]*line {};_ebdf :=_ccc -2*_dg ;_bga :=[]*symbol {};
for _ ,_afc :=range _cgea {_fce (_afc );if _ebda +_afc ._gdaa >=_ebdf {_gega :=_adfd (_bga );if _cbb {_gega /=_fb ;};_ceec =append (_ceec ,&line {_gbef :_gbeg ,_gage :_bga ,_ecef :_gega });_bga =[]*symbol {_afc };_ebda =_afc ._gdaa ;_gbeg +=_gega ;}else {_afc ._cbbg =_ebda ;
_ebda +=_afc ._gdaa ;_bga =append (_bga ,_afc );};};_baf :=_adfd (_bga );if _cbb {_baf /=_fb ;};if len (_bga )> 0{_ceec =append (_ceec ,&line {_gbef :_gbeg ,_gage :_bga ,_ecef :_baf });};}else {for _ ,_dgec :=range _cgea {_fce (_dgec );_dgec ._cbbg =_ebda ;
_ebda +=_dgec ._gdaa ;};if len (_cgea )> 0{_ceec =[]*line {&line {_gage :_cgea ,_ecef :_adfd (_cgea )}};};};_ged :=_cfdg .TAttr ;if _ged ==_ca .ST_CellTypeUnset {_ged =_ca .ST_CellTypeN ;};return _ceec ,_ged ;};func _ggd (_cfcf *bool )bool {return _cfcf !=nil &&*_cfcf };
func (_fdfb *convertContext )addRowToPage (_ceff []*cell ,_aafc int ){_dbcb :=0.0;_fac :=_fdfb ._gcd ;for _ ,_cefff :=range _ceff {if len (_cefff ._dfab )!=0{_cefff ._faag =_dbcb ;_dbcb =_cefff ._eag +_cefff ._gfcf ;};};for _fede :=len (_ceff )-1;_fede >=0;
_fede --{_bcg :=_ceff [_fede ];if len (_bcg ._dfab )!=0{_bcg ._egef =_fac ;_fac =_bcg ._eag ;};};_fdfb ._geab ._afg =append (_fdfb ._geab ._afg ,&pageRow {_gccf :_aafc ,_cgg :_ceff });};func (_fcbf *convertContext )distributeAnchors (){for _ ,_fabeb :=range _fcbf ._ddcb {_aef ,_cdf :=_fabeb ._gcda ,_fabeb ._cege ;
_afaf ,_feb :=_fabeb ._fgc ,_fabeb ._ebga ;_abbg ,_cge :=_fabeb ._aegd ,_fabeb ._gdec ;_bbc ,_fed :=_fabeb ._gbfcb ,_fabeb ._egbc ;if _aef < _fcbf ._ccag ||(_abbg > _fcbf ._ddcc &&_fcbf ._ddcc > 0){continue ;};if _afaf < _fcbf ._cfae ||(_bbc > _fcbf ._fage &&_fcbf ._fage > 0){continue ;
};var _ddea ,_eac ,_efb ,_dcf *page ;for _ ,_gfa :=range _fcbf ._fgfg {for _ ,_acc :=range _gfa ._cfcc {if _aef >=_acc ._dfbg ._cbcb &&_aef < _acc ._dfbg ._eaff {if _afaf >=_acc ._gge ._defc &&_afaf < _acc ._gge ._cccb {_acc ._fbad =true ;_ddea =_acc ;
};if _bbc >=_acc ._gge ._defc &&_bbc < _acc ._gge ._cccb {_acc ._fbad =true ;_eac =_acc ;};};if _abbg >=_acc ._dfbg ._cbcb &&_abbg < _acc ._dfbg ._eaff {if _afaf >=_acc ._gge ._defc &&_afaf < _acc ._gge ._cccb {_acc ._fbad =true ;_dcf =_acc ;};if _bbc >=_acc ._gge ._defc &&_bbc < _acc ._gge ._cccb {_acc ._fbad =true ;
_efb =_acc ;};};};};_acd :=_ddea !=_eac ;_fgg :=_ddea !=_dcf ;if _acd &&_fgg {_fcdb :=_fcbf ._ccab [_afaf ]._cdde +_dae .FromEMU (_feb );_bbd :=_ddea ._gge ._bad ;_aagb :=_fcbf ._ccab [_bbc ]._cdde +_dae .FromEMU (_fed );_dbg :=_fcbf ._fagc [_aef ]._bgad +_dae .FromEMU (_cdf );
_gace :=float64 (_ddea ._dfbg ._gded );_dgg :=_fcbf ._fagc [_abbg ]._bgad +_dae .FromEMU (_cge );_bfea :=_aagb +_bbd -_fcdb ;_cad :=_dgg +_gace -_dbg ;_eff :=_fcbf .imageFromAnchor (_fabeb ,_bfea ,_cad );_ddea ._dggc =append (_ddea ._dggc ,_fcbf .getImage (_eff ,_cad ,_bfea ,_fcdb ,_dbg ,_bbd -_fcdb ,_gace -_dbg ,_bd .ImgPart_lt ));
_eac ._dggc =append (_eac ._dggc ,_fcbf .getImage (_eff ,_cad ,_bfea ,0,_dbg ,_bbd -_fcdb ,_gace -_dbg ,_bd .ImgPart_rt ));_dcf ._dggc =append (_dcf ._dggc ,_fcbf .getImage (_eff ,_cad ,_bfea ,_fcdb ,0,_bbd -_fcdb ,_gace -_dbg ,_bd .ImgPart_lb ));_efb ._dggc =append (_efb ._dggc ,_fcbf .getImage (_eff ,_cad ,_bfea ,0,0,_bbd -_fcdb ,_gace -_dbg ,_bd .ImgPart_rb ));
}else if _acd {_dbga :=_fcbf ._fagc [_aef ]._bgad +_dae .FromEMU (_cdf );_bdff :=_fcbf ._fagc [_abbg ]._bgad +_dae .FromEMU (_cge );_bdb :=_fcbf ._ccab [_afaf ]._cdde +_dae .FromEMU (_feb );_ecde :=_ddea ._gge ._bad ;_gddd :=_fcbf ._ccab [_bbc ]._cdde +_dae .FromEMU (_fed );
_dfc :=_gddd +_ecde -_bdb ;_cfce :=_bdff -_dbga ;_cfcd :=_fcbf .imageFromAnchor (_fabeb ,_dfc ,_cfce );_ddea ._dggc =append (_ddea ._dggc ,_fcbf .getImage (_cfcd ,_cfce ,_dfc ,_bdb ,_dbga ,_ecde -_bdb ,0,_bd .ImgPart_l ));_eac ._dggc =append (_eac ._dggc ,_fcbf .getImage (_cfcd ,_cfce ,_dfc ,0,_dbga ,_ecde -_bdb ,0,_bd .ImgPart_r ));
}else if _fgg {_ebd :=_fcbf ._ccab [_afaf ]._cdde +_dae .FromEMU (_feb );_gegg :=_fcbf ._ccab [_bbc ]._cdde +_dae .FromEMU (_fed );_edea :=_fcbf ._fagc [_aef ]._bgad +_dae .FromEMU (_cdf );_bgb :=float64 (_ddea ._dfbg ._gded );_eaa :=_fcbf ._fagc [_abbg ]._bgad +_dae .FromEMU (_cge );
_gaaf :=_gegg -_ebd ;_faf :=_eaa +_bgb -_edea ;_cee :=_fcbf .imageFromAnchor (_fabeb ,_gaaf ,_faf );_ddea ._dggc =append (_ddea ._dggc ,_fcbf .getImage (_cee ,_faf ,_gaaf ,_ebd ,_edea ,0,_bgb -_edea ,_bd .ImgPart_t ));_dcf ._dggc =append (_dcf ._dggc ,_fcbf .getImage (_cee ,_faf ,_gaaf ,_ebd ,0,0,_bgb -_edea ,_bd .ImgPart_b ));
}else {_dcfg :=_fcbf ._ccab [_afaf ]._cdde +_dae .FromEMU (_feb );_gde :=_fcbf ._ccab [_bbc ]._cdde +_dae .FromEMU (_fed );_ccb :=_fcbf ._fagc [_aef ]._bgad +_dae .FromEMU (_cdf );_bea :=_fcbf ._fagc [_abbg ]._bgad +_dae .FromEMU (_cge );_fgag :=_gde -_dcfg ;
_ecf :=_bea -_ccb ;_efae :=_fcbf .imageFromAnchor (_fabeb ,_fgag ,_ecf );_ddea ._dggc =append (_ddea ._dggc ,_fcbf .getImage (_efae ,_ecf ,_fgag ,_dcfg ,_ccb ,0,0,_bd .ImgPart_whole ));};};};func (_cfc *convertContext )makeAnchors (){_dc ,_fgb :=_cfc ._ebef .GetDrawing ();
if _dc !=nil {for _ ,_geg :=range _dc .EG_Anchor {_ffe :=&anchor {};if _bcb :=_geg .AnchorChoice .TwoCellAnchor ;_bcb !=nil {_acg ,_ce :=_bcb .From ,_bcb .To ;if _acg ==nil ||_ce ==nil {return ;};_ffe ._gcda =int (_acg .Row );_ffe ._cege =_bd .FromSTCoordinate (_acg .RowOff );
_ffe ._fgc =int (_acg .Col );_ffe ._ebga =_bd .FromSTCoordinate (_acg .ColOff );_ffe ._aegd =int (_ce .Row );_ffe ._gdec =_bd .FromSTCoordinate (_ce .RowOff );_ffe ._gbfcb =int (_ce .Col );_ffe ._egbc =_bd .FromSTCoordinate (_ce .ColOff );if _afb :=_bcb .ObjectChoicesChoice ;
_afb !=nil {if _cef :=_afb .Pic ;_cef !=nil {if _adc :=_cef .BlipFill ;_adc !=nil {if _daf :=_adc .Blip ;_daf !=nil {if _db :=_daf .EmbedAttr ;_db !=nil {for _ ,_bgfg :=range _fgb .X ().Relationship {if _bgfg .IdAttr ==*_db {for _ ,_geb :=range _cfc ._bfag .Images {if _geb .Target ()==_bgfg .TargetAttr {_bfa ,_gg :=_aa .Open (_geb .Path ());
if _gg !=nil {_f .Log .Debug ("\u004fp\u0065\u006e\u0020\u0069m\u0061\u0067\u0065\u0020\u0066i\u006ce\u0020e\u0072\u0072\u006f\u0072\u003a\u0020\u0025s",_gg );continue ;};_bcf ,_ ,_gg :=_d .Decode (_bfa );if _gg !=nil {_f .Log .Debug ("\u0044\u0065\u0063\u006fde\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020%\u0073",_gg );
continue ;};_ffe ._dgd =_bcf ;};};};};};};};}else if _bab :=_afb .GraphicFrame ;_bab !=nil {if _gea :=_bab .Graphic ;_gea !=nil {if _cfe :=_gea .GraphicData ;_cfe !=nil {for _ ,_fab :=range _cfe .Any {if _cae ,_gga :=_fab .(*_gb .Chart );_gga {for _ ,_eaf :=range _fgb .X ().Relationship {if _eaf .IdAttr ==_cae .IdAttr {_bag :=_cfc ._bfag .GetChartByTargetId (_eaf .TargetAttr );
if _bag !=nil {_ffe ._aac =_bag ;};};};};};};};};};};if _ffe ._dgd !=nil ||_ffe ._aac !=nil {_cfc ._ddcb =append (_cfc ._ddcb ,_ffe );};};};};func _gegac (_bbag float64 )float64 {return _bbag *_dae .Millimeter };type colWidthRange struct{_bbdg int ;_dbe int ;
_gdc float64 ;_ddag *style ;};func (_begf *convertContext )combineCellStyleWithRPrElt (_fdg *style ,_aecb *_ca .CT_RPrElt )*style {_ggef :=*_fdg ;_gfcfb :=_begf .getStyleFromRPrElt (_aecb );if _gfcfb ==nil {return &_ggef ;};if _gfcfb ._dfbe !=nil {_ggef ._dfbe =_gfcfb ._dfbe ;
};if _gfcfb ._feg !=nil {_ggef ._feg =_gfcfb ._feg ;};if _gfcfb ._agbc !=nil {_ggef ._agbc =_gfcfb ._agbc ;};if _gfcfb ._bdd !=nil {_ggef ._bdd =_gfcfb ._bdd ;};if _gfcfb ._gcgac !=nil {_ggef ._gcgac =_gfcfb ._gcgac ;};if _gfcfb ._fcgeg !=nil {_ggef ._fcgeg =_gfcfb ._fcgeg ;
};if _gfcfb ._acf !=nil {_ggef ._acf =_gfcfb ._acf ;};if _gfcfb ._cbbf !=nil {_ggef ._cbbf =_gfcfb ._cbbf ;};return &_ggef ;};func (_cdbe *convertContext )getStyleFromCell (_agc _dd .Cell ,_bgag ,_ceaag ,_cgbf *style )*style {if _cgbf !=nil {_ecdgc (_cgbf ,_bgag );
_ecdgc (_cgbf ,_ceaag );return _cgbf ;};_befe :=_agc .X ();_abed :=_cdbe .getStyle (_befe .SAttr );_ecdgc (_abed ,_bgag );_ecdgc (_abed ,_ceaag );return _abed ;};type colInfo struct{_cdde float64 ;_fdfa float64 ;_cecee *style ;};var _ead =_gegac (0.0625);
type anchor struct{_dgd _d .Image ;_aac *_gb .ChartSpace ;_gcda int ;_cege int64 ;_fgc int ;_ebga int64 ;_aegd int ;_gdec int64 ;_gbfcb int ;_egbc int64 ;};type cell struct{_ecc _ca .ST_CellType ;_fcbd int ;_eag float64 ;_dfab []*line ;_gfcf float64 ;_fbdbd float64 ;
_bccfg float64 ;_faag float64 ;_egef float64 ;_dee *_de .TextStyle ;_egb *border ;_acgbc *border ;_bdac *border ;_egde *border ;_bff bool ;_cdbg bool ;_aee _de .Color ;};func (_bfed *convertContext )getDxfStyle (_gfcc *uint32 )*style {_cfed :=&style {};
_fcbfa :=false ;if _gfcc !=nil {var _gbbd *_ca .CT_Dxf ;for _defd ,_gcf :=range _bfed ._gdac .X ().Dxfs .Dxf {if uint32 (_defd )==*_gfcc {_gbbd =_gcf ;};};if _gbbd ==nil {return nil ;};if _gbbd .Fill !=nil &&_gbbd .Fill .FillChoice !=nil &&_gbbd .Fill .FillChoice .PatternFill !=nil {if _gbbd .Fill .FillChoice .PatternFill .FgColor !=nil {_cfed ._adcb =_bfed .getColorStringFromSmlColor (_gbbd .Fill .FillChoice .PatternFill .FgColor );
}else if _gbbd .Fill .FillChoice .PatternFill .BgColor !=nil {_cfed ._adcb =_bfed .getColorStringFromSmlColor (_gbbd .Fill .FillChoice .PatternFill .BgColor );};};_fddg :=_gbbd .Font ;for _ ,_adced :=range _fddg .FontChoice {if _adced .Name !=nil {_cfed ._agbc =&_adced .Name .ValAttr ;
_fcbfa =true ;}else if _adced .B !=nil {_cgae :=_adced .B .ValAttr ==nil ||*_adced .B .ValAttr ;_cfed ._bdd =&_cgae ;_fcbfa =true ;}else if _adced .I !=nil {_bgg :=_adced .I .ValAttr ==nil ||*_adced .I .ValAttr ;_cfed ._gcgac =&_bgg ;_fcbfa =true ;}else if _adced .U !=nil {_bge :=_adced .U .ValAttr ==_ca .ST_UnderlineValuesSingle ||_adced .U .ValAttr ==_ca .ST_UnderlineValuesUnset ;
_cfed ._fcgeg =&_bge ;_fcbfa =true ;}else if _adced .Sz !=nil {_cba :=_adced .Sz .ValAttr ;_cfed ._feg =&_cba ;_fcbfa =true ;}else if _adced .VertAlign !=nil {_bfd :=_adced .VertAlign .ValAttr ==_cg .ST_VerticalAlignRunSuperscript ;_cfed ._acf =&_bfd ;
_aacf :=_adced .VertAlign .ValAttr ==_cg .ST_VerticalAlignRunSubscript ;_cfed ._cbbf =&_aacf ;_fcbfa =true ;}else if _adced .Color !=nil {_cfed ._dfbe =_bfed .getColorStringFromSmlColor (_adced .Color );_fcbfa =true ;};};_ebab :=_gbbd .Border ;if _ebab !=nil {if _ebab .Top !=nil {_cfed ._eba =_bfed .getBorder (_ebab .Top );
_fcbfa =true ;};if _ebab .Bottom !=nil {_cfed ._dfbb =_bfed .getBorder (_ebab .Bottom );_fcbfa =true ;};if _ebab .Left !=nil {_cfed ._dfa =_bfed .getBorder (_ebab .Left );_fcbfa =true ;};if _ebab .Right !=nil {_cfed ._gbgg =_bfed .getBorder (_ebab .Right );
_fcbfa =true ;};};if _gbbd .Alignment !=nil {if _ceac :=_gbbd .Alignment .VerticalAttr ;_ceac !=_ca .ST_VerticalAlignmentUnset {_cfed ._aedg =_ceac ;_fcbfa =true ;};if _ecaec :=_gbbd .Alignment .HorizontalAttr ;_ecaec !=_ca .ST_HorizontalAlignmentUnset {_cfed ._febf =_ecaec ;
_fcbfa =true ;};};};if _fcbfa {return _cfed ;};return nil ;};const _cf =0.25;