//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package vmldrawing ;import (_e "encoding/xml";_d "fmt";_b "github.com/unidoc/unioffice";_bg "github.com/unidoc/unioffice/common/logger";_ec "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_cf "github.com/unidoc/unioffice/schema/urn/schemas_microsoft_com/office/excel";
_cg "github.com/unidoc/unioffice/schema/urn/schemas_microsoft_com/vml";_a "strconv";_f "strings";);

// Bottom get bottom attribute of shape style.
func (_dg *ShapeStyle )Bottom ()float64 {return _dg ._fag };

// ToString generate string of TextpathStyle.
func (_cac *TextpathStyle )String ()string {_cfd :="";_cfd +=_d .Sprintf ("\u0066o\u006et\u002d\u0066\u0061\u006d\u0069\u006c\u0079\u003a\u0025\u0073\u003b",_cac ._fd );_cfd +=_d .Sprintf ("\u0066o\u006et\u002d\u0073\u0069\u007a\u0065\u003a\u0025\u0064\u0070\u0074\u003b",_cac ._afg );
if _cac ._ccf {_cfd +=_d .Sprintf ("\u0066o\u006et\u002d\u0073\u0074\u0079\u006ce\u003a\u0069t\u0061\u006c\u0069\u0063\u003b");};if _cac ._fad {_cfd +=_d .Sprintf ("\u0066\u006f\u006e\u0074\u002d\u0077\u0065\u0069\u0067\u0068\u0074\u003ab\u006f\u006c\u0064\u003b");
};return _cfd ;};

// IsItalic returns true if text is italic.
func (_fcb *TextpathStyle )IsItalic ()bool {return _fcb ._ccf };

// MSOPositionHorizontalRelative get `mso-position-horizontal-relative` attribute of shape style.
func (_cfb *ShapeStyle )MSOPositionHorizontalRelative ()string {return _cfb ._bc };

// SetItalic sets text to italic.
func (_bgf *TextpathStyle )SetItalic (italic bool ){_bgf ._ccf =italic };

// Margins get margin top, left, bottom, and right of shape style.
func (_bbg *ShapeStyle )Margins ()(float64 ,float64 ,float64 ,float64 ){return _bbg ._aga ,_bbg ._eac ,_bbg ._ff ,_bbg ._ecd ;};

// FontSize returns fontSize of the text.
func (_gaa *TextpathStyle )FontSize ()int64 {return _gaa ._afg };

// ShapeStyle is style attribute of v:shape element.
type ShapeStyle struct{_ce string ;_aga float64 ;_eac float64 ;_ff float64 ;_ecd float64 ;_bfe float64 ;_gb float64 ;_fag float64 ;_fac float64 ;_ae float64 ;_daf float64 ;_cge int64 ;_cgd string ;_bc string ;_bb string ;_ba string ;};

// SetBold sets text to bold.
func (_ddf *TextpathStyle )SetBold (bold bool ){_ddf ._fad =bold };

// NewCommentDrawing constructs a new comment drawing.
func NewCommentDrawing ()*Container {_dc :=NewContainer ();_dc .Layout =_cg .NewOfcShapelayout ();_dc .Layout .ExtAttr =_cg .ST_ExtEdit ;_dc .Layout .Idmap =_cg .NewOfcCT_IdMap ();_dc .Layout .Idmap .DataAttr =_b .String ("\u0031");_dc .Layout .Idmap .ExtAttr =_cg .ST_ExtEdit ;
_dc .ShapeType =_cg .NewShapetype ();_dc .ShapeType .IdAttr =_b .String ("_\u0078\u0030\u0030\u0030\u0030\u005f\u0074\u0032\u0030\u0032");_dc .ShapeType .CoordsizeAttr =_b .String ("2\u0031\u0036\u0030\u0030\u002c\u0032\u0031\u0036\u0030\u0030");_dc .ShapeType .SptAttr =_b .Float32 (202);
_dc .ShapeType .PathAttr =_b .String ("\u006d\u0030\u002c0l\u0030\u002c\u0032\u0031\u0036\u0030\u0030\u002c\u00321\u00360\u0030,\u00321\u0036\u0030\u0030\u002c\u0032\u0031\u0036\u0030\u0030\u002c\u0030\u0078\u0065");_ef :=_cg .NewEG_ShapeElements ();_dc .ShapeType .EG_ShapeElements =append (_dc .ShapeType .EG_ShapeElements ,_ef );
_ef .Path =_cg .NewPath ();_ef .Path .GradientshapeokAttr =_ec .ST_TrueFalseT ;_ef .Path .ConnecttypeAttr =_cg .OfcST_ConnectTypeRect ;return _dc ;};type Container struct{Layout *_cg .OfcShapelayout ;ShapeType *_cg .Shapetype ;Shape []*_cg .Shape ;};

// NewTextpathStyle accept value of string style attribute of element v:textpath and format it to generate TextpathStyle.
func NewTextpathStyle (style string )TextpathStyle {_ed :=TextpathStyle {_fd :"\u0022C\u0061\u006c\u0069\u0062\u0072\u0069\"",_afg :44,_fad :false ,_ccf :false };_eg :=_f .Split (style ,"\u003b");for _ ,_dea :=range _eg {_dd :=_f .Split (_dea ,"\u003a");
if len (_dd )!=2{continue ;};switch _dd [0]{case "f\u006f\u006e\u0074\u002d\u0066\u0061\u006d\u0069\u006c\u0079":_ed ._fd =_dd [1];break ;case "\u0066o\u006e\u0074\u002d\u0073\u0069\u007ae":_ed ._afg ,_ =_a .ParseInt (_f .ReplaceAll (_dd [1],"\u0070\u0074",""),10,64);
break ;case "f\u006f\u006e\u0074\u002d\u0077\u0065\u0069\u0067\u0068\u0074":_ed ._fad =_dd [1]=="\u0062\u006f\u006c\u0064";break ;case "\u0066\u006f\u006e\u0074\u002d\u0073\u0074\u0079\u006c\u0065":_ed ._ccf =_dd [1]=="\u0069\u0074\u0061\u006c\u0069\u0063";
break ;};};return _ed ;};

// SetFontSize sets text's fontSize.
func (_dab *TextpathStyle )SetFontSize (fontSize int64 ){_dab ._afg =fontSize };

// SetFontFamily sets text's fontFamily.
func (_ee *TextpathStyle )SetFontFamily (fontFamily string ){_ee ._fd =fontFamily };

// Top get top attribute of shape style.
func (_fc *ShapeStyle )Top ()float64 {return _fc ._bfe };

// FontFamily returns fontFamily of the text.
func (_ecc *TextpathStyle )FontFamily ()string {return _ecc ._fd };func (_g *Container )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_g .Shape =nil ;_eag :for {_fa ,_faa :=d .Token ();if _faa !=nil {return _faa ;};switch _gf :=_fa .(type ){case _e .StartElement :switch _gf .Name .Local {case "s\u0068\u0061\u0070\u0065\u006c\u0061\u0079\u006f\u0075\u0074":_g .Layout =_cg .NewOfcShapelayout ();
if _gc :=d .DecodeElement (_g .Layout ,&_gf );_gc !=nil {return _gc ;};case "\u0073h\u0061\u0070\u0065\u0074\u0079\u0070e":_g .ShapeType =_cg .NewShapetype ();if _faf :=d .DecodeElement (_g .ShapeType ,&_gf );_faf !=nil {return _faf ;};case "\u0073\u0068\u0061p\u0065":_df :=_cg .NewShape ();
if _dff :=d .DecodeElement (_df ,&_gf );_dff !=nil {return _dff ;};_g .Shape =append (_g .Shape ,_df );};case _e .EndElement :break _eag ;};};return nil ;};

// IsBold returns true if text is bold.
func (_feg *TextpathStyle )IsBold ()bool {return _feg ._fad };

// SetHeight set height of shape.
func (_daa *ShapeStyle )SetHeight (height float64 ){_daa ._daf =height };

// NewCommentShape creates a new comment shape for a given cell index.  The
// indices here are zero based.
func NewCommentShape (col ,row int64 )*_cg .Shape {_eb :=_cg .NewShape ();_eb .IdAttr =_b .String (_d .Sprintf ("\u0063\u0073\u005f\u0025\u0064\u005f\u0025\u0064",col ,row ));_eb .TypeAttr =_b .String ("\u0023\u005f\u00780\u0030\u0030\u0030\u005f\u0074\u0032\u0030\u0032");
_eb .StyleAttr =_b .String ("\u0070\u006f\u0073i\u0074\u0069\u006f\u006e\u003a\u0061\u0062\u0073\u006f\u006cu\u0074\u0065\u003b\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u006c\u0065\u0066\u0074:\u0038\u0030\u0070\u0074;\u006d\u0061\u0072\u0067\u0069n-\u0074o\u0070\u003a\u0032pt\u003b\u0077\u0069\u0064\u0074\u0068\u003a1\u0030\u0034\u0070\u0074\u003b\u0068\u0065\u0069\u0067\u0068\u0074\u003a\u0037\u0036\u0070\u0074\u003b\u007a\u002d\u0069\u006e\u0064\u0065x\u003a\u0031\u003bv\u0069\u0073\u0069\u0062\u0069\u006c\u0069t\u0079\u003a\u0068\u0069\u0064\u0064\u0065\u006e");
_eb .FillcolorAttr =_b .String ("\u0023f\u0062\u0066\u0036\u0064\u0036");_eb .StrokecolorAttr =_b .String ("\u0023e\u0064\u0065\u0061\u0061\u0031");_cd :=_cg .NewEG_ShapeElements ();_cd .Fill =_cg .NewFill ();_cd .Fill .Color2Attr =_b .String ("\u0023f\u0062\u0066\u0065\u0038\u0032");
_cd .Fill .AngleAttr =_b .Float64 (-180);_cd .Fill .TypeAttr =_cg .ST_FillTypeGradient ;_cd .Fill .Fill =_cg .NewOfcFill ();_cd .Fill .Fill .ExtAttr =_cg .ST_ExtView ;_cd .Fill .Fill .TypeAttr =_cg .OfcST_FillTypeGradientUnscaled ;_eb .EG_ShapeElements =append (_eb .EG_ShapeElements ,_cd );
_da :=_cg .NewEG_ShapeElements ();_da .Shadow =_cg .NewShadow ();_da .Shadow .OnAttr =_ec .ST_TrueFalseT ;_da .Shadow .ObscuredAttr =_ec .ST_TrueFalseT ;_eb .EG_ShapeElements =append (_eb .EG_ShapeElements ,_da );_ea :=_cg .NewEG_ShapeElements ();_ea .Path =_cg .NewPath ();
_ea .Path .ConnecttypeAttr =_cg .OfcST_ConnectTypeNone ;_eb .EG_ShapeElements =append (_eb .EG_ShapeElements ,_ea );_ag :=_cg .NewEG_ShapeElements ();_ag .Textbox =_cg .NewTextbox ();_ag .Textbox .StyleAttr =_b .String ("\u006d\u0073\u006f\u002ddi\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u002d\u0061\u006c\u0074\u003a\u0061\u0075t\u006f");
_eb .EG_ShapeElements =append (_eb .EG_ShapeElements ,_ag );_eab :=_cg .NewEG_ShapeElements ();_eab .ClientData =_cf .NewClientData ();_eab .ClientData .ObjectTypeAttr =_cf .ST_ObjectTypeNote ;_eab .ClientData .MoveWithCells =_ec .ST_TrueFalseBlankT ;_eab .ClientData .SizeWithCells =_ec .ST_TrueFalseBlankT ;
_eab .ClientData .Anchor =_b .String ("\u0031,\u0020\u0031\u0035\u002c\u0020\u0030\u002c\u0020\u0032\u002c\u00202\u002c\u0020\u0035\u0034\u002c\u0020\u0035\u002c\u0020\u0033");_eab .ClientData .AutoFill =_ec .ST_TrueFalseBlankFalse ;_eab .ClientData .Row =_b .Int64 (row );
_eab .ClientData .Column =_b .Int64 (col );_eb .EG_ShapeElements =append (_eb .EG_ShapeElements ,_eab );return _eb ;};func NewContainer ()*Container {return &Container {}};

// ToString formatting ShapeStyle to string.
func (_ga *ShapeStyle )String ()string {_bgb :="";_bgb +=_d .Sprintf ("\u0070\u006f\u0073i\u0074\u0069\u006f\u006e\u003a\u0025\u0073\u003b",_ga ._ce );_bgb +=_d .Sprintf ("\u006da\u0072g\u0069\u006e\u002d\u006c\u0065\u0066\u0074\u003a\u0025\u0064\u003b",int64 (_ga ._eac ));
_bgb +=_d .Sprintf ("\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u0074\u006fp\u003a\u0025\u0064\u003b",int64 (_ga ._aga ));_bgb +=_d .Sprintf ("w\u0069\u0064\u0074\u0068\u003a\u0025\u0064\u0070\u0074\u003b",int64 (_ga ._ae ));_bgb +=_d .Sprintf ("\u0068\u0065\u0069g\u0068\u0074\u003a\u0025\u0064\u0070\u0074\u003b",int64 (_ga ._daf ));
_bgb +=_d .Sprintf ("z\u002d\u0069\u006e\u0064\u0065\u0078\u003a\u0025\u0064\u003b",_ga ._cge );_bgb +=_d .Sprintf ("m\u0073\u006f\u002d\u0070\u006f\u0073i\u0074\u0069\u006f\u006e\u002d\u0068\u006f\u0072\u0069z\u006f\u006e\u0074a\u006c:\u0025\u0073\u003b",_ga ._cgd );
_bgb +=_d .Sprintf ("\u006d\u0073o-\u0070\u006f\u0073i\u0074\u0069\u006f\u006e-ho\u0072iz\u006f\u006e\u0074\u0061\u006c\u002d\u0072el\u0061\u0074\u0069\u0076\u0065\u003a\u0025s\u003b",_ga ._bc );_bgb +=_d .Sprintf ("\u006ds\u006f\u002d\u0070\u006fs\u0069\u0074\u0069\u006f\u006e-\u0076e\u0072t\u0069\u0063\u0061\u006c\u003a\u0025\u0073;",_ga ._bb );
_bgb +=_d .Sprintf ("\u006d\u0073\u006f-p\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u002d\u0076e\u0072t\u0069c\u0061l\u002d\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u003a\u0025\u0073\u003b",_ga ._ba );return _bgb ;};

// SetWidth set width of shape.
func (_bcf *ShapeStyle )SetWidth (width float64 ){_bcf ._ae =width };

// Width return width of shape.
func (_bga *ShapeStyle )Width ()float64 {return _bga ._ae };

// Right get right attribute of shape style.
func (_fe *ShapeStyle )Right ()float64 {return _fe ._fac };func (_bf *Container )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0076"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d:v\u006d\u006c"});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u006f"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006di\u0063\u0072\u006f\u0073\u006f\u0066t\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u006ff\u0066\u0069\u0063\u0065"});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002d\u0063\u006fm\u003a\u006f\u0066\u0066\u0069c\u0065\u003ae\u0078\u0063\u0065\u006c"});
start .Name .Local ="\u0078\u006d\u006c";e .EncodeToken (start );if _bf .Layout !=nil {_ac :=_e .StartElement {Name :_e .Name {Local :"\u006f\u003a\u0073\u0068\u0061\u0070\u0065\u006c\u0061\u0079\u006f\u0075\u0074"}};e .EncodeElement (_bf .Layout ,_ac );
};if _bf .ShapeType !=nil {_cc :=_e .StartElement {Name :_e .Name {Local :"v\u003a\u0073\u0068\u0061\u0070\u0065\u0074\u0079\u0070\u0065"}};e .EncodeElement (_bf .ShapeType ,_cc );};for _ ,_db :=range _bf .Shape {_efa :=_e .StartElement {Name :_e .Name {Local :"\u0076:\u0073\u0068\u0061\u0070\u0065"}};
e .EncodeElement (_db ,_efa );};return e .EncodeToken (_e .EndElement {Name :start .Name });};

// Left get left attribute of shape style.
func (_ead *ShapeStyle )Left ()float64 {return _ead ._gb };

// Position get position attribute of shape style.
func (_bag *ShapeStyle )Position ()string {return _bag ._ce };

// CreateFormula creates F element for typeFormulas.
func CreateFormula (s string )*_cg .CT_F {_eadf :=_cg .NewCT_F ();_eadf .EqnAttr =&s ;return _eadf };

// TextpathStyle is style attribute of element v:textpath.
type TextpathStyle struct{_fd string ;_afg int64 ;_fad bool ;_ccf bool ;};

// NewShapeStyle accept value of string style attribute in v:shape and format it to generate ShapeStyle.
func NewShapeStyle (style string )ShapeStyle {_bba :=ShapeStyle {_ae :0,_daf :0};_ca :=_f .Split (style ,"\u003b");for _ ,_bd :=range _ca {_cdf :=_f .Split (_bd ,"\u003a");if len (_cdf )!=2{continue ;};var _fg error ;switch _cdf [0]{case "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e":_bba ._ce =_cdf [1];
break ;case "\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u0074\u006f\u0070":_bba ._aga ,_fg =_a .ParseFloat (_f .ReplaceAll (_cdf [1],"\u0070\u0074",""),64);break ;case "m\u0061\u0072\u0067\u0069\u006e\u002d\u006c\u0065\u0066\u0074":_bba ._eac ,_fg =_a .ParseFloat (_f .ReplaceAll (_cdf [1],"\u0070\u0074",""),64);
break ;case "\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u0062\u006f\u0074\u0074\u006f\u006d":_bba ._ff ,_fg =_a .ParseFloat (_f .ReplaceAll (_cdf [1],"\u0070\u0074",""),64);break ;case "\u006d\u0061\u0072g\u0069\u006e\u002d\u0072\u0069\u0067\u0068\u0074":_bba ._ecd ,_fg =_a .ParseFloat (_f .ReplaceAll (_cdf [1],"\u0070\u0074",""),64);
break ;case "\u0074\u006f\u0070":_bba ._bfe ,_fg =_a .ParseFloat (_f .ReplaceAll (_cdf [1],"\u0070\u0074",""),64);break ;case "\u006c\u0065\u0066\u0074":_bba ._gb ,_fg =_a .ParseFloat (_f .ReplaceAll (_cdf [1],"\u0070\u0074",""),64);break ;case "\u0062\u006f\u0074\u0074\u006f\u006d":_bba ._fag ,_fg =_a .ParseFloat (_f .ReplaceAll (_cdf [1],"\u0070\u0074",""),64);
break ;case "\u0072\u0069\u0067h\u0074":_bba ._fac ,_fg =_a .ParseFloat (_f .ReplaceAll (_cdf [1],"\u0070\u0074",""),64);break ;case "\u0077\u0069\u0064t\u0068":_bba ._ae ,_fg =_a .ParseFloat (_f .ReplaceAll (_cdf [1],"\u0070\u0074",""),64);break ;case "\u0068\u0065\u0069\u0067\u0068\u0074":_bba ._daf ,_fg =_a .ParseFloat (_f .ReplaceAll (_cdf [1],"\u0070\u0074",""),64);
break ;case "\u007a-\u0069\u006e\u0064\u0065\u0078":_bba ._cge ,_fg =_a .ParseInt (_cdf [1],10,64);break ;case "\u006d\u0073\u006f-p\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u002d\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":_bba ._cgd =_cdf [1];
break ;case "\u006d\u0073\u006f\u002d\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u002d\u0068\u006fr\u0069z\u006f\u006e\u0074\u0061\u006c\u002d\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":_bba ._bc =_cdf [1];break ;case "m\u0073\u006f\u002d\u0070os\u0069t\u0069\u006f\u006e\u002d\u0076e\u0072\u0074\u0069\u0063\u0061\u006c":_bba ._bb =_cdf [1];
break ;case "\u006d\u0073\u006f\u002d\u0070\u006f\u0073\u0069\u0074\u0069o\u006e\u002d\u0076\u0065\u0072\u0074\u0069c\u0061\u006c\u002d\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":_bba ._ba =_cdf [1];break ;};if _fg !=nil {_bg .Log .Debug ("\u0055n\u0061\u0062l\u0065\u0020\u0074o\u0020\u0070\u0061\u0072\u0073\u0065\u0020s\u0074\u0079\u006c\u0065\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u003a\u0020\u0025\u0073 \u0076\u0061\u006c\u0075\u0065\u003a\u0020\u0025\u0076",_cdf [0],_cdf [1]);
};};return _bba ;};

// MSOPositionVerticalRelative get `mso-position-vertical-relative` attribute of shape style.
func (_ceb *ShapeStyle )MSOPositionVerticalRelative ()string {return _ceb ._ba };

// Height return height of shape.
func (_de *ShapeStyle )Height ()float64 {return _de ._daf };const (ShapeStylePositionAbsolute ="\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065";ShapeStylePositionRelative ="\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065";);