//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package axcontrol ;import (_gd "bytes";_de "encoding/binary";_d "errors";_f "fmt";_fa "github.com/unidoc/unioffice/common/tempstorage";_e "github.com/unidoc/unioffice/internal/mscfb";_dc "github.com/unidoc/unioffice/internal/mscfb/rw";_c "github.com/unidoc/unioffice/schema/schemas.microsoft.com/office/activeX";
_a "io";);func (_begb *LabelControl )writePropMask (_eeb *_dc .Writer )error {_abc :=uint32 (0);_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._ceg );_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._ffca );_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._aedc );
_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._eda );_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._fggce );_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._fggcc );_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._gag );_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._faa );
_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._ecag );_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._gggg );_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._aea );_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._bgdaa );_abc =_dc .PushLeftUI32 (_abc ,_begb ._cafbe ._ddgf );
_abc >>=19;return _de .Write (_eeb ,_de .LittleEndian ,_abc );};func (_egg *ImageControl )writeExtraDataBlock (_abd *_dc .Writer )error {if _egg ._daa ._cfgc {_agc :=uint64 (_egg ._eec ._fac )<<32|uint64 (_egg ._eec ._aga );if _cfad :=_abd .WritePropertyNoAlign (_agc );
_cfad !=nil {return _cfad ;};};return nil ;};type commandButtonDataBlock struct{_gef uint32 ;_fba uint32 ;_gdg uint32 ;_efgg uint32 ;_eef bool ;_aff uint32 ;_dge uint8 ;_ddf uint16 ;_cg rune ;_cda uint16 ;};const _ecgc =5;

// GetWidth returns width of the CommandButton in HIMETRIC (0.01mm)
func (_gbd *CommandButtonControl )GetWidth ()uint32 {return _gbd ._efb ._ebf };func (_bdg *CommandButtonControl )readExtraDataBlock (_ccg *_dc .Reader )error {_bdg ._efb =&commandButtonExtraDataBlock {};if _bdg ._ce ._efgg > 0{_ebg ,_fcaa :=_ccg .ReadStringProperty (_bdg ._ce ._efgg );
if _fcaa !=nil {return _fcaa ;};_bdg ._efb ._bgda =_ebg ;};if _bdg ._dae ._geac {var _gee uint64 ;if _aba :=_ccg .ReadPairProperty (&_gee );_aba !=nil {return _aba ;};_bdg ._efb ._fdfg =uint32 (_gee );_bdg ._efb ._ebf =uint32 (_gee >>32);};return nil ;
};

// GetCaption gets a caption string from a commandButton control.
func (_bg *CommandButtonControl )GetCaption ()string {return _bg ._efb ._bgda };

// GetValue gets a value from a control which value can be represented as boolean (on/off).
func (_babb *morphDataControlBoolValue )GetValue ()bool {return _babb .getValueBool ()};const _beg uint32 =0x0000746C;

// SetMax sets a button max value.
func (_bcdc *SpinButtonControl )SetMax (max int32 ){_bcdc ._gde ._eddc =true ;_bcdc ._dcbbe ._eagc =max };func (_gdbf *SpinButtonControl )readPropMask (_dddb *_dc .Reader )error {var _afce uint32 ;if _fcfag :=_de .Read (_dddb ,_de .LittleEndian ,&_afce );
_fcfag !=nil {return _fcfag ;};_gdbf ._gde =&spinButtonPropMask {};_gdbf ._gde ._agcac ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._bcga ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._fgcgd ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._feba ,_afce =_dc .PopRightUI32 (_afce );
_afce >>=1;_gdbf ._gde ._ecbf ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._eddc ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._adfe ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._gdcd ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._aeaa ,_afce =_dc .PopRightUI32 (_afce );
_gdbf ._gde ._aagd ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._agaa ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._gfe ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._cgcd ,_afce =_dc .PopRightUI32 (_afce );_gdbf ._gde ._ecac ,_afce =_dc .PopRightUI32 (_afce );
return nil ;};type morphDataColumnInfoPropMask struct{};func (_fbd *ImageControl )writePropMask (_bdda *_dc .Writer )error {_fdd :=uint32 (0);_fdd >>=2;_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._bfba );_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._bcc );
_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._gae );_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._bafa );_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._fbf );_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._cbg );_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._afff );
_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._cfgc );_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._acd );_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._agga );_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._eba );_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._afa );
_fdd =_dc .PushLeftUI32 (_fdd ,_fbd ._daa ._egd );_fdd >>=17;return _de .Write (_bdda ,_de .LittleEndian ,_fdd );};func (_edcdc *SpinButtonControl )readExtraDataBlock (_eaee *_dc .Reader )error {_edcdc ._aaef =&spinButtonExtraDataBlock {};if _edcdc ._gde ._feba {var _dffc uint64 ;
if _dccgga :=_eaee .ReadPairProperty (&_dffc );_dccgga !=nil {return _dccgga ;};_edcdc ._aaef ._gcda =uint32 (_dffc );_edcdc ._aaef ._aaga =uint32 (_dffc >>32);};return nil ;};

// ExportToByteArray makes a byte array from a control as it is stored in .bin files.
func (_ddb *Control )ExportToByteArray ()([]byte ,error ){_bd ,_aab :=_fa .Open (_ddb ._ee );if _aab !=nil {return nil ,_aab ;};defer _bd .Close ();_fd ,_aab :=_e .New (_bd );if _aab !=nil {return nil ,_aab ;};_bce :=_dc .NewWriter ();if _ffd :=_de .Write (_bce ,_de .LittleEndian ,&_ddb ._cf );
_ffd !=nil {return nil ,_ffd ;};if _gea :=_de .Write (_bce ,_de .LittleEndian ,&_ddb ._ad );_gea !=nil {return nil ,_gea ;};if _gaf :=_de .Write (_bce ,_de .LittleEndian ,uint16 (0));_gaf !=nil {return nil ,_gaf ;};var _da error ;if _fea :=_ddb .Choice ;
_fea !=nil {if _fea .CheckBox !=nil {_da =_fea .CheckBox .export (_bce );}else if _fea .TextBox !=nil {_da =_fea .TextBox .export (_bce );}else if _fea .ComboBox !=nil {_da =_fea .ComboBox .export (_bce );}else if _fea .ListBox !=nil {_da =_fea .ListBox .export (_bce );
}else if _fea .OptionButton !=nil {_da =_fea .OptionButton .export (_bce );}else if _fea .ToggleButton !=nil {_da =_fea .ToggleButton .export (_bce );}else if _fea .Label !=nil {_da =_fea .Label .export (_bce );}else if _fea .SpinButton !=nil {_da =_fea .SpinButton .export (_bce );
}else if _fea .CommandButton !=nil {_da =_fea .CommandButton .export (_bce );}else if _fea .ScrollBar !=nil {_da =_fea .ScrollBar .export (_bce );}else {_da =_fea ._eb .writeTheRest (_bce );};};if _da !=nil {return nil ,_da ;};if _cfc :=_bce .WriteByteAt (byte (_ddb ._gb ),2);
_cfc !=nil {return nil ,_cfc ;};if _cbc :=_bce .WriteByteAt (byte (_ddb ._gb >>8),3);_cbc !=nil {return nil ,_cbc ;};_ddd ,_aab :=_fd .GetEntry ("\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");if _aab !=nil {return nil ,_aab ;};if _ebd :=_ddd .SetEntryContent (_bce .Bytes ());
_ebd !=nil {return nil ,_ebd ;};return _fd .Export ();};

// GetHeight returns height of the CommandButton in HIMETRIC (0.01mm)
func (_fca *CommandButtonControl )GetHeight ()uint32 {return _fca ._efb ._fdfg };func (_fge *CommandButtonControl )export (_dea *_dc .Writer )error {if _fef :=_fge .writePropMask (_dea );_fef !=nil {return _fef ;};if _cfeb :=_fge .writeDataBlock (_dea );
_cfeb !=nil {return _cfeb ;};if _efg :=_fge .writeExtraDataBlock (_dea );_efg !=nil {return _efg ;};_fge ._egbd =uint16 (_dea .Len ()-4);if _dbae :=_fge .writeStreamDataPM (_dea );_dbae !=nil {return _dbae ;};return _fge .writeTheRest (_dea );};

// GetBackColor gets a button text color value for a system palette from a commandButton control.
func (_af *CommandButtonControl )GetBackColor ()uint32 {return _af ._ce ._fba };const _cad =2;

// CommandButtonControl is a representation of a commandButton ActiveX form.
type CommandButtonControl struct{controlBase ;_dae *commandButtonPropMask ;_ce *commandButtonDataBlock ;_efb *commandButtonExtraDataBlock ;_cfee *streamData ;};func _ggggf (_gac *_dc .Reader )(*morphDataControl ,error ){_gfb :=&morphDataControl {};if _dda :=_gfb .readPropMask (_gac );
_dda !=nil {return nil ,_dda ;};if _dadd :=_gfb .readDataBlock (_gac );_dadd !=nil {return nil ,_dadd ;};if _fada :=_gfb .readExtraDataBlock (_gac );_fada !=nil {return nil ,_fada ;};if _defe :=_gfb .readStreamDataMP (_gac ,_gfb ._dgc ._fdab ,_gfb ._dgc ._bedg );
_defe !=nil {return nil ,_defe ;};switch _gfb ._aabd ._cbfe {case _cad ,_geb :if _ccb :=_gfb .readColumnInfo (_gac );_ccb !=nil {return nil ,_ccb ;};if _ccbb :=_gfb .readColumnInfoPropMask (_gac );_ccbb !=nil {return nil ,_ccbb ;};if _gcf :=_gfb .readColumnInfoDataBlock (_gac );
_gcf !=nil {return nil ,_gcf ;};};if _caad :=_gfb .readTheRest (_gac );_caad !=nil {return nil ,_caad ;};return _gfb ,nil ;};type commandButtonExtraDataBlock struct{_ebf uint32 ;_fdfg uint32 ;_bgda string ;};type commandButtonPropMask struct{_egb bool ;
_ac bool ;_ffb bool ;_edg bool ;_ae bool ;_geac bool ;_aeb bool ;_fcb bool ;_ffge bool ;_fcg bool ;_gge bool ;};

// GetMax gets a button max value.
func (_fgb *ScrollBarControl )GetMax ()int32 {return _fgb ._bdbe ._cbdg };func (_ffc *CommandButtonControl )writeExtraDataBlock (_aaab *_dc .Writer )error {if _ffc ._ce ._efgg > 0{if _cbb :=_aaab .WriteStringProperty (_ffc ._efb ._bgda );_cbb !=nil {return _cbb ;
};};if _ffc ._dae ._geac {_be :=uint64 (_ffc ._efb ._ebf )<<32|uint64 (_ffc ._efb ._fdfg );if _ffa :=_aaab .WritePropertyNoAlign (_be );_ffa !=nil {return _ffa ;};};return nil ;};func (_dgad *SpinButtonControl )writeDataBlock (_dgdgac *_dc .Writer )error {if _dgad ._gde ._agcac {if _ffce :=_dgdgac .WriteProperty (_dgad ._dcbbe ._agad );
_ffce !=nil {return _ffce ;};};if _dgad ._gde ._bcga {if _gega :=_dgdgac .WriteProperty (_dgad ._dcbbe ._eagf );_gega !=nil {return _gega ;};};if _dgad ._gde ._fgcgd {if _gdff :=_dgdgac .WriteProperty (_dgad ._dcbbe ._gccb );_gdff !=nil {return _gdff ;
};};if _dgad ._gde ._ecbf {if _ggfc :=_dgdgac .WriteProperty (_dgad ._dcbbe ._bcfd );_ggfc !=nil {return _ggfc ;};};if _dgad ._gde ._eddc {if _dcad :=_dgdgac .WriteProperty (_dgad ._dcbbe ._eagc );_dcad !=nil {return _dcad ;};};if _dgad ._gde ._adfe {if _acbd :=_dgdgac .WriteProperty (_dgad ._dcbbe ._gffb );
_acbd !=nil {return _acbd ;};};if _dgad ._gde ._gdcd {if _gfdg :=_dgdgac .WriteProperty (_dgad ._dcbbe ._geacb );_gfdg !=nil {return _gfdg ;};};if _dgad ._gde ._aeaa {if _ebdeg :=_dgdgac .WriteProperty (_dgad ._dcbbe ._cagbd );_ebdeg !=nil {return _ebdeg ;
};};if _dgad ._gde ._aagd {if _geeb :=_dgdgac .WriteProperty (_dgad ._dcbbe ._gccf );_geeb !=nil {return _geeb ;};};if _dgad ._gde ._agaa {if _cdc :=_dgdgac .WriteProperty (_dgad ._dcbbe ._ebce );_cdc !=nil {return _cdc ;};};if _dgad ._gde ._gfe {if _degc :=_dgdgac .WriteProperty (_dgad ._dcbbe ._bffe );
_degc !=nil {return _degc ;};};if _dgad ._gde ._cgcd {if _adee :=_dgdgac .WriteProperty (_dgad ._dcbbe ._fggf );_adee !=nil {return _adee ;};};if _dgad ._gde ._ecac {if _bcbe :=_dgdgac .WriteProperty (_dgad ._dcbbe ._gdea );_bcbe !=nil {return _bcbe ;};
};return _dgdgac .AlignLength (4);};

// GetForeColor gets a button text color value for a system palette from a commandButton control.
func (_ggg *CommandButtonControl )GetForeColor ()uint32 {return _ggg ._ce ._gef };var _dff =[]byte {0x04,0x52,0xE3,0x0B,0x91,0x8F,0xCE,0x11,0x9D,0xE3,0,0xAA,0,0x4B,0xB8,0x51};const (FmPictureSizeModeClip FmPictureSizeMode =iota ;FmPictureSizeModeStretch ;
_ ;FmPictureSizeModeZoom ;);func (_dga *morphDataControl )readExtraDataBlock (_fffa *_dc .Reader )error {_dga ._bfab =&morphDataExtraDataBlock {};if _dga ._dgc ._acb {var _cfab uint64 ;if _baec :=_fffa .ReadPairProperty (&_cfab );_baec !=nil {return _baec ;
};_dga ._bfab ._cabc =uint32 (_cfab );_dga ._bfab ._ege =uint32 (_cfab >>32);};if _dga ._aabd ._aedcf > 0{_adb ,_ffdc :=_fffa .ReadStringProperty (_dga ._aabd ._aedcf );if _ffdc !=nil {return _ffdc ;};_dga ._bfab ._bfe =_adb ;};if _dga ._aabd ._gege > 0{_bgfa ,_gacc :=_fffa .ReadStringProperty (_dga ._aabd ._gege );
if _gacc !=nil {return _gacc ;};_dga ._bfab ._bcb =_bgfa ;};if _dga ._aabd ._gga > 0{_bggb ,_dbfe :=_fffa .ReadStringProperty (_dga ._aabd ._gga );if _dbfe !=nil {return _dbfe ;};_dga ._bfab ._dfed =_bggb ;};return nil ;};

// LabelControl is a representation of a label ActiveX form.
type LabelControl struct{controlBase ;_cafbe *labelPropMask ;_fgd *labelDataBlock ;_dgf *labelExtraDataBlock ;_edgb *streamData ;};

// GetCaption gets a caption string from a morph control.
func (_cab *morphDataControl )GetCaption ()string {if _cab ._bdf &&_cab ._dgc ._agce {return _cab ._bfab ._bcb ;};return "";};

// SetCaption sets a caption string for a label control.
func (_ebdb *LabelControl )SetCaption (caption string ){_ebdb ._cafbe ._eda =true ;_ebdb ._fgd ._fbdd =uint32 (len (caption ));_ebdb ._dgf ._gggb =caption ;};type stdPicture struct{_dgd uint32 ;_fbg uint32 ;_eefa *_gd .Buffer ;};func (_dcd *SpinButtonControl )writeExtraDataBlock (_gbg *_dc .Writer )error {if _dcd ._gde ._feba {_fbacb :=uint64 (_dcd ._aaef ._aaga )<<32|uint64 (_dcd ._aaef ._gcda );
if _dfdb :=_gbg .WritePropertyNoAlign (_fbacb );_dfdb !=nil {return _dfdb ;};};return nil ;};func (_fedfe *controlBase )readStreamDataMP (_bfce *_dc .Reader ,_egce ,_bge bool )error {_fedfe ._agb =&streamData {};if _egce {_fedfe ._agb ._eade =&guidAndPicture {};
if _ecgg :=_fedfe ._agb ._eade .importFromReader (_bfce );_ecgg !=nil {return _ecgg ;};};if _bge {_fedfe ._agb ._ccdd =&guidAndPicture {};if _fead :=_fedfe ._agb ._ccdd .importFromReader (_bfce );_fead !=nil {return _fead ;};};return nil ;};

// SetHeight sets height of the SpinButton in HIMETRIC (0.01mm)
func (_abag *SpinButtonControl )SetHeight (height uint32 ){_abag ._gde ._feba =true ;_abag ._aaef ._gcda =height ;};

// SetForeColor sets a button text color value from a system palette for a scrollBar control.
func (_gda *ScrollBarControl )SetForeColor (foreColor uint32 ){_gda ._babe ._dgbb =true ;_gda ._bdbe ._dadeb =foreColor ;};

// GetHeight returns height of the SpinButton in HIMETRIC (0.01mm)
func (_afec *SpinButtonControl )GetHeight ()uint32 {return _afec ._aaef ._gcda };

// GetHeight returns height of the Label in HIMETRIC (0.01mm)
func (_ebc *LabelControl )GetHeight ()uint32 {return _ebc ._dgf ._cdfe };func _ddc (_fdf *_e .Reader )(string ,error ){_geg ,_ddgb :=_fdf .GetEntry ("\u0043o\u006d\u0070\u004f\u0062\u006a");if _ddgb !=nil {return "",_ddgb ;};_cbd :=make ([]byte ,_geg .Size );
_ ,_ddgb =_geg .Read (_cbd );if _ddgb !=nil {return "",_ddgb ;};_dcb :=_gd .Split (_cbd ,[]byte ("\u002e"));if len (_dcb )< 2{return "",_d .New ("\u0055\u006e\u006bn\u006f\u0077\u006e\u0020\u0066\u006f\u0072\u006d");};return string (_dcb [len (_dcb )-2]),nil ;
};func _bca (_gec uint32 )(bool ,uint32 ){if _gec ==0{return false ,0;};_eg :=_gec >=1<<31;if _eg {_gec -=1<<31;};return _eg ,_gec ;};

// SetValue sets a value for a control which value can be represented as boolean (on/off).
func (_efe *morphDataControlBoolValue )SetValue (value bool ){_efe .setValueBool (value )};type labelExtraDataBlock struct{_deeb uint32 ;_cdfe uint32 ;_gggb string ;};

// SetForeColor sets a button text color value from a system palette for a label control.
func (_cfeed *LabelControl )SetForeColor (foreColor uint32 ){_cfeed ._cafbe ._ceg =true ;_cfeed ._fgd ._bbb =foreColor ;};type controlBase struct{_egbd uint16 ;_bdf bool ;_agb *streamData ;_ecf []byte ;};

// GetMax gets a button max value.
func (_defbg *SpinButtonControl )GetMax ()int32 {return _defbg ._dcbbe ._eagc };

// SetWidth sets width of the SpinButton in HIMETRIC (0.01mm)
func (_dacg *SpinButtonControl )SetWidth (width uint32 ){_dacg ._gde ._feba =true ;_dacg ._aaef ._aaga =width ;};func (_edc *guidAndPicture )getStdPictureBytes ()[]byte {if _edc !=nil &&_edc ._dfg !=nil &&_edc ._dfg ._eefa !=nil {return _edc ._dfg ._eefa .Bytes ();
};return nil ;};func (_gceb *LabelControl )readExtraDataBlock (_gcee *_dc .Reader )error {_gceb ._dgf =&labelExtraDataBlock {};if _gceb ._fgd ._fbdd > 0{_bdbg ,_gafe :=_gcee .ReadStringProperty (_gceb ._fgd ._fbdd );if _gafe !=nil {return _gafe ;};_gceb ._dgf ._gggb =_bdbg ;
};if _gceb ._cafbe ._fggcc {var _dfdc uint64 ;if _bcdg :=_gcee .ReadPairProperty (&_dfdc );_bcdg !=nil {return _bcdg ;};_gceb ._dgf ._cdfe =uint32 (_dfdc );_gceb ._dgf ._deeb =uint32 (_dfdc >>32);};return nil ;};func (_agg *CommandButtonControl )writePropMask (_aef *_dc .Writer )error {_bab :=uint32 (0);
_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._egb );_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._ac );_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._ffb );_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._edg );_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._ae );_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._geac );
_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._aeb );_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._fcb );_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._ffge );_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._fcg );_bab =_dc .PushLeftUI32 (_bab ,_agg ._dae ._gge );_bab >>=21;
return _de .Write (_aef ,_de .LittleEndian ,_bab );};

// SetForeColor sets a button text color value from a system palette for a spinButton control.
func (_aaae *SpinButtonControl )SetForeColor (foreColor uint32 ){_aaae ._gde ._agcac =true ;_aaae ._dcbbe ._agad =foreColor ;};func (_cgf *controlBase )readStreamDataM (_bee *_dc .Reader ,_ffad bool )error {_cgf ._agb =&streamData {};if _ffad {_cgf ._agb ._eade =&guidAndPicture {};
if _gafa :=_cgf ._agb ._eade .importFromReader (_bee );_gafa !=nil {return _gafa ;};};return nil ;};

// FmPictureSizeMode represents one of the three picture size modes according to MS-OFORMS document.
type FmPictureSizeMode byte ;type guidAndPicture struct{_dfb []byte ;_dfg *stdPicture ;};func (_aae *controlBase )readTheRest (_eab *_dc .Reader )error {_cce :=_gd .NewBuffer ([]byte {});_ ,_dfc :=_a .Copy (_cce ,_eab );if _dfc !=nil {return _dfc ;};_aae ._ecf =_cce .Bytes ();
return nil ;};type labelDataBlock struct{_bbb uint32 ;_ecg uint32 ;_cge uint32 ;_fbdd uint32 ;_dada bool ;_cddc uint32 ;_dbf uint8 ;_affb uint32 ;_dffa uint16 ;_cef uint16 ;_ebea uint16 ;_fae rune ;_fbcb uint16 ;};func (_cgba *LabelControl )writeDataBlock (_gdb *_dc .Writer )error {if _cgba ._cafbe ._ceg {if _edfe :=_gdb .WriteProperty (_cgba ._fgd ._bbb );
_edfe !=nil {return _edfe ;};};if _cgba ._cafbe ._ffca {if _baeg :=_gdb .WriteProperty (_cgba ._fgd ._ecg );_baeg !=nil {return _baeg ;};};if _cgba ._cafbe ._aedc {if _fdef :=_gdb .WriteProperty (_cgba ._fgd ._cge );_fdef !=nil {return _fdef ;};};if _cgba ._cafbe ._eda {_aag :=_bf (_cgba ._fgd ._fbdd ,_cgba ._fgd ._dada );
if _eded :=_gdb .WriteProperty (_aag );_eded !=nil {return _eded ;};};if _cgba ._cafbe ._fggce {if _deeg :=_gdb .WriteProperty (_cgba ._fgd ._cddc );_deeg !=nil {return _deeg ;};};if _cgba ._cafbe ._gag {if _abf :=_gdb .WriteProperty (_cgba ._fgd ._dbf );
_abf !=nil {return _abf ;};};if _cgba ._cafbe ._faa {if _aaabb :=_gdb .WriteProperty (_cgba ._fgd ._affb );_aaabb !=nil {return _aaabb ;};};if _cgba ._cafbe ._ecag {if _fbaae :=_gdb .WriteProperty (_cgba ._fgd ._dffa );_fbaae !=nil {return _fbaae ;};};
if _cgba ._cafbe ._gggg {if _ebb :=_gdb .WriteProperty (_cgba ._fgd ._cef );_ebb !=nil {return _ebb ;};};if _cgba ._cafbe ._aea {if _cfeeb :=_gdb .WriteProperty (_cgba ._fgd ._ebea );_cfeeb !=nil {return _cfeeb ;};};if _cgba ._cafbe ._bgdaa {if _dfa :=_gdb .WriteProperty (_cgba ._fgd ._fae );
_dfa !=nil {return _dfa ;};};if _cgba ._cafbe ._ddgf {if _fegg :=_gdb .WriteProperty (_cgba ._fgd ._fbcb );_fegg !=nil {return _fegg ;};};return _gdb .AlignLength (4);};

// GetWidth returns width of the Label in HIMETRIC (0.01mm)
func (_adc *LabelControl )GetWidth ()uint32 {return _adc ._dgf ._deeb };func (_gcgd *controlBase )writeStreamDataMP (_ecbg *_dc .Writer )error {if _gcgd ._agb !=nil {if _gcgd ._agb ._eade !=nil {if _cacg :=_gcgd ._agb ._eade .export (_ecbg );_cacg !=nil {return _cacg ;
};};if _gcgd ._agb ._ccdd !=nil {if _ddde :=_gcgd ._agb ._ccdd .export (_ecbg );_ddde !=nil {return _ddde ;};};};return nil ;};

// SetBackColor sets a button text color value from a system palette for a label control.
func (_gca *LabelControl )SetBackColor (backColor uint32 ){_gca ._cafbe ._ffca =true ;_gca ._fgd ._ecg =backColor ;};

// GetMin gets a button min value.
func (_bgc *ScrollBarControl )GetMin ()int32 {return _bgc ._bdbe ._egef };

// CheckBoxDataControl is a representation of a check box ActiveX form.
type CheckBoxDataControl struct{*morphDataControlBoolValue };func (_dgeg *CommandButtonControl )writeDataBlock (_eegf *_dc .Writer )error {if _dgeg ._dae ._egb {if _ffgb :=_eegf .WriteProperty (_dgeg ._ce ._gef );_ffgb !=nil {return _ffgb ;};};if _dgeg ._dae ._ac {if _edf :=_eegf .WriteProperty (_dgeg ._ce ._fba );
_edf !=nil {return _edf ;};};if _dgeg ._dae ._ffb {if _edb :=_eegf .WriteProperty (_dgeg ._ce ._gdg );_edb !=nil {return _edb ;};};if _dgeg ._dae ._edg {_gce :=_bf (_dgeg ._ce ._efgg ,_dgeg ._ce ._eef );if _fdb :=_eegf .WriteProperty (_gce );_fdb !=nil {return _fdb ;
};};if _dgeg ._dae ._ae {if _gf :=_eegf .WriteProperty (_dgeg ._ce ._aff );_gf !=nil {return _gf ;};};if _dgeg ._dae ._aeb {if _cde :=_eegf .WriteProperty (_dgeg ._ce ._dge );_cde !=nil {return _cde ;};};if _dgeg ._dae ._fcb {if _aaa :=_eegf .WriteProperty (_dgeg ._ce ._ddf );
_aaa !=nil {return _aaa ;};};if _dgeg ._dae ._ffge {if _gbdf :=_eegf .WriteProperty (_dgeg ._ce ._cg );_gbdf !=nil {return _gbdf ;};};if _dgeg ._dae ._gge {if _cfg :=_eegf .WriteProperty (_dgeg ._ce ._cda );_cfg !=nil {return _cfg ;};};return _eegf .AlignLength (4);
};

// SetHeight sets height of the morphDataControl in HIMETRIC (0.01mm)
func (_fed *morphDataControl )SetHeight (height uint32 ){_fed ._dgc ._acb =true ;_fed ._bfab ._cabc =height ;};type scrollBarPropMask struct{_dgbb bool ;_ecb bool ;_gadf bool ;_fadb bool ;_dcab bool ;_ceae bool ;_bedc bool ;_cdee bool ;_ccab bool ;_gggfg bool ;
_ggf bool ;_aagf bool ;_deaba bool ;_ecfa bool ;_edgg bool ;_acbb bool ;};func (_adcf *LabelControl )readDataBlock (_gffd *_dc .Reader )error {_adcf ._fgd =&labelDataBlock {};if _adcf ._cafbe ._ceg {if _ffaf :=_gffd .ReadProperty (&_adcf ._fgd ._bbb );
_ffaf !=nil {return _ffaf ;};};if _adcf ._cafbe ._ffca {if _dfd :=_gffd .ReadProperty (&_adcf ._fgd ._ecg );_dfd !=nil {return _dfd ;};};if _adcf ._cafbe ._aedc {if _faf :=_gffd .ReadProperty (&_adcf ._fgd ._cge );_faf !=nil {return _faf ;};};if _adcf ._cafbe ._eda {var _dfde uint32 ;
if _dgdg :=_gffd .ReadProperty (&_dfde );_dgdg !=nil {return _dgdg ;};_adcf ._fgd ._dada ,_adcf ._fgd ._fbdd =_bca (_dfde );};if _adcf ._cafbe ._fggce {if _cfebd :=_gffd .ReadProperty (&_adcf ._fgd ._cddc );_cfebd !=nil {return _cfebd ;};};if _adcf ._cafbe ._gag {if _fbbc :=_gffd .ReadProperty (&_adcf ._fgd ._dbf );
_fbbc !=nil {return _fbbc ;};};if _adcf ._cafbe ._faa {if _fcbae :=_gffd .ReadProperty (&_adcf ._fgd ._affb );_fcbae !=nil {return _fcbae ;};};if _adcf ._cafbe ._ecag {if _bcee :=_gffd .ReadProperty (&_adcf ._fgd ._dffa );_bcee !=nil {return _bcee ;};};
if _adcf ._cafbe ._gggg {if _cbbe :=_gffd .ReadProperty (&_adcf ._fgd ._cef );_cbbe !=nil {return _cbbe ;};};if _adcf ._cafbe ._aea {if _fbaa :=_gffd .ReadProperty (&_adcf ._fgd ._ebea );_fbaa !=nil {return _fbaa ;};};if _adcf ._cafbe ._bgdaa {if _cafbg :=_gffd .ReadProperty (&_adcf ._fgd ._fae );
_cafbg !=nil {return _cafbg ;};};if _adcf ._cafbe ._ddgf {if _fcfa :=_gffd .ReadProperty (&_adcf ._fgd ._fbcb );_fcfa !=nil {return _fcfa ;};};return nil ;};type morphDataControlStringValue struct{*morphDataControl };func _eddg (_cbe *_dc .Reader )(*ScrollBarControl ,error ){_dcaa :=&ScrollBarControl {};
if _aeea :=_dcaa .readPropMask (_cbe );_aeea !=nil {return nil ,_aeea ;};if _dfee :=_dcaa .readDataBlock (_cbe );_dfee !=nil {return nil ,_dfee ;};if _cfd :=_dcaa .readExtraDataBlock (_cbe );_cfd !=nil {return nil ,_cfd ;};if _efbd :=_dcaa .readStreamDataM (_cbe ,_dcaa ._babe ._acbb );
_efbd !=nil {return nil ,_efbd ;};if _gcgg :=_dcaa .readTheRest (_cbe );_gcgg !=nil {return nil ,_gcgg ;};return _dcaa ,nil ;};func (_ace *morphDataControl )setValueString (_edd string ){_ace ._dgc ._accb =true ;_ace ._aabd ._aedcf =uint32 (len (_edd ));
_ace ._bfab ._bfe =_edd ;};

// SetBackColor sets a button text color value from a system palette for a scrollBar control.
func (_afbec *ScrollBarControl )SetBackColor (backColor uint32 ){_afbec ._babe ._ecb =true ;_afbec ._bdbe ._ggae =backColor ;};const _geb =3;func (_daddc *morphDataControl )writeColumnInfo (_fbfg *_dc .Writer )error {return nil };var _eea =len (_dff );


// SetBackColor sets a button text color value from a system palette for a spinButton control.
func (_efgc *SpinButtonControl )SetBackColor (backColor uint32 ){_efgc ._gde ._bcga =true ;_efgc ._dcbbe ._eagf =backColor ;};

// TextBoxDataControl is a representation of a text box ActiveX form.
type TextBoxDataControl struct{*morphDataControlStringValue };type morphDataControlBoolValue struct{*morphDataControl };

// OptionButtonDataControl is a representation of an option button ActiveX form.
type OptionButtonDataControl struct{*morphDataControlBoolValue };func (_edbe *morphDataControl )getValueBool ()bool {return _edbe ._dgc ._accb &&_edbe ._bfab ._bfe =="\u0031";};func (_dddg *morphDataControl )writeColumnInfoPropMask (_dggb *_dc .Writer )error {return nil };


// ImageControl is a representation of an image ActiveX form.
type ImageControl struct{controlBase ;_daa *imagePropMask ;_cagb *imageDataBlock ;_eec *imageExtraDataBlock ;_bdc *streamData ;};

// SetMin sets a button min value.
func (_cdg *ScrollBarControl )SetMin (min int32 ){_cdg ._babe ._ceae =true ;_cdg ._bdbe ._egef =min };

// SetHeight sets height of the ScrollBar in HIMETRIC (0.01mm)
func (_gfc *ScrollBarControl )SetHeight (height uint32 ){_gfc ._babe ._dcab =true ;_gfc ._dafd ._gcfg =height ;};

// GetMin gets a button min value.
func (_cfdc *SpinButtonControl )GetMin ()int32 {return _cfdc ._dcbbe ._bcfd };func (_fdac *morphDataControl )writePropMask (_edcge *_dc .Writer )error {_cbf :=uint64 (0);_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._babc );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._ggge );
_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._fgef );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._ced );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._bfcg );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._ggb );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._eagd );
_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._fedb );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._acb );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._caed );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._ddgd );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._ebad );
_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._decg );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._ecef );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._deegd );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._cdad );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._eggc );
_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._gcd );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._bddg );_cbf >>=1;_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._fefc );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._egcg );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._accb );
_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._agce );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._dgeb );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._ccd );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._ggd );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._fdab );
_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._bedg );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._aedd );_cbf >>=1;_cbf =_dc .PushLeftUI64 (_cbf ,true );_cbf =_dc .PushLeftUI64 (_cbf ,_fdac ._dgc ._aca );_cbf >>=31;return _de .Write (_edcge ,_de .LittleEndian ,_cbf );
};type morphDataControl struct{controlBase ;_dgc *morphDataPropMask ;_aabd *morphDataDataBlock ;_bfab *morphDataExtraDataBlock ;_ddbb *streamData ;_adg *morphDataColumnInfo ;_afc *morphDataColumnInfoPropMask ;_eegc *morphDataColumnInfoDataBlock ;};func (_bgg *guidAndPicture )export (_dec *_dc .Writer )error {if _ ,_bceg :=_a .Copy (_dec ,_gd .NewBuffer (_bgg ._dfb ));
_bceg !=nil {return _bceg ;};if _cec :=_dec .WriteProperty (_bgg ._dfg ._dgd );_cec !=nil {return _cec ;};if _aed :=_dec .WriteProperty (_bgg ._dfg ._fbg );_aed !=nil {return _aed ;};_ ,_dcfd :=_a .Copy (_dec ,_bgg ._dfg ._eefa );if _dcfd !=nil {return _dcfd ;
};return nil ;};

// GetHeight returns height of the morphDataControl in HIMETRIC (0.01mm)
func (_bfg *morphDataControl )GetHeight ()uint32 {return _bfg ._bfab ._cabc };func (_bed *LabelControl )export (_fcga *_dc .Writer )error {if _bdb :=_bed .writePropMask (_fcga );_bdb !=nil {return _bdb ;};if _gad :=_bed .writeDataBlock (_fcga );_gad !=nil {return _gad ;
};if _egad :=_bed .writeExtraDataBlock (_fcga );_egad !=nil {return _egad ;};_bed ._egbd =uint16 (_fcga .Len ()-4);if _ffbaa :=_bed .writeStreamDataPM (_fcga );_ffbaa !=nil {return _ffbaa ;};return _bed .writeTheRest (_fcga );};type spinButtonDataBlock struct{_agad uint32 ;
_eagf uint32 ;_gccb uint32 ;_bcfd int32 ;_eagc int32 ;_gffb int32 ;_geacb int32 ;_cagbd int32 ;_gccf int32 ;_ebce uint32 ;_bffe uint32 ;_fggf uint16 ;_gdea uint8 ;};func (_baee *morphDataControl )readColumnInfo (_fgcg *_dc .Reader )error {return nil };
func _ffg (_aacg *_dc .Reader )(*CommandButtonControl ,error ){_bda :=&CommandButtonControl {};if _cbdd :=_bda .readPropMask (_aacg );_cbdd !=nil {return nil ,_cbdd ;};if _dba :=_bda .readDataBlock (_aacg );_dba !=nil {return nil ,_dba ;};if _fce :=_bda .readExtraDataBlock (_aacg );
_fce !=nil {return nil ,_fce ;};if _ab :=_bda .readStreamDataPM (_aacg ,_bda ._dae ._fcb ,_bda ._dae ._gge );_ab !=nil {return nil ,_ab ;};if _ega :=_bda .readTheRest (_aacg );_ega !=nil {return nil ,_ega ;};return _bda ,nil ;};

// GetCaption gets a caption string from a label control.
func (_bgf *LabelControl )GetCaption ()string {return _bgf ._dgf ._gggb };func (_daf *LabelControl )writeExtraDataBlock (_eabc *_dc .Writer )error {if _daf ._fgd ._fbdd > 0{if _fdfe :=_eabc .WriteStringProperty (_daf ._dgf ._gggb );_fdfe !=nil {return _fdfe ;
};};if _daf ._cafbe ._fggcc {_dcfbc :=uint64 (_daf ._dgf ._deeb )<<32|uint64 (_daf ._dgf ._cdfe );if _edgd :=_eabc .WritePropertyNoAlign (_dcfbc );_edgd !=nil {return _edgd ;};};return nil ;};func (_fgf *ScrollBarControl )readDataBlock (_agca *_dc .Reader )error {_fgf ._bdbe =&scrollBarDataBlock {};
if _fgf ._babe ._dgbb {if _ffddd :=_agca .ReadProperty (&_fgf ._bdbe ._dadeb );_ffddd !=nil {return _ffddd ;};};if _fgf ._babe ._ecb {if _ebdd :=_agca .ReadProperty (&_fgf ._bdbe ._ggae );_ebdd !=nil {return _ebdd ;};};if _fgf ._babe ._gadf {if _ffeb :=_agca .ReadProperty (&_fgf ._bdbe ._bga );
_ffeb !=nil {return _ffeb ;};};if _fgf ._babe ._fadb {if _gbfg :=_agca .ReadProperty (&_fgf ._bdbe ._gdgcc );_gbfg !=nil {return _gbfg ;};};if _fgf ._babe ._ceae {if _fgab :=_agca .ReadProperty (&_fgf ._bdbe ._egef );_fgab !=nil {return _fgab ;};};if _fgf ._babe ._bedc {if _dgaa :=_agca .ReadProperty (&_fgf ._bdbe ._cbdg );
_dgaa !=nil {return _dgaa ;};};if _fgf ._babe ._cdee {if _dcbf :=_agca .ReadProperty (&_fgf ._bdbe ._cba );_dcbf !=nil {return _dcbf ;};};if _fgf ._babe ._ccab {if _cadf :=_agca .ReadProperty (&_fgf ._bdbe ._cfb );_cadf !=nil {return _cadf ;};};if _fgf ._babe ._gggfg {if _agcff :=_agca .ReadProperty (&_fgf ._bdbe ._eddb );
_agcff !=nil {return _agcff ;};};if _fgf ._babe ._ggf {if _fee :=_agca .ReadProperty (&_fgf ._bdbe ._eadg );_fee !=nil {return _fee ;};};if _fgf ._babe ._aagf {if _fcfc :=_agca .ReadProperty (&_fgf ._bdbe ._dgbc );_fcfc !=nil {return _fcfc ;};};if _fgf ._babe ._deaba {if _dbeg :=_agca .ReadProperty (&_fgf ._bdbe ._dafdg );
_dbeg !=nil {return _dbeg ;};};if _fgf ._babe ._ecfa {if _ceca :=_agca .ReadProperty (&_fgf ._bdbe ._cac );_ceca !=nil {return _ceca ;};};if _fgf ._babe ._edgg {if _efgf :=_agca .ReadProperty (&_fgf ._bdbe ._bced );_efgf !=nil {return _efgf ;};};if _fgf ._babe ._acbb {if _fffb :=_agca .ReadProperty (&_fgf ._bdbe ._cgcb );
_fffb !=nil {return _fffb ;};};return nil ;};func (_gacb *morphDataControl )writeDataBlock (_defc *_dc .Writer )error {if _gacb ._dgc ._babc {if _gbf :=_defc .WriteProperty (_gacb ._aabd ._ffdf );_gbf !=nil {return _gbf ;};};if _gacb ._dgc ._ggge {if _ffbg :=_defc .WriteProperty (_gacb ._aabd ._fdcd );
_ffbg !=nil {return _ffbg ;};};if _gacb ._dgc ._fgef {if _ecc :=_defc .WriteProperty (_gacb ._aabd ._dgdc );_ecc !=nil {return _ecc ;};};if _gacb ._dgc ._ced {if _facb :=_defc .WriteProperty (_gacb ._aabd ._gafg );_facb !=nil {return _facb ;};};if _gacb ._dgc ._bfcg {if _ggdd :=_defc .WriteProperty (_gacb ._aabd ._ccc );
_ggdd !=nil {return _ggdd ;};};if _gacb ._dgc ._ggb {if _cadbb :=_defc .WriteProperty (_gacb ._aabd ._dabd );_cadbb !=nil {return _cadbb ;};};if _gacb ._dgc ._eagd {if _gdd :=_defc .WriteProperty (_gacb ._aabd ._cbfe );_gdd !=nil {return _gdd ;};};if _gacb ._dgc ._fedb {if _bfcge :=_defc .WriteProperty (_gacb ._aabd ._bad );
_bfcge !=nil {return _bfcge ;};};if _gacb ._dgc ._caed {if _aeag :=_defc .WriteProperty (_gacb ._aabd ._ccbf );_aeag !=nil {return _aeag ;};};if _gacb ._dgc ._ddgd {if _gcab :=_defc .WriteProperty (_gacb ._aabd ._bac );_gcab !=nil {return _gcab ;};};if _gacb ._dgc ._ebad {if _dbc :=_defc .WriteProperty (_gacb ._aabd ._bgb );
_dbc !=nil {return _dbc ;};};if _gacb ._dgc ._decg {if _dccgg :=_defc .WriteProperty (_gacb ._aabd ._feb );_dccgg !=nil {return _dccgg ;};};if _gacb ._dgc ._ecef {if _gcg :=_defc .WriteProperty (_gacb ._aabd ._bbc );_gcg !=nil {return _gcg ;};};if _gacb ._dgc ._deegd {if _gddb :=_defc .WriteProperty (_gacb ._aabd ._aee );
_gddb !=nil {return _gddb ;};};if _gacb ._dgc ._cdad {if _gcea :=_defc .WriteProperty (_gacb ._aabd ._geffg );_gcea !=nil {return _gcea ;};};if _gacb ._dgc ._eggc {if _ffbf :=_defc .WriteProperty (_gacb ._aabd ._eebe );_ffbf !=nil {return _ffbf ;};};if _gacb ._dgc ._gcd {if _deegb :=_defc .WriteProperty (_gacb ._aabd ._fcgb );
_deegb !=nil {return _deegb ;};};if _gacb ._dgc ._bddg {if _bgfb :=_defc .WriteProperty (_gacb ._aabd ._bafed );_bgfb !=nil {return _bgfb ;};};if _gacb ._dgc ._fefc {if _addc :=_defc .WriteProperty (_gacb ._aabd ._edad );_addc !=nil {return _addc ;};};
if _gacb ._dgc ._egcg {if _adcb :=_defc .WriteProperty (_gacb ._aabd ._dgfd );_adcb !=nil {return _adcb ;};};if _gacb ._dgc ._accb {_ddaa :=_bf (_gacb ._aabd ._aedcf ,_gacb ._aabd ._dcbb );if _gceag :=_defc .WriteProperty (_ddaa );_gceag !=nil {return _gceag ;
};};if _gacb ._dgc ._agce {_cedc :=_bf (_gacb ._aabd ._gege ,_gacb ._aabd ._egcc );if _ebae :=_defc .WriteProperty (_cedc );_ebae !=nil {return _ebae ;};};if _gacb ._dgc ._dgeb {if _gggge :=_defc .WriteProperty (_gacb ._aabd ._edde );_gggge !=nil {return _gggge ;
};};if _gacb ._dgc ._ccd {if _cfgg :=_defc .WriteProperty (_gacb ._aabd ._dgdga );_cfgg !=nil {return _cfgg ;};};if _gacb ._dgc ._ggd {if _ddcb :=_defc .WriteProperty (_gacb ._aabd ._fbcc );_ddcb !=nil {return _ddcb ;};};if _gacb ._dgc ._fdab {if _agcf :=_defc .WriteProperty (_gacb ._aabd ._facg );
_agcf !=nil {return _agcf ;};};if _gacb ._dgc ._bedg {if _abe :=_defc .WriteProperty (_gacb ._aabd ._gggd );_abe !=nil {return _abe ;};};if _gacb ._dgc ._aedd {if _gefe :=_defc .WriteProperty (_gacb ._aabd ._deab );_gefe !=nil {return _gefe ;};};if _gacb ._dgc ._aca {_fggg :=_bf (_gacb ._aabd ._gga ,_gacb ._aabd ._ccgf );
if _fagc :=_defc .WriteProperty (_fggg );_fagc !=nil {return _fagc ;};};return _defc .AlignLength (4);};func (_cadbe *SpinButtonControl )writePropMask (_cbaf *_dc .Writer )error {_caga :=uint32 (0);_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._agcac );
_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._bcga );_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._fgcgd );_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._feba );_caga >>=1;_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._ecbf );_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._eddc );
_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._adfe );_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._gdcd );_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._aeaa );_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._aagd );_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._agaa );
_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._gfe );_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._cgcd );_caga =_dc .PushLeftUI32 (_caga ,_cadbe ._gde ._ecac );_caga >>=17;return _de .Write (_cbaf ,_de .LittleEndian ,_caga );};func (_dcfb *controlBase )writeTheRest (_cbbg *_dc .Writer )error {_ ,_bfb :=_cbbg .Write (_dcfb ._ecf );
return _bfb ;};func (_efbf *CommandButtonControl )readPropMask (_ag *_dc .Reader )error {var _ea uint32 ;if _baf :=_de .Read (_ag ,_de .LittleEndian ,&_ea );_baf !=nil {return _baf ;};_efbf ._dae =&commandButtonPropMask {};_efbf ._dae ._egb ,_ea =_dc .PopRightUI32 (_ea );
_efbf ._dae ._ac ,_ea =_dc .PopRightUI32 (_ea );_efbf ._dae ._ffb ,_ea =_dc .PopRightUI32 (_ea );_efbf ._dae ._edg ,_ea =_dc .PopRightUI32 (_ea );_efbf ._dae ._ae ,_ea =_dc .PopRightUI32 (_ea );_efbf ._dae ._geac ,_ea =_dc .PopRightUI32 (_ea );_efbf ._dae ._aeb ,_ea =_dc .PopRightUI32 (_ea );
_efbf ._dae ._fcb ,_ea =_dc .PopRightUI32 (_ea );_efbf ._dae ._ffge ,_ea =_dc .PopRightUI32 (_ea );_efbf ._dae ._fcg ,_ea =_dc .PopRightUI32 (_ea );_efbf ._dae ._gge ,_ea =_dc .PopRightUI32 (_ea );return nil ;};type morphDataColumnInfoDataBlock struct{};
func (_cceg *guidAndPicture )setStdPictureBytes (_gff []byte ){if _gff ==nil {return ;};if _cceg ._dfb ==nil {_cceg ._dfb =_dff ;};if _cceg ._dfg ==nil {_cceg ._dfg =&stdPicture {_dgd :_beg };};_cceg ._dfg ._fbg =uint32 (len (_gff ));_cceg ._dfg ._eefa =_gd .NewBuffer (_gff );
};func (_cfcc *morphDataControl )export (_edfeb *_dc .Writer )error {if _ccbg :=_cfcc .writePropMask (_edfeb );_ccbg !=nil {return _ccbg ;};if _adfd :=_cfcc .writeDataBlock (_edfeb );_adfd !=nil {return _adfd ;};if _agcd :=_cfcc .writeExtraDataBlock (_edfeb );
_agcd !=nil {return _agcd ;};_cfcc ._egbd =uint16 (_edfeb .Len ()-4);if _fagf :=_cfcc .writeStreamDataMP (_edfeb );_fagf !=nil {return _fagf ;};return _cfcc .writeTheRest (_edfeb );};

// SetWidth sets width of the ScrollBar in HIMETRIC (0.01mm)
func (_daff *ScrollBarControl )SetWidth (width uint32 ){_daff ._babe ._dcab =true ;_daff ._dafd ._fedf =width ;};func (_gfdf *ScrollBarControl )writeDataBlock (_efbe *_dc .Writer )error {if _gfdf ._babe ._dgbb {if _bde :=_efbe .WriteProperty (_gfdf ._bdbe ._dadeb );
_bde !=nil {return _bde ;};};if _gfdf ._babe ._ecb {if _eedd :=_efbe .WriteProperty (_gfdf ._bdbe ._ggae );_eedd !=nil {return _eedd ;};};if _gfdf ._babe ._gadf {if _gfce :=_efbe .WriteProperty (_gfdf ._bdbe ._bga );_gfce !=nil {return _gfce ;};};if _gfdf ._babe ._fadb {if _gacg :=_efbe .WriteProperty (_gfdf ._bdbe ._gdgcc );
_gacg !=nil {return _gacg ;};};if _gfdf ._babe ._ceae {if _caada :=_efbe .WriteProperty (_gfdf ._bdbe ._egef );_caada !=nil {return _caada ;};};if _gfdf ._babe ._bedc {if _aad :=_efbe .WriteProperty (_gfdf ._bdbe ._cbdg );_aad !=nil {return _aad ;};};if _gfdf ._babe ._cdee {if _ddcd :=_efbe .WriteProperty (_gfdf ._bdbe ._cba );
_ddcd !=nil {return _ddcd ;};};if _gfdf ._babe ._ccab {if _bcbd :=_efbe .WriteProperty (_gfdf ._bdbe ._cfb );_bcbd !=nil {return _bcbd ;};};if _gfdf ._babe ._gggfg {if _edcd :=_efbe .WriteProperty (_gfdf ._bdbe ._eddb );_edcd !=nil {return _edcd ;};};if _gfdf ._babe ._ggf {if _ggcc :=_efbe .WriteProperty (_gfdf ._bdbe ._eadg );
_ggcc !=nil {return _ggcc ;};};if _gfdf ._babe ._aagf {if _ecgb :=_efbe .WriteProperty (_gfdf ._bdbe ._dgbc );_ecgb !=nil {return _ecgb ;};};if _gfdf ._babe ._deaba {if _bdage :=_efbe .WriteProperty (_gfdf ._bdbe ._dafdg );_bdage !=nil {return _bdage ;
};};if _gfdf ._babe ._ecfa {if _aabcf :=_efbe .WriteProperty (_gfdf ._bdbe ._cac );_aabcf !=nil {return _aabcf ;};};if _gfdf ._babe ._edgg {if _bbcg :=_efbe .WriteProperty (_gfdf ._bdbe ._bced );_bbcg !=nil {return _bbcg ;};};if _gfdf ._babe ._acbb {if _fegge :=_efbe .WriteProperty (_gfdf ._bdbe ._cgcb );
_fegge !=nil {return _fegge ;};};return _efbe .AlignLength (4);};func (_fggc *controlBase )setMouseIconBytes (_egca []byte ){if _fggc ._agb ._eade ==nil {_fggc ._agb ._eade =&guidAndPicture {};};_fggc ._agb ._eade .setStdPictureBytes (_egca );};

// SetBackColor sets a button text color value from a system palette for a commandButton control.
func (_dab *CommandButtonControl )SetBackColor (backColor uint32 ){_dab ._dae ._ac =true ;_dab ._ce ._fba =backColor ;};func (_fbce *ScrollBarControl )writeExtraDataBlock (_fgbf *_dc .Writer )error {if _fbce ._babe ._dcab {_ffaaa :=uint64 (_fbce ._dafd ._fedf )<<32|uint64 (_fbce ._dafd ._gcfg );
if _aecd :=_fgbf .WritePropertyNoAlign (_ffaaa );_aecd !=nil {return _aecd ;};};return nil ;};type morphDataColumnInfo struct{};

// GetWidth returns width of the ScrollBar in HIMETRIC (0.01mm)
func (_decgc *ScrollBarControl )GetWidth ()uint32 {return _decgc ._dafd ._fedf };

// SetWidth sets width of the morphDataControl in HIMETRIC (0.01mm)
func (_fad *morphDataControl )SetWidth (width uint32 ){_fad ._dgc ._acb =true ;_fad ._bfab ._ege =width };type streamData struct{_eade *guidAndPicture ;_ccdd *guidAndPicture ;};type morphDataExtraDataBlock struct{_ege uint32 ;_cabc uint32 ;_bfe string ;
_bcb string ;_dfed string ;};type spinButtonExtraDataBlock struct{_aaga uint32 ;_gcda uint32 ;};

// GetWidth returns width of the morphDataControl in HIMETRIC (0.01mm)
func (_caa *morphDataControl )GetWidth ()uint32 {return _caa ._bfab ._ege };

// ComboBoxDataControl is a representation of a combo box ActiveX form.
type ComboBoxDataControl struct{*morphDataControlStringValue };func (_ece *ImageControl )readPropMask (_fff *_dc .Reader )error {var _fbfe uint32 ;if _fbb :=_de .Read (_fff ,_de .LittleEndian ,&_fbfe );_fbb !=nil {return _fbb ;};_ece ._daa =&imagePropMask {};
_fbfe >>=2;_ece ._daa ._bfba ,_fbfe =_dc .PopRightUI32 (_fbfe );_ece ._daa ._bcc ,_fbfe =_dc .PopRightUI32 (_fbfe );_ece ._daa ._gae ,_fbfe =_dc .PopRightUI32 (_fbfe );_ece ._daa ._bafa ,_fbfe =_dc .PopRightUI32 (_fbfe );_ece ._daa ._fbf ,_fbfe =_dc .PopRightUI32 (_fbfe );
_ece ._daa ._cbg ,_fbfe =_dc .PopRightUI32 (_fbfe );_ece ._daa ._afff ,_fbfe =_dc .PopRightUI32 (_fbfe );_ece ._daa ._cfgc ,_fbfe =_dc .PopRightUI32 (_fbfe );_ece ._daa ._acd ,_fbfe =_dc .PopRightUI32 (_fbfe );_ece ._daa ._agga ,_fbfe =_dc .PopRightUI32 (_fbfe );
_ece ._daa ._eba ,_fbfe =_dc .PopRightUI32 (_fbfe );_ece ._daa ._afa ,_fbfe =_dc .PopRightUI32 (_fbfe );_ece ._daa ._egd ,_fbfe =_dc .PopRightUI32 (_fbfe );return nil ;};

// ScrollBarControl is a representation of a scrollBar ActiveX form.
type ScrollBarControl struct{controlBase ;_babe *scrollBarPropMask ;_bdbe *scrollBarDataBlock ;_dafd *scrollBarExtraDataBlock ;_baaa *streamData ;};func (_egc *CommandButtonControl )readDataBlock (_fag *_dc .Reader )error {_egc ._ce =&commandButtonDataBlock {};
if _egc ._dae ._egb {if _ead :=_fag .ReadProperty (&_egc ._ce ._gef );_ead !=nil {return _ead ;};};if _egc ._dae ._ac {if _cfa :=_fag .ReadProperty (&_egc ._ce ._fba );_cfa !=nil {return _cfa ;};};if _egc ._dae ._ffb {if _bgd :=_fag .ReadProperty (&_egc ._ce ._gdg );
_bgd !=nil {return _bgd ;};};if _egc ._dae ._edg {var _dce uint32 ;if _fgg :=_fag .ReadProperty (&_dce );_fgg !=nil {return _fgg ;};_egc ._ce ._eef ,_egc ._ce ._efgg =_bca (_dce );};if _egc ._dae ._ae {if _eeg :=_fag .ReadProperty (&_egc ._ce ._aff );_eeg !=nil {return _eeg ;
};};if _egc ._dae ._aeb {if _baa :=_fag .ReadProperty (&_egc ._ce ._dge );_baa !=nil {return _baa ;};};if _egc ._dae ._fcb {if _dca :=_fag .ReadProperty (&_egc ._ce ._ddf );_dca !=nil {return _dca ;};};if _egc ._dae ._ffge {if _dad :=_fag .ReadProperty (&_egc ._ce ._cg );
_dad !=nil {return _dad ;};};if _egc ._dae ._gge {if _feg :=_fag .ReadProperty (&_egc ._ce ._cda );_feg !=nil {return _feg ;};};return nil ;};type imageDataBlock struct{_geff uint32 ;_fde uint32 ;_gcc byte ;_ede uint8 ;_fga byte ;_dccg byte ;_acc uint16 ;
_dbaeb byte ;_ggc uint32 ;_ffff uint16 ;};func (_dbaee *ScrollBarControl )readExtraDataBlock (_bff *_dc .Reader )error {_dbaee ._dafd =&scrollBarExtraDataBlock {};if _dbaee ._babe ._dcab {var _dgef uint64 ;if _aec :=_bff .ReadPairProperty (&_dgef );_aec !=nil {return _aec ;
};_dbaee ._dafd ._gcfg =uint32 (_dgef );_dbaee ._dafd ._fedf =uint32 (_dgef >>32);};return nil ;};

// GetValue gets a value from a control which value can be represented as a string.
func (_edcg *morphDataControlStringValue )GetValue ()string {return _edcg .getValueString ()};

// GetBackColor gets a button text color value for a system palette from a scrollBar control.
func (_gab *ScrollBarControl )GetBackColor ()uint32 {return _gab ._bdbe ._ggae };func (_bdgg *morphDataControl )readDataBlock (_cece *_dc .Reader )error {_bdgg ._aabd =&morphDataDataBlock {};if _bdgg ._dgc ._babc {if _bgdb :=_cece .ReadProperty (&_bdgg ._aabd ._ffdf );
_bgdb !=nil {return _bgdb ;};};if _bdgg ._dgc ._ggge {if _defb :=_cece .ReadProperty (&_bdgg ._aabd ._fdcd );_defb !=nil {return _defb ;};};if _bdgg ._dgc ._fgef {if _aefa :=_cece .ReadProperty (&_bdgg ._aabd ._dgdc );_aefa !=nil {return _aefa ;};};if _bdgg ._dgc ._ced {if _ddgg :=_cece .ReadProperty (&_bdgg ._aabd ._gafg );
_ddgg !=nil {return _ddgg ;};};if _bdgg ._dgc ._bfcg {if _ffdfd :=_cece .ReadProperty (&_bdgg ._aabd ._ccc );_ffdfd !=nil {return _ffdfd ;};};if _bdgg ._dgc ._ggb {if _fec :=_cece .ReadProperty (&_bdgg ._aabd ._dabd );_fec !=nil {return _fec ;};};if _bdgg ._dgc ._eagd {if _bafedd :=_cece .ReadProperty (&_bdgg ._aabd ._cbfe );
_bafedd !=nil {return _bafedd ;};};if _bdgg ._dgc ._fedb {if _cdda :=_cece .ReadProperty (&_bdgg ._aabd ._bad );_cdda !=nil {return _cdda ;};};if _bdgg ._dgc ._caed {if _ade :=_cece .ReadProperty (&_bdgg ._aabd ._ccbf );_ade !=nil {return _ade ;};};if _bdgg ._dgc ._ddgd {if _fbbce :=_cece .ReadProperty (&_bdgg ._aabd ._bac );
_fbbce !=nil {return _fbbce ;};};if _bdgg ._dgc ._ebad {if _cbgd :=_cece .ReadProperty (&_bdgg ._aabd ._bgb );_cbgd !=nil {return _cbgd ;};};if _bdgg ._dgc ._decg {if _dfab :=_cece .ReadProperty (&_bdgg ._aabd ._feb );_dfab !=nil {return _dfab ;};};if _bdgg ._dgc ._ecef {if _dgcc :=_cece .ReadProperty (&_bdgg ._aabd ._bbc );
_dgcc !=nil {return _dgcc ;};};if _bdgg ._dgc ._deegd {if _fbac :=_cece .ReadProperty (&_bdgg ._aabd ._aee );_fbac !=nil {return _fbac ;};};if _bdgg ._dgc ._cdad {if _aefg :=_cece .ReadProperty (&_bdgg ._aabd ._geffg );_aefg !=nil {return _aefg ;};};if _bdgg ._dgc ._eggc {if _egccc :=_cece .ReadProperty (&_bdgg ._aabd ._eebe );
_egccc !=nil {return _egccc ;};};if _bdgg ._dgc ._gcd {if _dafc :=_cece .ReadProperty (&_bdgg ._aabd ._fcgb );_dafc !=nil {return _dafc ;};};if _bdgg ._dgc ._bddg {if _bdag :=_cece .ReadProperty (&_bdgg ._aabd ._bafed );_bdag !=nil {return _bdag ;};};if _bdgg ._dgc ._fefc {if _cdb :=_cece .ReadProperty (&_bdgg ._aabd ._edad );
_cdb !=nil {return _cdb ;};};if _bdgg ._dgc ._egcg {if _cadb :=_cece .ReadProperty (&_bdgg ._aabd ._dgfd );_cadb !=nil {return _cadb ;};};if _bdgg ._dgc ._accb {var _dbb uint32 ;if _ggcd :=_cece .ReadProperty (&_dbb );_ggcd !=nil {return _ggcd ;};_bdgg ._aabd ._dcbb ,_bdgg ._aabd ._aedcf =_bca (_dbb );
};if _bdgg ._dgc ._agce {var _cgdb uint32 ;if _afe :=_cece .ReadProperty (&_cgdb );_afe !=nil {return _afe ;};_bdgg ._aabd ._egcc ,_bdgg ._aabd ._gege =_bca (_cgdb );};if _bdgg ._dgc ._dgeb {if _babcg :=_cece .ReadProperty (&_bdgg ._aabd ._edde );_babcg !=nil {return _babcg ;
};};if _bdgg ._dgc ._ccd {if _cdec :=_cece .ReadProperty (&_bdgg ._aabd ._dgdga );_cdec !=nil {return _cdec ;};};if _bdgg ._dgc ._ggd {if _aded :=_cece .ReadProperty (&_bdgg ._aabd ._fbcc );_aded !=nil {return _aded ;};};if _bdgg ._dgc ._fdab {if _gaee :=_cece .ReadProperty (&_bdgg ._aabd ._facg );
_gaee !=nil {return _gaee ;};};if _bdgg ._dgc ._bedg {if _cdecb :=_cece .ReadProperty (&_bdgg ._aabd ._gggd );_cdecb !=nil {return _cdecb ;};};if _bdgg ._dgc ._aedd {if _dfca :=_cece .ReadProperty (&_bdgg ._aabd ._deab );_dfca !=nil {return _dfca ;};};
if _bdgg ._dgc ._aca {var _dfe uint32 ;if _dade :=_cece .ReadProperty (&_dfe );_dade !=nil {return _dade ;};_bdgg ._aabd ._ccgf ,_bdgg ._aabd ._gga =_bca (_dfe );};return nil ;};func (_ggce *ScrollBarControl )writePropMask (_aabc *_dc .Writer )error {_edeb :=uint32 (0);
_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._dgbb );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._ecb );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._gadf );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._dcab );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._fadb );
_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._ceae );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._bedc );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._cdee );_edeb >>=1;_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._ccab );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._gggfg );
_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._ggf );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._aagf );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._deaba );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._ecfa );_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._edgg );
_edeb =_dc .PushLeftUI32 (_edeb ,_ggce ._babe ._acbb );_edeb >>=15;return _de .Write (_aabc ,_de .LittleEndian ,_edeb );};func (_cgg *controlBase )setPictureBytes (_gfa []byte ){if _cgg ._agb ._ccdd ==nil {_cgg ._agb ._ccdd =&guidAndPicture {};};_cgg ._agb ._ccdd .setStdPictureBytes (_gfa );
};func _cadbg (_gffa *_dc .Reader )(*SpinButtonControl ,error ){_dbad :=&SpinButtonControl {};if _affa :=_dbad .readPropMask (_gffa );_affa !=nil {return nil ,_affa ;};if _dcac :=_dbad .readDataBlock (_gffa );_dcac !=nil {return nil ,_dcac ;};if _acg :=_dbad .readExtraDataBlock (_gffa );
_acg !=nil {return nil ,_acg ;};if _acge :=_dbad .readStreamDataM (_gffa ,_dbad ._gde ._cgcd );_acge !=nil {return nil ,_acge ;};if _defbb :=_dbad .readTheRest (_gffa );_defbb !=nil {return nil ,_defbb ;};return _dbad ,nil ;};

// SpinButtonControl is a representation of a spinButton ActiveX form.
type SpinButtonControl struct{controlBase ;_gde *spinButtonPropMask ;_dcbbe *spinButtonDataBlock ;_aaef *spinButtonExtraDataBlock ;_cadd *streamData ;};

// ToggleButtonDataControl is a representation of a toggle button ActiveX form.
type ToggleButtonDataControl struct{*morphDataControlBoolValue };type labelPropMask struct{_ceg bool ;_ffca bool ;_aedc bool ;_eda bool ;_fggce bool ;_fggcc bool ;_gag bool ;_faa bool ;_ecag bool ;_gggg bool ;_aea bool ;_bgdaa bool ;_ddgf bool ;};func (_gade *morphDataControl )readColumnInfoPropMask (_ggcf *_dc .Reader )error {return nil };


// SetCaption sets a caption string for a morph control.
func (_dgg *morphDataControl )SetCaption (caption string ){if _dgg ._bdf {_dgg ._dgc ._agce =true ;_dgg ._aabd ._gege =uint32 (len (caption ));_dgg ._bfab ._bcb =caption ;};};func (_fbcf *SpinButtonControl )readDataBlock (_gfdfb *_dc .Reader )error {_fbcf ._dcbbe =&spinButtonDataBlock {};
if _fbcf ._gde ._agcac {if _eecc :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._agad );_eecc !=nil {return _eecc ;};};if _fbcf ._gde ._bcga {if _feggd :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._eagf );_feggd !=nil {return _feggd ;};};if _fbcf ._gde ._fgcgd {if _fdg :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._gccb );
_fdg !=nil {return _fdg ;};};if _fbcf ._gde ._ecbf {if _gdgf :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._bcfd );_gdgf !=nil {return _gdgf ;};};if _fbcf ._gde ._eddc {if _dgag :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._eagc );_dgag !=nil {return _dgag ;};};if _fbcf ._gde ._adfe {if _dccb :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._gffb );
_dccb !=nil {return _dccb ;};};if _fbcf ._gde ._gdcd {if _gdbd :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._geacb );_gdbd !=nil {return _gdbd ;};};if _fbcf ._gde ._aeaa {if _dega :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._cagbd );_dega !=nil {return _dega ;};
};if _fbcf ._gde ._aagd {if _cfadf :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._gccf );_cfadf !=nil {return _cfadf ;};};if _fbcf ._gde ._agaa {if _daea :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._ebce );_daea !=nil {return _daea ;};};if _fbcf ._gde ._gfe {if _gfg :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._bffe );
_gfg !=nil {return _gfg ;};};if _fbcf ._gde ._cgcd {if _ebdg :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._fggf );_ebdg !=nil {return _ebdg ;};};if _fbcf ._gde ._ecac {if _gdeb :=_gfdfb .ReadProperty (&_fbcf ._dcbbe ._gdea );_gdeb !=nil {return _gdeb ;};};return nil ;
};func (_ffdd *guidAndPicture )importFromReader (_gba *_dc .Reader )error {_ebda :=_gd .NewBuffer ([]byte {});if _ ,_bfc :=_a .CopyN (_ebda ,_gba ,int64 (_eea ));_bfc !=nil {return _bfc ;};_fda :=_ebda .Bytes ();for _cgc :=0;_cgc < _eea ;_cgc ++{if _fda [_cgc ]!=_dff [_cgc ]{return _f .Errorf ("\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0055\u0049\u0044\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0025v\u0020\u0061\u0074\u0020\u0069\u006e\u0064e\u0078\u0020\u0025\u0076",_fda [_cgc ],_cgc );
};};_ffdd ._dfb =_fda ;_ffdd ._dfg =&stdPicture {};if _fbga :=_gba .ReadProperty (&_ffdd ._dfg ._dgd );_fbga !=nil {return _fbga ;};if _ffdd ._dfg ._dgd !=_beg {return _f .Errorf ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0070\u0072\u0065\u0061\u006d\u0062\u006c\u0065\u0020\u0025\u0076",_ffdd ._dfg ._dgd );
};if _afb :=_gba .ReadProperty (&_ffdd ._dfg ._fbg );_afb !=nil {return _afb ;};if _ffdd ._dfg ._fbg !=0{_eaa :=_gd .NewBuffer ([]byte {});if _ ,_fcee :=_a .Copy (_eaa ,_gba );_fcee !=nil {return _fcee ;};_ffdd ._dfg ._eefa =_eaa ;};return nil ;};type morphDataPropMask struct{_babc bool ;
_ggge bool ;_fgef bool ;_ced bool ;_bfcg bool ;_ggb bool ;_eagd bool ;_fedb bool ;_acb bool ;_caed bool ;_ddgd bool ;_ebad bool ;_decg bool ;_ecef bool ;_deegd bool ;_cdad bool ;_eggc bool ;_gcd bool ;_bddg bool ;_fefc bool ;_egcg bool ;_accb bool ;_agce bool ;
_dgeb bool ;_ccd bool ;_ggd bool ;_fdab bool ;_bedg bool ;_aedd bool ;_aca bool ;};func (_fdc *ImageControl )writeDataBlock (_ccea *_dc .Writer )error {if _fdc ._daa ._bcc {if _ffcg :=_ccea .WriteProperty (_fdc ._cagb ._geff );_ffcg !=nil {return _ffcg ;
};};if _fdc ._daa ._gae {if _eadf :=_ccea .WriteProperty (_fdc ._cagb ._fde );_eadf !=nil {return _eadf ;};};if _fdc ._daa ._bafa {if _add :=_ccea .WriteProperty (_fdc ._cagb ._gcc );_add !=nil {return _add ;};};if _fdc ._daa ._fbf {if _fdfc :=_ccea .WriteProperty (_fdc ._cagb ._ede );
_fdfc !=nil {return _fdfc ;};};if _fdc ._daa ._cbg {if _fcf :=_ccea .WriteProperty (_fdc ._cagb ._fga );_fcf !=nil {return _fcf ;};};if _fdc ._daa ._afff {if _deee :=_ccea .WriteProperty (_fdc ._cagb ._dccg );_deee !=nil {return _deee ;};};if _fdc ._daa ._acd {if _bgdg :=_ccea .WriteProperty (_fdc ._cagb ._acc );
_bgdg !=nil {return _bgdg ;};};if _fdc ._daa ._agga {if _eed :=_ccea .WriteProperty (_fdc ._cagb ._dbaeb );_eed !=nil {return _eed ;};};if _fdc ._daa ._afa {if _cdf :=_ccea .WriteProperty (_fdc ._cagb ._ggc );_cdf !=nil {return _cdf ;};};if _fdc ._daa ._egd {if _baad :=_ccea .WriteProperty (_fdc ._cagb ._ffff );
_baad !=nil {return _baad ;};};return _ccea .AlignLength (4);};

// SetCaption sets a caption string for a commandButton control.
func (_cdd *CommandButtonControl )SetCaption (caption string ){_cdd ._dae ._edg =true ;_cdd ._ce ._efgg =uint32 (len (caption ));_cdd ._efb ._bgda =caption ;};

// SetWidth sets width of the Label in HIMETRIC (0.01mm)
func (_feaf *LabelControl )SetWidth (width uint32 ){_feaf ._cafbe ._fggcc =true ;_feaf ._dgf ._deeb =width ;};type imagePropMask struct{_bfba bool ;_bcc bool ;_gae bool ;_bafa bool ;_fbf bool ;_cbg bool ;_afff bool ;_cfgc bool ;_acd bool ;_agga bool ;_eba bool ;
_afa bool ;_egd bool ;};func _bf (_dac uint32 ,_adf bool )uint32 {if _dac ==0{return 0;};if _adf {_dac |=1<<31;};return _dac ;};func (_ecfe *ImageControl )export (_ffe *_dc .Writer )error {if _abab :=_ecfe .writePropMask (_ffe );_abab !=nil {return _abab ;
};if _deb :=_ecfe .writeDataBlock (_ffe );_deb !=nil {return _deb ;};if _efc :=_ecfe .writeExtraDataBlock (_ffe );_efc !=nil {return _efc ;};_ecfe ._egbd =uint16 (_ffe .Len ()-4);if _gdc :=_ecfe .writeStreamDataPM (_ffe );_gdc !=nil {return _gdc ;};return _ecfe .writeTheRest (_ffe );
};func _bae (_bafe *_dc .Reader )(*ImageControl ,error ){_ffba :=&ImageControl {};if _fccg :=_ffba .readPropMask (_bafe );_fccg !=nil {return nil ,_fccg ;};if _cgd :=_ffba .readDataBlock (_bafe );_cgd !=nil {return nil ,_cgd ;};if _fgeb :=_ffba .readExtraDataBlock (_bafe );
_fgeb !=nil {return nil ,_fgeb ;};if _cff :=_ffba .readStreamDataPM (_bafe ,_ffba ._daa ._acd ,_ffba ._daa ._egd );_cff !=nil {return nil ,_cff ;};if _dee :=_ffba .readTheRest (_bafe );_dee !=nil {return nil ,_dee ;};return _ffba ,nil ;};type morphDataDataBlock struct{_ffdf uint32 ;
_fdcd uint32 ;_dgdc uint32 ;_gafg uint32 ;_ccc byte ;_dabd byte ;_cbfe byte ;_bad byte ;_ccbf rune ;_bac uint32 ;_bgb uint16 ;_feb int16 ;_bbc int16 ;_aee uint16 ;_geffg uint16 ;_eebe uint8 ;_fcgb uint8 ;_bafed uint8 ;_edad uint8 ;_dgfd uint8 ;_aedcf uint32 ;
_dcbb bool ;_gege uint32 ;_egcc bool ;_edde uint32 ;_dgdga uint32 ;_fbcc uint32 ;_facg uint16 ;_gggd uint16 ;_deab rune ;_gga uint32 ;_ccgf bool ;};

// GetForeColor gets a button text color value for a system palette from a scrollBar control.
func (_bfd *ScrollBarControl )GetForeColor ()uint32 {return _bfd ._bdbe ._dadeb };const (FmPictureAlignmentTopLeft FmPictureAlignment =iota ;FmPictureAlignmentTopRight ;FmPictureAlignmentCenter ;FmPictureAlignmentBottomLeft ;FmPictureAlignmentBottomRight ;
);

// FmPictureAlignment represents one of the five picture aignments according to MS-OFORMS document.
type FmPictureAlignment byte ;

// GetForeColor gets a button text color value for a system palette from a label control.
func (_agab *LabelControl )GetForeColor ()uint32 {return _agab ._fgd ._bbb };

// SetPosition sets a button position value.
func (_gdf *SpinButtonControl )SetPosition (position int32 ){_gdf ._gde ._adfe =true ;_gdf ._dcbbe ._gffb =position ;};func (_bfgd *morphDataControl )readColumnInfoDataBlock (_edab *_dc .Reader )error {return nil };

// SetWidth sets width of the CommandButton in HIMETRIC (0.01mm)
func (_fg *CommandButtonControl )SetWidth (width uint32 ){_fg ._dae ._geac =true ;_fg ._efb ._ebf =width };

// SetForeColor sets a button text color value from a system palette for a commandButton control.
func (_aac *CommandButtonControl )SetForeColor (foreColor uint32 ){_aac ._dae ._egb =true ;_aac ._ce ._gef =foreColor ;};func (_ffaa *LabelControl )readPropMask (_cege *_dc .Reader )error {var _ebe uint32 ;if _eag :=_de .Read (_cege ,_de .LittleEndian ,&_ebe );
_eag !=nil {return _eag ;};_ffaa ._cafbe =&labelPropMask {};_ffaa ._cafbe ._ceg ,_ebe =_dc .PopRightUI32 (_ebe );_ffaa ._cafbe ._ffca ,_ebe =_dc .PopRightUI32 (_ebe );_ffaa ._cafbe ._aedc ,_ebe =_dc .PopRightUI32 (_ebe );_ffaa ._cafbe ._eda ,_ebe =_dc .PopRightUI32 (_ebe );
_ffaa ._cafbe ._fggce ,_ebe =_dc .PopRightUI32 (_ebe );_ffaa ._cafbe ._fggcc ,_ebe =_dc .PopRightUI32 (_ebe );_ffaa ._cafbe ._gag ,_ebe =_dc .PopRightUI32 (_ebe );_ffaa ._cafbe ._faa ,_ebe =_dc .PopRightUI32 (_ebe );_ffaa ._cafbe ._ecag ,_ebe =_dc .PopRightUI32 (_ebe );
_ffaa ._cafbe ._gggg ,_ebe =_dc .PopRightUI32 (_ebe );_ffaa ._cafbe ._aea ,_ebe =_dc .PopRightUI32 (_ebe );_ffaa ._cafbe ._bgdaa ,_ebe =_dc .PopRightUI32 (_ebe );_ffaa ._cafbe ._ddgf ,_ebe =_dc .PopRightUI32 (_ebe );return nil ;};type scrollBarDataBlock struct{_dadeb uint32 ;
_ggae uint32 ;_bga uint32 ;_gdgcc uint8 ;_egef int32 ;_cbdg int32 ;_cba int32 ;_cfb int32 ;_eddb int32 ;_eadg int32 ;_dgbc int32 ;_dafdg uint32 ;_cac uint32 ;_bced uint32 ;_cgcb uint16 ;};func (_adgd *SpinButtonControl )export (_aaaa *_dc .Writer )error {if _ebcg :=_adgd .writePropMask (_aaaa );
_ebcg !=nil {return _ebcg ;};if _edbg :=_adgd .writeDataBlock (_aaaa );_edbg !=nil {return _edbg ;};if _bag :=_adgd .writeExtraDataBlock (_aaaa );_bag !=nil {return _bag ;};_adgd ._egbd =uint16 (_aaaa .Len ()-4);if _dbde :=_adgd .writeStreamDataM (_aaaa );
_dbde !=nil {return _dbde ;};return _adgd .writeTheRest (_aaaa );};

// ListBoxDataControl is a representation of a list box ActiveX form.
type ListBoxDataControl struct{*morphDataControlStringValue };func (_deg *controlBase )getPictureBytes ()[]byte {return _deg ._agb ._ccdd .getStdPictureBytes ()};const _eac =6;

// GetHeight returns height of the ScrollBar in HIMETRIC (0.01mm)
func (_eaeb *ScrollBarControl )GetHeight ()uint32 {return _eaeb ._dafd ._gcfg };func _bggf (_bfa *_dc .Reader )(*LabelControl ,error ){_ccag :=&LabelControl {};if _eede :=_ccag .readPropMask (_bfa );_eede !=nil {return nil ,_eede ;};if _eabg :=_ccag .readDataBlock (_bfa );
_eabg !=nil {return nil ,_eabg ;};if _afbe :=_ccag .readExtraDataBlock (_bfa );_afbe !=nil {return nil ,_afbe ;};if _ccae :=_ccag .readStreamDataPM (_bfa ,_ccag ._cafbe ._aea ,_ccag ._cafbe ._ddgf );_ccae !=nil {return nil ,_ccae ;};if _gfd :=_ccag .readTheRest (_bfa );
_gfd !=nil {return nil ,_gfd ;};return _ccag ,nil ;};func (_eabe *morphDataControl )getValueString ()string {if _eabe ._dgc ._accb {return _eabe ._bfab ._bfe ;};return "";};

// ControlChoice represents an ActiveX control inside a wrapper.
type ControlChoice struct{CheckBox *CheckBoxDataControl ;TextBox *TextBoxDataControl ;ListBox *ListBoxDataControl ;ComboBox *ComboBoxDataControl ;OptionButton *OptionButtonDataControl ;ToggleButton *ToggleButtonDataControl ;Label *LabelControl ;Image *ImageControl ;
SpinButton *SpinButtonControl ;CommandButton *CommandButtonControl ;ScrollBar *ScrollBarControl ;_eb *controlBase ;};

// GetBackColor gets a button text color value for a system palette from a spinButton control.
func (_edbc *SpinButtonControl )GetBackColor ()uint32 {return _edbc ._dcbbe ._eagf };func (_cgee *morphDataControl )readPropMask (_fgc *_dc .Reader )error {var _dddf uint64 ;if _ggga :=_de .Read (_fgc ,_de .LittleEndian ,&_dddf );_ggga !=nil {return _ggga ;
};_cgee ._dgc =&morphDataPropMask {};_cgee ._dgc ._babc ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._ggge ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._fgef ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._ced ,_dddf =_dc .PopRightUI64 (_dddf );
_cgee ._dgc ._bfcg ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._ggb ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._eagd ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._fedb ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._acb ,_dddf =_dc .PopRightUI64 (_dddf );
_cgee ._dgc ._caed ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._ddgd ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._ebad ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._decg ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._ecef ,_dddf =_dc .PopRightUI64 (_dddf );
_cgee ._dgc ._deegd ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._cdad ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._eggc ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._gcd ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._bddg ,_dddf =_dc .PopRightUI64 (_dddf );
_dddf >>=1;_cgee ._dgc ._fefc ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._egcg ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._accb ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._agce ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._dgeb ,_dddf =_dc .PopRightUI64 (_dddf );
_cgee ._dgc ._ccd ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._ggd ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._fdab ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._bedg ,_dddf =_dc .PopRightUI64 (_dddf );_cgee ._dgc ._aedd ,_dddf =_dc .PopRightUI64 (_dddf );
_dddf >>=1;_dddf >>=1;_cgee ._dgc ._aca ,_dddf =_dc .PopRightUI64 (_dddf );return nil ;};type spinButtonPropMask struct{_agcac bool ;_bcga bool ;_fgcgd bool ;_feba bool ;_ecbf bool ;_eddc bool ;_adfe bool ;_gdcd bool ;_aeaa bool ;_aagd bool ;_agaa bool ;
_gfe bool ;_cgcd bool ;_ecac bool ;};

// GetPosition gets a button position value.
func (_eega *SpinButtonControl )GetPosition ()int32 {return _eega ._dcbbe ._gffb };const _gcce =1;func (_dbg *ScrollBarControl )readPropMask (_egab *_dc .Reader )error {var _age uint32 ;if _bcg :=_de .Read (_egab ,_de .LittleEndian ,&_age );_bcg !=nil {return _bcg ;
};_dbg ._babe =&scrollBarPropMask {};_dbg ._babe ._dgbb ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._ecb ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._gadf ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._dcab ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._fadb ,_age =_dc .PopRightUI32 (_age );
_dbg ._babe ._ceae ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._bedc ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._cdee ,_age =_dc .PopRightUI32 (_age );_age >>=1;_dbg ._babe ._ccab ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._gggfg ,_age =_dc .PopRightUI32 (_age );
_dbg ._babe ._ggf ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._aagf ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._deaba ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._ecfa ,_age =_dc .PopRightUI32 (_age );_dbg ._babe ._edgg ,_age =_dc .PopRightUI32 (_age );
_dbg ._babe ._acbb ,_age =_dc .PopRightUI32 (_age );return nil ;};

// SetHeight sets height of the Label in HIMETRIC (0.01mm)
func (_fded *LabelControl )SetHeight (height uint32 ){_fded ._cafbe ._fggcc =true ;_fded ._dgf ._cdfe =height ;};func (_cabg *ScrollBarControl )export (_gdgc *_dc .Writer )error {if _egbe :=_cabg .writePropMask (_gdgc );_egbe !=nil {return _egbe ;};if _ebca :=_cabg .writeDataBlock (_gdgc );
_ebca !=nil {return _ebca ;};if _bfea :=_cabg .writeExtraDataBlock (_gdgc );_bfea !=nil {return _bfea ;};_cabg ._egbd =uint16 (_gdgc .Len ()-4);if _cea :=_cabg .writeStreamDataM (_gdgc );_cea !=nil {return _cea ;};return _cabg .writeTheRest (_gdgc );};


// GetBackColor gets a button text color value for a system palette from a label control.
func (_eae *LabelControl )GetBackColor ()uint32 {return _eae ._fgd ._ecg };func (_fcba *ImageControl )readExtraDataBlock (_beb *_dc .Reader )error {_fcba ._eec =&imageExtraDataBlock {};if _fcba ._daa ._cfgc {var _abaf uint64 ;if _aacd :=_beb .ReadPairProperty (&_abaf );
_aacd !=nil {return _aacd ;};_fcba ._eec ._aga =uint32 (_abaf );_fcba ._eec ._fac =uint32 (_abaf >>32);};return nil ;};

// GetForeColor gets a button text color value for a system palette from a spinButton control.
func (_afaa *SpinButtonControl )GetForeColor ()uint32 {return _afaa ._dcbbe ._agad };type scrollBarExtraDataBlock struct{_fedf uint32 ;_gcfg uint32 ;};

// SetMax sets a button max value.
func (_cggc *ScrollBarControl )SetMax (max int32 ){_cggc ._babe ._bedc =true ;_cggc ._bdbe ._cbdg =max };func (_debb *controlBase )writeStreamDataM (_eegfc *_dc .Writer )error {if _debb ._agb !=nil {if _debb ._agb ._eade !=nil {if _agee :=_debb ._agb ._eade .export (_eegfc );
_agee !=nil {return _agee ;};};};return nil ;};

// ImportFromFile makes a Control from a file in a storage.
func ImportFromFile (storagePath string )(*Control ,error ){_fc ,_def :=_fa .Open (storagePath );if _def !=nil {return nil ,_def ;};defer _fc .Close ();_gc ,_def :=_e .New (_fc );if _def !=nil {return nil ,_def ;};_cfe ,_def :=_ddc (_gc );if _def !=nil {return nil ,_def ;
};_cb ,_def :=_gc .GetEntry ("\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");if _def !=nil {return nil ,_def ;};_dd :=make ([]byte ,_cb .Size );_ ,_def =_cb .Read (_dd );if _def !=nil {return nil ,_def ;};_ddg :=&Control {_ee :storagePath };_cc ,_def :=_dc .NewReader (_dd );
if _def !=nil {return nil ,_def ;};if _ff :=_de .Read (_cc ,_de .LittleEndian ,&_ddg ._cf );_ff !=nil {return nil ,_ff ;};if _b :=_de .Read (_cc ,_de .LittleEndian ,&_ddg ._ad );_b !=nil {return nil ,_b ;};if _ca :=_de .Read (_cc ,_de .LittleEndian ,&_ddg ._gb );
_ca !=nil {return nil ,_ca ;};switch _cfe {case "\u0043\u0068\u0065\u0063\u006b\u0042\u006f\u0078":_dcf ,_cd :=_ggggf (_cc );if _cd !=nil {return nil ,_cd ;};_dcf ._bdf =true ;_ddg .Choice =&ControlChoice {CheckBox :&CheckBoxDataControl {&morphDataControlBoolValue {_dcf }}};
case "\u0054e\u0078\u0074\u0042\u006f\u0078":_fb ,_ga :=_ggggf (_cc );if _ga !=nil {return nil ,_ga ;};_fb ._bdf =true ;_ddg .Choice =&ControlChoice {TextBox :&TextBoxDataControl {&morphDataControlStringValue {_fb }}};case "\u0043\u006f\u006d\u0062\u006f\u0042\u006f\u0078":_ba ,_dg :=_ggggf (_cc );
if _dg !=nil {return nil ,_dg ;};_ba ._bdf =true ;_ddg .Choice =&ControlChoice {ComboBox :&ComboBoxDataControl {&morphDataControlStringValue {_ba }}};case "\u004ci\u0073\u0074\u0042\u006f\u0078":_fbe ,_gcb :=_ggggf (_cc );if _gcb !=nil {return nil ,_gcb ;
};_fbe ._bdf =true ;_ddg .Choice =&ControlChoice {ListBox :&ListBoxDataControl {&morphDataControlStringValue {_fbe }}};case "\u004f\u0070\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e":_bc ,_aa :=_ggggf (_cc );if _aa !=nil {return nil ,_aa ;};
_bc ._bdf =true ;_ddg .Choice =&ControlChoice {OptionButton :&OptionButtonDataControl {&morphDataControlBoolValue {_bc }}};case "\u0054\u006f\u0067g\u006c\u0065\u0042\u0075\u0074\u0074\u006f\u006e":_fcc ,_bcd :=_ggggf (_cc );if _bcd !=nil {return nil ,_bcd ;
};_fcc ._bdf =true ;_ddg .Choice =&ControlChoice {ToggleButton :&ToggleButtonDataControl {&morphDataControlBoolValue {_fcc }}};case "\u004c\u0061\u0062e\u006c":_ge ,_dcc :=_bggf (_cc );if _dcc !=nil {return nil ,_dcc ;};_ddg .Choice =&ControlChoice {Label :_ge };
case "\u0053\u0070\u0069\u006e\u0042\u0075\u0074\u0074\u006f\u006e":_bcf ,_bb :=_cadbg (_cc );if _bb !=nil {return nil ,_bb ;};_ddg .Choice =&ControlChoice {SpinButton :_bcf };case "\u0043\u006f\u006d\u006d\u0061\u006e\u0064\u0042\u0075\u0074\u0074\u006f\u006e":_ed ,_df :=_ffg (_cc );
if _df !=nil {return nil ,_df ;};_ddg .Choice =&ControlChoice {CommandButton :_ed };case "\u0053c\u0072\u006f\u006c\u006c\u0042\u0061r":_db ,_caf :=_eddg (_cc );if _caf !=nil {return nil ,_caf ;};_ddg .Choice =&ControlChoice {ScrollBar :_db };default:_fbc :=&controlBase {};
if _fe :=_fbc .readTheRest (_cc );_fe !=nil {return nil ,_fe ;};_ddg .Choice =&ControlChoice {_eb :_fbc };};return _ddg ,nil ;};

// SetHeight sets height of the CommandButton in HIMETRIC (0.01mm)
func (_cag *CommandButtonControl )SetHeight (height uint32 ){_cag ._dae ._geac =true ;_cag ._efb ._fdfg =height ;};type imageExtraDataBlock struct{_fac uint32 ;_aga uint32 ;};func (_accc *ImageControl )readDataBlock (_affd *_dc .Reader )error {_accc ._cagb =&imageDataBlock {};
if _accc ._daa ._bcc {if _fbeb :=_affd .ReadProperty (&_accc ._cagb ._geff );_fbeb !=nil {return _fbeb ;};};if _accc ._daa ._gae {if _cca :=_affd .ReadProperty (&_accc ._cagb ._fde );_cca !=nil {return _cca ;};};if _accc ._daa ._bafa {if _cgce :=_affd .ReadProperty (&_accc ._cagb ._gcc );
_cgce !=nil {return _cgce ;};};if _accc ._daa ._fbf {if _cafb :=_affd .ReadProperty (&_accc ._cagb ._ede );_cafb !=nil {return _cafb ;};};if _accc ._daa ._cbg {if _efca :=_affd .ReadProperty (&_accc ._cagb ._fga );_efca !=nil {return _efca ;};};if _accc ._daa ._afff {if _cgb :=_affd .ReadProperty (&_accc ._cagb ._dccg );
_cgb !=nil {return _cgb ;};};if _accc ._daa ._acd {if _cgda :=_affd .ReadProperty (&_accc ._cagb ._acc );_cgda !=nil {return _cgda ;};};if _accc ._daa ._agga {if _eca :=_affd .ReadProperty (&_accc ._cagb ._dbaeb );_eca !=nil {return _eca ;};};if _accc ._daa ._afa {if _dege :=_affd .ReadProperty (&_accc ._cagb ._ggc );
_dege !=nil {return _dege ;};};if _accc ._daa ._egd {if _cfca :=_affd .ReadProperty (&_accc ._cagb ._ffff );_cfca !=nil {return _cfca ;};};return nil ;};const _cae =4;func (_ddda *controlBase )getMouseIconBytes ()[]byte {return _ddda ._agb ._eade .getStdPictureBytes ()};


// SetMin sets a button min value.
func (_bafb *SpinButtonControl )SetMin (min int32 ){_bafb ._gde ._ecbf =true ;_bafb ._dcbbe ._bcfd =min };func (_ged *controlBase )writeStreamDataPM (_cee *_dc .Writer )error {if _ged ._agb !=nil {if _ged ._agb ._ccdd !=nil {if _abg :=_ged ._agb ._ccdd .export (_cee );
_abg !=nil {return _abg ;};};if _ged ._agb ._eade !=nil {if _bcbeb :=_ged ._agb ._eade .export (_cee );_bcbeb !=nil {return _bcbeb ;};};};return nil ;};func (_fgec *morphDataControl )setValueBool (_bdfg bool ){_fgec ._dgc ._accb =true ;_fgec ._aabd ._aedcf =1;
_fgec ._aabd ._dcbb =true ;_ebde :="\u0030";if _bdfg {_ebde ="\u0031";};_fgec ._bfab ._bfe =_ebde ;};

// Control represents an ActiveX control wrapper.
type Control struct{TargetAttr string ;Ocx *_c .Ocx ;Choice *ControlChoice ;_ee string ;_cf uint8 ;_ad uint8 ;_gb uint16 ;};

// GetPosition gets a button position value.
func (_gfac *ScrollBarControl )GetPosition ()int32 {return _gfac ._bdbe ._cba };func (_gace *morphDataControl )writeColumnInfoDataBlock (_aggf *_dc .Writer )error {return nil };

// GetWidth returns width of the SpinButton in HIMETRIC (0.01mm)
func (_aade *SpinButtonControl )GetWidth ()uint32 {return _aade ._aaef ._aaga };func (_ccca *controlBase )readStreamDataPM (_bdac *_dc .Reader ,_fbdg ,_eefb bool )error {_ccca ._agb =&streamData {};if _fbdg {_ccca ._agb ._ccdd =&guidAndPicture {};if _begg :=_ccca ._agb ._ccdd .importFromReader (_bdac );
_begg !=nil {return _begg ;};};if _eefb {_ccca ._agb ._eade =&guidAndPicture {};if _ecbgb :=_ccca ._agb ._eade .importFromReader (_bdac );_ecbgb !=nil {return _ecbgb ;};};return nil ;};func (_gggf *morphDataControl )writeExtraDataBlock (_dgb *_dc .Writer )error {if _gggf ._dgc ._acb {_dbd :=uint64 (_gggf ._bfab ._ege )<<32|uint64 (_gggf ._bfab ._cabc );
if _gfbe :=_dgb .WritePropertyNoAlign (_dbd );_gfbe !=nil {return _gfbe ;};};if _gggf ._aabd ._aedcf > 0{if _gcgf :=_dgb .WriteStringProperty (_gggf ._bfab ._bfe );_gcgf !=nil {return _gcgf ;};};if _gggf ._aabd ._gege > 0{if _gcdf :=_dgb .WriteStringProperty (_gggf ._bfab ._bcb );
_gcdf !=nil {return _gcdf ;};};if _gggf ._aabd ._gga > 0{if _dbe :=_dgb .WriteStringProperty (_gggf ._bfab ._dfed );_dbe !=nil {return _dbe ;};};return nil ;};

// SetPosition sets a button position value.
func (_afd *ScrollBarControl )SetPosition (position int32 ){_afd ._babe ._cdee =true ;_afd ._bdbe ._cba =position ;};

// SetValue sets a value for a control which value can be represented as a string.
func (_fgag *morphDataControlStringValue )SetValue (value string ){_fgag .setValueString (value )};