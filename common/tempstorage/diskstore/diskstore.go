//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package diskstore implements tempStorage interface
// by using disk as a storage
package diskstore ;import (_a "github.com/unidoc/unioffice/v2/common/tempstorage";_g "io/ioutil";_gg "os";_e "strings";);type diskStorage struct{};

// Open opens file from disk according to a path
func (_ab diskStorage )Open (path string )(_a .File ,error ){return _gg .OpenFile (path ,_gg .O_RDWR ,0644);};

// Add is not applicable in the diskstore implementation
func (_d diskStorage )Add (path string )error {return nil };

// TempFile creates a new temp directory by calling ioutil TempDir
func (_fb diskStorage )TempDir (pattern string )(string ,error ){return _g .TempDir ("",pattern )};

// SetAsStorage sets temp storage as a disk storage
func SetAsStorage (){_f :=diskStorage {};_a .SetAsStorage (&_f )};

// TempFile creates a new temp file by calling ioutil TempFile
func (_eb diskStorage )TempFile (dir ,pattern string )(_a .File ,error ){return _g .TempFile (dir ,pattern );};

// RemoveAll removes all files in the directory
func (_ac diskStorage )RemoveAll (dir string )error {if _e .HasPrefix (dir ,_gg .TempDir ()){return _gg .RemoveAll (dir );};return nil ;};