//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package diskstore implements tempStorage interface
// by using disk as a storage
package diskstore ;import (_d "github.com/unidoc/unioffice/v2/common/tempstorage";_gg "io/ioutil";_b "os";_ggd "strings";);

// RemoveAll removes all files in the directory
func (_da diskStorage )RemoveAll (dir string )error {if _ggd .HasPrefix (dir ,_b .TempDir ()){return _b .RemoveAll (dir );};return nil ;};

// SetAsStorage sets temp storage as a disk storage
func SetAsStorage (){_bg :=diskStorage {};_d .SetAsStorage (&_bg )};

// TempFile creates a new temp file by calling ioutil TempFile
func (_ff diskStorage )TempFile (dir ,pattern string )(_d .File ,error ){return _gg .TempFile (dir ,pattern );};type diskStorage struct{};

// Add is not applicable in the diskstore implementation
func (_fg diskStorage )Add (path string )error {return nil };

// Open opens file from disk according to a path
func (_f diskStorage )Open (path string )(_d .File ,error ){return _b .OpenFile (path ,_b .O_RDWR ,0644)};

// TempFile creates a new temp directory by calling ioutil TempDir
func (_bgb diskStorage )TempDir (pattern string )(string ,error ){return _gg .TempDir ("",pattern )};