//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package diskstore implements tempStorage interface
// by using disk as a storage
package diskstore ;import (_gd "github.com/unidoc/unioffice/common/tempstorage";_a "io/ioutil";_f "os";_gc "strings";);type diskStorage struct{};

// TempFile creates a new temp directory by calling ioutil TempDir
func (_c diskStorage )TempDir (pattern string )(string ,error ){return _a .TempDir ("",pattern )};

// TempFile creates a new temp file by calling ioutil TempFile
func (_e diskStorage )TempFile (dir ,pattern string )(_gd .File ,error ){return _a .TempFile (dir ,pattern );};

// Add is not applicable in the diskstore implementation
func (_ce diskStorage )Add (path string )error {return nil };

// RemoveAll removes all files in the directory
func (_b diskStorage )RemoveAll (dir string )error {if _gc .HasPrefix (dir ,_f .TempDir ()){return _f .RemoveAll (dir );};return nil ;};

// Open opens file from disk according to a path
func (_fa diskStorage )Open (path string )(_gd .File ,error ){return _f .OpenFile (path ,_f .O_RDWR ,0644)};

// SetAsStorage sets temp storage as a disk storage
func SetAsStorage (){_d :=diskStorage {};_gd .SetAsStorage (&_d )};