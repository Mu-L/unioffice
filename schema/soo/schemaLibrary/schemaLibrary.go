//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package schemaLibrary ;import (_c "encoding/xml";_b "fmt";_bc "github.com/unidoc/unioffice";_f "github.com/unidoc/unioffice/common/logger";);

// ValidateWithPath validates the CT_Schema and its children, prefixing error messages with path
func (_ec *CT_Schema )ValidateWithPath (path string )error {return nil };func (_gd *CT_Schema )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for _ ,_e :=range start .Attr {if _e .Name .Local =="\u0075\u0072\u0069"{_ca ,_cd :=_e .Value ,error (nil );
if _cd !=nil {return _cd ;};_gd .UriAttr =&_ca ;continue ;};if _e .Name .Local =="\u006d\u0061n\u0069\u0066\u0065s\u0074\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"{_cae ,_ed :=_e .Value ,error (nil );if _ed !=nil {return _ed ;};_gd .ManifestLocationAttr =&_cae ;
continue ;};if _e .Name .Local =="\u0073\u0063\u0068\u0065\u006d\u0061\u004c\u006f\u0063a\u0074\u0069\u006f\u006e"{_ge ,_eg :=_e .Value ,error (nil );if _eg !=nil {return _eg ;};_gd .SchemaLocationAttr =&_ge ;continue ;};if _e .Name .Local =="\u0073\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065"{_bf ,_cb :=_e .Value ,error (nil );
if _cb !=nil {return _cb ;};_gd .SchemaLanguageAttr =&_bf ;continue ;};};for {_a ,_da :=d .Token ();if _da !=nil {return _b .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0053\u0063\u0068e\u006d\u0061\u003a\u0020\u0025\u0073",_da );};if _db ,_dag :=_a .(_c .EndElement );
_dag &&_db .Name ==start .Name {break ;};};return nil ;};

// Validate validates the CT_Schema and its children
func (_ab *CT_Schema )Validate ()error {return _ab .ValidateWithPath ("\u0043T\u005f\u0053\u0063\u0068\u0065\u006da");};type CT_Schema struct{UriAttr *string ;ManifestLocationAttr *string ;SchemaLocationAttr *string ;SchemaLanguageAttr *string ;};

// Validate validates the CT_SchemaLibrary and its children
func (_eca *CT_SchemaLibrary )Validate ()error {return _eca .ValidateWithPath ("\u0043\u0054_\u0053\u0063\u0068e\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079");};func NewSchemaLibrary ()*SchemaLibrary {_eed :=&SchemaLibrary {};_eed .CT_SchemaLibrary =*NewCT_SchemaLibrary ();
return _eed ;};

// ValidateWithPath validates the CT_SchemaLibrary and its children, prefixing error messages with path
func (_dd *CT_SchemaLibrary )ValidateWithPath (path string )error {for _fef ,_egb :=range _dd .Schema {if _daf :=_egb .ValidateWithPath (_b .Sprintf ("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0061\u005b\u0025\u0064\u005d",path ,_fef ));_daf !=nil {return _daf ;
};};return nil ;};func (_gee *SchemaLibrary )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"},Value :"\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u006d\u0061:\u0073\u0063\u0068e\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079";return _gee .CT_SchemaLibrary .MarshalXML (e ,start );};func (_fb *CT_Schema )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _fb .UriAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u006d\u0061\u003a\u0075\u0072\u0069"},Value :_b .Sprintf ("\u0025\u0076",*_fb .UriAttr )});
};if _fb .ManifestLocationAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u006d\u0061\u003a\u006dan\u0069\u0066\u0065\u0073\u0074\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"},Value :_b .Sprintf ("\u0025\u0076",*_fb .ManifestLocationAttr )});
};if _fb .SchemaLocationAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u006d\u0061\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u004c\u006f\u0063a\u0074\u0069\u006f\u006e"},Value :_b .Sprintf ("\u0025\u0076",*_fb .SchemaLocationAttr )});
};if _fb .SchemaLanguageAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u006d\u0061\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065"},Value :_b .Sprintf ("\u0025\u0076",*_fb .SchemaLanguageAttr )});
};e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func (_dcg *CT_SchemaLibrary )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_cf :for {_fe ,_ea :=d .Token ();if _ea !=nil {return _ea ;};switch _geb :=_fe .(type ){case _c .StartElement :switch _geb .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e",Local :"\u0073\u0063\u0068\u0065\u006d\u0061"}:_gf :=NewCT_Schema ();
if _ce :=d .DecodeElement (_gf ,&_geb );_ce !=nil {return _ce ;};_dcg .Schema =append (_dcg .Schema ,_gf );default:_f .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u0020\u0025v",_geb .Name );
if _bb :=d .Skip ();_bb !=nil {return _bb ;};};case _c .EndElement :break _cf ;case _c .CharData :};};return nil ;};

// Validate validates the SchemaLibrary and its children
func (_egbg *SchemaLibrary )Validate ()error {return _egbg .ValidateWithPath ("\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079");};func (_ee *CT_SchemaLibrary )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {e .EncodeToken (start );
if _ee .Schema !=nil {_dc :=_c .StartElement {Name :_c .Name {Local :"\u006da\u003a\u0073\u0063\u0068\u0065\u006da"}};for _ ,_eb :=range _ee .Schema {e .EncodeElement (_eb ,_dc );};};e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func NewCT_Schema ()*CT_Schema {_d :=&CT_Schema {};
return _d };func NewCT_SchemaLibrary ()*CT_SchemaLibrary {_edf :=&CT_SchemaLibrary {};return _edf };type SchemaLibrary struct{CT_SchemaLibrary };type CT_SchemaLibrary struct{Schema []*CT_Schema ;};func (_dde *SchemaLibrary )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_dde .CT_SchemaLibrary =*NewCT_SchemaLibrary ();
_bbf :for {_bce ,_cag :=d .Token ();if _cag !=nil {return _cag ;};switch _ff :=_bce .(type ){case _c .StartElement :switch _ff .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e",Local :"\u0073\u0063\u0068\u0065\u006d\u0061"}:_ae :=NewCT_Schema ();
if _dcd :=d .DecodeElement (_ae ,&_ff );_dcd !=nil {return _dcd ;};_dde .Schema =append (_dde .Schema ,_ae );default:_f .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0053\u0063\u0068\u0065m\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079 \u0025\u0076",_ff .Name );
if _aa :=d .Skip ();_aa !=nil {return _aa ;};};case _c .EndElement :break _bbf ;case _c .CharData :};};return nil ;};

// ValidateWithPath validates the SchemaLibrary and its children, prefixing error messages with path
func (_bcc *SchemaLibrary )ValidateWithPath (path string )error {if _cbf :=_bcc .CT_SchemaLibrary .ValidateWithPath (path );_cbf !=nil {return _cbf ;};return nil ;};func init (){_bc .RegisterConstructor ("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e","\u0043T\u005f\u0053\u0063\u0068\u0065\u006da",NewCT_Schema );
_bc .RegisterConstructor ("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e","\u0043\u0054_\u0053\u0063\u0068e\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079",NewCT_SchemaLibrary );
_bc .RegisterConstructor ("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e","\u0073\u0063\u0068\u0065\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079",NewSchemaLibrary );
};