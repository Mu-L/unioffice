//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_f "encoding/xml";_d "fmt";_e "github.com/unidoc/unioffice";_ba "github.com/unidoc/unioffice/common/logger";_bg "regexp";);type Default struct{CT_Default };type CT_Types struct{Default []*Default ;Override []*Override ;};
type Override struct{CT_Override };

// Validate validates the Default and its children
func (_cgbe *Default )Validate ()error {return _cgbe .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_dfb *Types )ValidateWithPath (path string )error {if _eff :=_dfb .CT_Types .ValidateWithPath (path );_eff !=nil {return _eff ;};return nil ;};func (_gb *CT_Types )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_ed :for {_fbf ,_afe :=d .Token ();
if _afe !=nil {return _afe ;};switch _aa :=_fbf .(type ){case _f .StartElement :switch _aa .Name {case _f .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_eec :=NewDefault ();
if _gda :=d .DecodeElement (_eec ,&_aa );_gda !=nil {return _gda ;};_gb .Default =append (_gb .Default ,_eec );case _f .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_eb :=NewOverride ();
if _gbe :=d .DecodeElement (_eb ,&_aa );_gbe !=nil {return _gbe ;};_gb .Override =append (_gb .Override ,_eb );default:_ba .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_aa .Name );
if _cf :=d .Skip ();_cf !=nil {return _cf ;};};case _f .EndElement :break _ed ;case _f .CharData :};};return nil ;};

// Validate validates the Types and its children
func (_ce *Types )Validate ()error {return _ce .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};func (_beb *Types )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});
start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0054\u0079\u0070e\u0073";return _beb .CT_Types .MarshalXML (e ,start );};

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_ecd *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_ecd .ContentTypeAttr ){return _d .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_ecd .ContentTypeAttr );
};return nil ;};func (_be *CT_Default )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_d .Sprintf ("\u0025\u0076",_be .ExtensionAttr )});
start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_d .Sprintf ("\u0025\u0076",_be .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};

// Validate validates the Override and its children
func (_da *Override )Validate ()error {return _da .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_bbe *Override )ValidateWithPath (path string )error {if _bbg :=_bbe .CT_Override .ValidateWithPath (path );_bbg !=nil {return _bbg ;};return nil ;};func (_edc *Override )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {return _edc .CT_Override .MarshalXML (e ,start );
};func NewOverride ()*Override {_cff :=&Override {};_cff .CT_Override =*NewCT_Override ();return _cff };func NewDefault ()*Default {_ddd :=&Default {};_ddd .CT_Default =*NewCT_Default ();return _ddd };type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;
};

// Validate validates the CT_Types and its children
func (_ecc *CT_Types )Validate ()error {return _ecc .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};func (_cb *Default )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_cb .CT_Default =*NewCT_Default ();for _ ,_ef :=range start .Attr {if _ef .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_efb ,_gfe :=_ef .Value ,error (nil );
if _gfe !=nil {return _gfe ;};_cb .ExtensionAttr =_efb ;continue ;};if _ef .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_dgf ,_gef :=_ef .Value ,error (nil );if _gef !=nil {return _gef ;};_cb .ContentTypeAttr =_dgf ;continue ;
};};for {_cgb ,_ege :=d .Token ();if _ege !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_ege );};if _baa ,_cbb :=_cgb .(_f .EndElement );_cbb &&_baa .Name ==start .Name {break ;
};};return nil ;};var ST_ExtensionPatternRe =_bg .MustCompile (ST_ExtensionPattern );func NewTypes ()*Types {_bgb :=&Types {};_bgb .CT_Types =*NewCT_Types ();return _bgb };const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";
func NewCT_Default ()*CT_Default {_ea :=&CT_Default {};_ea .ExtensionAttr ="\u0078\u006d\u006c";_ea .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _ea ;};func (_egdf *Override )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_egdf .CT_Override =*NewCT_Override ();
for _ ,_ega :=range start .Attr {if _ega .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_cbg ,_bc :=_ega .Value ,error (nil );if _bc !=nil {return _bc ;};_egdf .ContentTypeAttr =_cbg ;continue ;};if _ega .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_cgg ,_bd :=_ega .Value ,error (nil );
if _bd !=nil {return _bd ;};_egdf .PartNameAttr =_cgg ;continue ;};};for {_gded ,_ag :=d .Token ();if _ag !=nil {return _d .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_ag );};if _fda ,_bb :=_gded .(_f .EndElement );
_bb &&_fda .Name ==start .Name {break ;};};return nil ;};

// Validate validates the CT_Default and its children
func (_gg *CT_Default )Validate ()error {return _gg .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};func (_ec *CT_Override )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_d .Sprintf ("\u0025\u0076",_ec .ContentTypeAttr )});
start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_d .Sprintf ("\u0025\u0076",_ec .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};func (_ddg *Types )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_ddg .CT_Types =*NewCT_Types ();_faf :for {_bbf ,_bde :=d .Token ();if _bde !=nil {return _bde ;};switch _de :=_bbf .(type ){case _f .StartElement :switch _de .Name {case _f .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_ebf :=NewDefault ();
if _cbbe :=d .DecodeElement (_ebf ,&_de );_cbbe !=nil {return _cbbe ;};_ddg .Default =append (_ddg .Default ,_ebf );case _f .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_ad :=NewOverride ();
if _bdg :=d .DecodeElement (_ad ,&_de );_bdg !=nil {return _bdg ;};_ddg .Override =append (_ddg .Override ,_ad );default:_ba .Log .Debug ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_de .Name );
if _gdedd :=d .Skip ();_gdedd !=nil {return _gdedd ;};};case _f .EndElement :break _faf ;case _f .CharData :};};return nil ;};func NewCT_Types ()*CT_Types {_cd :=&CT_Types {};return _cd };func (_g *CT_Default )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_g .ExtensionAttr ="\u0078\u006d\u006c";
_g .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_a :=range start .Attr {if _a .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_ddb ,_fa :=_a .Value ,error (nil );if _fa !=nil {return _fa ;
};_g .ExtensionAttr =_ddb ;continue ;};if _a .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_df ,_gf :=_a .Value ,error (nil );if _gf !=nil {return _gf ;};_g .ContentTypeAttr =_df ;continue ;};};for {_fe ,_fb :=d .Token ();
if _fb !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_fb );};if _fd ,_ge :=_fe .(_f .EndElement );_ge &&_fd .Name ==start .Name {break ;};};return nil ;
};func (_ca *CT_Types )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {e .EncodeToken (start );if _ca .Default !=nil {_gde :=_f .StartElement {Name :_f .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};for _ ,_dg :=range _ca .Default {e .EncodeElement (_dg ,_gde );
};};if _ca .Override !=nil {_eag :=_f .StartElement {Name :_f .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};for _ ,_dgc :=range _ca .Override {e .EncodeElement (_dgc ,_eag );};};e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};func NewCT_Override ()*CT_Override {_af :=&CT_Override {};_af .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _af ;};type Types struct{CT_Types };const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";
func (_eaa *CT_Override )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_eaa .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_eae :=range start .Attr {if _eae .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_ee ,_afd :=_eae .Value ,error (nil );
if _afd !=nil {return _afd ;};_eaa .ContentTypeAttr =_ee ;continue ;};if _eae .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_fbb ,_egd :=_eae .Value ,error (nil );if _egd !=nil {return _egd ;};_eaa .PartNameAttr =_fbb ;continue ;};};
for {_fee ,_eed :=d .Token ();if _eed !=nil {return _d .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_eed );};if _c ,_gd :=_fee .(_f .EndElement );_gd &&_c .Name ==start .Name {break ;
};};return nil ;};var ST_ContentTypePatternRe =_bg .MustCompile (ST_ContentTypePattern );

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_eg *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_eg .ExtensionAttr ){return _d .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_eg .ExtensionAttr );
};if !ST_ContentTypePatternRe .MatchString (_eg .ContentTypeAttr ){return _d .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_eg .ContentTypeAttr );
};return nil ;};

// Validate validates the CT_Override and its children
func (_fc *CT_Override )Validate ()error {return _fc .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func (_cgf *Default )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {return _cgf .CT_Default .MarshalXML (e ,start );
};type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_ebd *Default )ValidateWithPath (path string )error {if _ggcd :=_ebd .CT_Default .ValidateWithPath (path );_ggcd !=nil {return _ggcd ;};return nil ;};

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_fbc *CT_Types )ValidateWithPath (path string )error {for _gdee ,_fab :=range _fbc .Default {if _ac :=_fab .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0044\u0065\u0066\u0061\u0075\u006ct\u005b\u0025\u0064\u005d",path ,_gdee ));_ac !=nil {return _ac ;
};};for _cad ,_fcd :=range _fbc .Override {if _gdd :=_fcd .ValidateWithPath (_d .Sprintf ("\u0025s\u002fO\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u005b\u0025\u0064\u005d",path ,_cad ));_gdd !=nil {return _gdd ;};};return nil ;};func init (){_e .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );
_e .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );
_e .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );
_e .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );
_e .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );
_e .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );
};