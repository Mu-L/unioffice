//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_e "encoding/xml";_g "fmt";_b "github.com/unidoc/unioffice";_c "github.com/unidoc/unioffice/common/logger";_ed "regexp";);func NewOverride ()*Override {_cfg :=&Override {};_cfg .CT_Override =*NewCT_Override ();return _cfg };
func (_ae *Types )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0054\u0079\u0070e\u0073";return _ae .CT_Types .MarshalXML (e ,start );};

// Validate validates the Override and its children
func (_dbb *Override )Validate ()error {return _dbb .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_bef *Default )ValidateWithPath (path string )error {if _dab :=_bef .CT_Default .ValidateWithPath (path );_dab !=nil {return _dab ;};return nil ;};func NewCT_Override ()*CT_Override {_gd :=&CT_Override {};_gd .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
return _gd ;};

// Validate validates the CT_Types and its children
func (_edb *CT_Types )Validate ()error {return _edb .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};func (_be *CT_Types )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_eb :for {_aaf ,_cc :=d .Token ();if _cc !=nil {return _cc ;
};switch _ceb :=_aaf .(type ){case _e .StartElement :switch _ceb .Name {case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_db :=NewDefault ();
if _aac :=d .DecodeElement (_db ,&_ceb );_aac !=nil {return _aac ;};_be .Default =append (_be .Default ,_db );case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_gbe :=NewOverride ();
if _fb :=d .DecodeElement (_gbe ,&_ceb );_fb !=nil {return _fb ;};_be .Override =append (_be .Override ,_gbe );default:_c .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_ceb .Name );
if _ga :=d .Skip ();_ga !=nil {return _ga ;};};case _e .EndElement :break _eb ;case _e .CharData :};};return nil ;};var ST_ExtensionPatternRe =_ed .MustCompile (ST_ExtensionPattern );func (_bf *CT_Types )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {e .EncodeToken (start );
if _bf .Default !=nil {_abc :=_e .StartElement {Name :_e .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};for _ ,_bgc :=range _bf .Default {e .EncodeElement (_bgc ,_abc );};};if _bf .Override !=nil {_edc :=_e .StartElement {Name :_e .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};
for _ ,_bbd :=range _bf .Override {e .EncodeElement (_bbd ,_edc );};};e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_fa *Override )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_fa .CT_Override =*NewCT_Override ();
for _ ,_gef :=range start .Attr {if _gef .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_abcf ,_ebg :=_gef .Value ,error (nil );if _ebg !=nil {return _ebg ;};_fa .ContentTypeAttr =_abcf ;continue ;};if _gef .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_dg ,_cb :=_gef .Value ,error (nil );
if _cb !=nil {return _cb ;};_fa .PartNameAttr =_dg ;continue ;};};for {_gab ,_fef :=d .Token ();if _fef !=nil {return _g .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_fef );};if _ggd ,_dff :=_gab .(_e .EndElement );
_dff &&_ggd .Name ==start .Name {break ;};};return nil ;};func NewTypes ()*Types {_ada :=&Types {};_ada .CT_Types =*NewCT_Types ();return _ada };func (_cf *CT_Default )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_g .Sprintf ("\u0025\u0076",_cf .ExtensionAttr )});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_g .Sprintf ("\u0025\u0076",_cf .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });
return nil ;};

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_abce *CT_Types )ValidateWithPath (path string )error {for _cef ,_bd :=range _abce .Default {if _fc :=_bd .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0044\u0065\u0066\u0061\u0075\u006ct\u005b\u0025\u0064\u005d",path ,_cef ));_fc !=nil {return _fc ;
};};for _gac ,_ff :=range _abce .Override {if _ggc :=_ff .ValidateWithPath (_g .Sprintf ("\u0025s\u002fO\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u005b\u0025\u0064\u005d",path ,_gac ));_ggc !=nil {return _ggc ;};};return nil ;};func (_gaa *Default )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_gaa .CT_Default =*NewCT_Default ();
for _ ,_bc :=range start .Attr {if _bc .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_gea ,_fg :=_bc .Value ,error (nil );if _fg !=nil {return _fg ;};_gaa .ExtensionAttr =_gea ;continue ;};if _bc .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_ebd ,_geac :=_bc .Value ,error (nil );
if _geac !=nil {return _geac ;};_gaa .ContentTypeAttr =_ebd ;continue ;};};for {_gae ,_acg :=d .Token ();if _acg !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_acg );
};if _abe ,_da :=_gae .(_e .EndElement );_da &&_abe .Name ==start .Name {break ;};};return nil ;};const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";func (_ede *Default )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {return _ede .CT_Default .MarshalXML (e ,start );
};func (_ab *CT_Override )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_g .Sprintf ("\u0025\u0076",_ab .ContentTypeAttr )});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_g .Sprintf ("\u0025\u0076",_ab .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });
return nil ;};func (_bb *CT_Default )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_bb .ExtensionAttr ="\u0078\u006d\u006c";_bb .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_gg :=range start .Attr {if _gg .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_gb ,_bg :=_gg .Value ,error (nil );
if _bg !=nil {return _bg ;};_bb .ExtensionAttr =_gb ;continue ;};if _gg .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_ea ,_aa :=_gg .Value ,error (nil );if _aa !=nil {return _aa ;};_bb .ContentTypeAttr =_ea ;continue ;
};};for {_af ,_df :=d .Token ();if _df !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_df );};if _dc ,_ce :=_af .(_e .EndElement );_ce &&_dc .Name ==start .Name {break ;
};};return nil ;};func (_gf *Types )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_gf .CT_Types =*NewCT_Types ();_bcg :for {_fefg ,_dcb :=d .Token ();if _dcb !=nil {return _dcb ;};switch _dbc :=_fefg .(type ){case _e .StartElement :switch _dbc .Name {case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_eg :=NewDefault ();
if _gec :=d .DecodeElement (_eg ,&_dbc );_gec !=nil {return _gec ;};_gf .Default =append (_gf .Default ,_eg );case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_egc :=NewOverride ();
if _abeb :=d .DecodeElement (_egc ,&_dbc );_abeb !=nil {return _abeb ;};_gf .Override =append (_gf .Override ,_egc );default:_c .Log .Debug ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_dbc .Name );
if _aba :=d .Skip ();_aba !=nil {return _aba ;};};case _e .EndElement :break _bcg ;case _e .CharData :};};return nil ;};func NewDefault ()*Default {_aacd :=&Default {};_aacd .CT_Default =*NewCT_Default ();return _aacd };type Default struct{CT_Default };


// Validate validates the CT_Default and its children
func (_ad *CT_Default )Validate ()error {return _ad .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};type CT_Types struct{Default []*Default ;Override []*Override ;};

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_eea *Override )ValidateWithPath (path string )error {if _ebe :=_eea .CT_Override .ValidateWithPath (path );_ebe !=nil {return _ebe ;};return nil ;};

// Validate validates the Default and its children
func (_fe *Default )Validate ()error {return _fe .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_ac *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_ac .ContentTypeAttr ){return _g .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_ac .ContentTypeAttr );
};return nil ;};var ST_ContentTypePatternRe =_ed .MustCompile (ST_ContentTypePattern );type Override struct{CT_Override };const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";


// Validate validates the Types and its children
func (_bbc *Types )Validate ()error {return _bbc .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};func (_cg *CT_Override )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_cg .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
for _ ,_ec :=range start .Attr {if _ec .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_eag ,_ef :=_ec .Value ,error (nil );if _ef !=nil {return _ef ;};_cg .ContentTypeAttr =_eag ;continue ;};if _ec .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_ge ,_bge :=_ec .Value ,error (nil );
if _bge !=nil {return _bge ;};_cg .PartNameAttr =_ge ;continue ;};};for {_cga ,_bbfg :=d .Token ();if _bbfg !=nil {return _g .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_bbfg );
};if _dd ,_ag :=_cga .(_e .EndElement );_ag &&_dd .Name ==start .Name {break ;};};return nil ;};func NewCT_Types ()*CT_Types {_fd :=&CT_Types {};return _fd };type Types struct{CT_Types };type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;
};

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_gfg *Types )ValidateWithPath (path string )error {if _ebf :=_gfg .CT_Types .ValidateWithPath (path );_ebf !=nil {return _ebf ;};return nil ;};

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_f *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_f .ExtensionAttr ){return _g .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_f .ExtensionAttr );
};if !ST_ContentTypePatternRe .MatchString (_f .ContentTypeAttr ){return _g .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_f .ContentTypeAttr );
};return nil ;};func (_ee *Override )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {return _ee .CT_Override .MarshalXML (e ,start );};func NewCT_Default ()*CT_Default {_a :=&CT_Default {};_a .ExtensionAttr ="\u0078\u006d\u006c";_a .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
return _a ;};

// Validate validates the CT_Override and its children
func (_bgef *CT_Override )Validate ()error {return _bgef .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func init (){_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );
_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );
_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );
_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );
_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );
_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );
};