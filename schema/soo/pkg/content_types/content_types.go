//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_a "encoding/xml";_e "fmt";_ac "github.com/unidoc/unioffice/v2";_c "github.com/unidoc/unioffice/v2/common/logger";_fa "regexp";);

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_dce *CT_Types )ValidateWithPath (path string )error {for _ace ,_ebg :=range _dce .TypesChoice {if _fgbe :=_ebg .ValidateWithPath (_e .Sprintf ("\u0025s\u002fT\u0079\u0070\u0065\u0073\u0043h\u006f\u0069c\u0065\u005b\u0025\u0064\u005d",path ,_ace ));
_fgbe !=nil {return _fgbe ;};};return nil ;};func NewOverride ()*Override {_ege :=&Override {};_ege .CT_Override =*NewCT_Override ();return _ege };type CT_TypesChoice struct{Default *Default ;Override *Override ;};func NewCT_TypesChoice ()*CT_TypesChoice {_adb :=&CT_TypesChoice {};
return _adb };

// Validate validates the CT_Types and its children
func (_gg *CT_Types )Validate ()error {return _gg .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};func (_ec *CT_Default )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_ec .ExtensionAttr ="\u0078\u006d\u006c";_ec .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
for _ ,_dg :=range start .Attr {if _dg .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_af :=_dg .Value ;_ec .ExtensionAttr =_af ;continue ;};if _dg .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_db :=_dg .Value ;
_ec .ContentTypeAttr =_db ;continue ;};};for {_ca ,_ad :=d .Token ();if _ad !=nil {return _e .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_ad );};if _ecd ,_fc :=_ca .(_a .EndElement );
_fc &&_ecd .Name ==start .Name {break ;};};return nil ;};func (_eed *CT_TypesChoice )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_acd :=start ;switch start .Name {case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_eed .Default =NewDefault ();
if _ae :=d .DecodeElement (_eed .Default ,&_acd );_ae !=nil {return _ae ;};case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_eed .Override =NewOverride ();
if _ggd :=d .DecodeElement (_eed .Override ,&_acd );_ggd !=nil {return _ggd ;};default:_c .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0043\u0068o\u0069c\u0065\u0020\u0025\u0076",_acd .Name );
if _agb :=d .Skip ();_agb !=nil {return _agb ;};};return nil ;};func NewDefault ()*Default {_acb :=&Default {};_acb .CT_Default =*NewCT_Default ();return _acb };const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";


// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_ecf *Default )ValidateWithPath (path string )error {if _dfg :=_ecf .CT_Default .ValidateWithPath (path );_dfg !=nil {return _dfg ;};return nil ;};var ST_ExtensionPatternRe =_fa .MustCompile (ST_ExtensionPattern );

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_fgbb *Types )ValidateWithPath (path string )error {if _fdc :=_fgbb .CT_Types .ValidateWithPath (path );_fdc !=nil {return _fdc ;};return nil ;};type Types struct{CT_Types };

// Validate validates the Override and its children
func (_cgc *Override )Validate ()error {return _cgc .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func (_df *Default )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return _df .CT_Default .MarshalXML (e ,start );};


// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_gfd *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_gfd .ExtensionAttr ){return _e .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_gfd .ExtensionAttr );
};if !ST_ContentTypePatternRe .MatchString (_gfd .ContentTypeAttr ){return _e .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_gfd .ContentTypeAttr );
};return nil ;};func NewCT_Default ()*CT_Default {_g :=&CT_Default {};_g .ExtensionAttr ="\u0078\u006d\u006c";_g .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _g ;};

// ValidateWithPath validates the CT_TypesChoice and its children, prefixing error messages with path
func (_bcc *CT_TypesChoice )ValidateWithPath (path string )error {if _bcc .Default !=nil {if _aa :=_bcc .Default .ValidateWithPath (path +"\u002f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");_aa !=nil {return _aa ;};};if _bcc .Override !=nil {if _dgf :=_bcc .Override .ValidateWithPath (path +"\u002fO\u0076\u0065\u0072\u0072\u0069\u0064e");
_dgf !=nil {return _dgf ;};};return nil ;};func (_gab *Default )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_gab .CT_Default =*NewCT_Default ();for _ ,_fcae :=range start .Attr {if _fcae .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_cea :=_fcae .Value ;
_gab .ExtensionAttr =_cea ;continue ;};if _fcae .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_fe :=_fcae .Value ;_gab .ContentTypeAttr =_fe ;continue ;};};for {_ebgc ,_ggb :=d .Token ();if _ggb !=nil {return _e .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_ggb );
};if _eg ,_edf :=_ebgc .(_a .EndElement );_edf &&_eg .Name ==start .Name {break ;};};return nil ;};

// Validate validates the CT_TypesChoice and its children
func (_age *CT_TypesChoice )Validate ()error {return _age .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0043h\u006f\u0069\u0063\u0065");};type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";


// Validate validates the Default and its children
func (_adbd *Default )Validate ()error {return _adbd .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};func (_d *CT_Default )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_e .Sprintf ("\u0025\u0076",_d .ExtensionAttr )});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_e .Sprintf ("\u0025\u0076",_d .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });
return nil ;};func (_bc *CT_Types )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );if _bc .TypesChoice !=nil {for _ ,_fb :=range _bc .TypesChoice {_fb .MarshalXML (e ,_a .StartElement {});};};e .EncodeToken (_a .EndElement {Name :start .Name });
return nil ;};func (_dbc *Override )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return _dbc .CT_Override .MarshalXML (e ,start );};func (_fca *CT_Override )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_e .Sprintf ("\u0025\u0076",_fca .ContentTypeAttr )});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_e .Sprintf ("\u0025\u0076",_fca .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });
return nil ;};func (_geg *Types )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_geg .CT_Types =*NewCT_Types ();_fae :for {_aea ,_bd :=d .Token ();if _bd !=nil {return _bd ;};switch _cf :=_aea .(type ){case _a .StartElement :switch _cf .Name {case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_cbc :=NewCT_TypesChoice ();
if _bdg :=d .DecodeElement (&_cbc .Default ,&_cf );_bdg !=nil {return _bdg ;};_geg .TypesChoice =append (_geg .TypesChoice ,_cbc );case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_cfa :=NewCT_TypesChoice ();
if _cfd :=d .DecodeElement (&_cfa .Override ,&_cf );_cfd !=nil {return _cfd ;};_geg .TypesChoice =append (_geg .TypesChoice ,_cfa );default:_c .Log .Debug ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_cf .Name );
if _accb :=d .Skip ();_accb !=nil {return _accb ;};};case _a .EndElement :break _fae ;case _a .CharData :};};return nil ;};

// Validate validates the Types and its children
func (_bbb *Types )Validate ()error {return _bbb .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};func (_ddd *CT_Types )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_dc :for {_dga ,_acg :=d .Token ();if _acg !=nil {return _acg ;};switch _ba :=_dga .(type ){case _a .StartElement :switch _ba .Name {case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_fgb :=NewCT_TypesChoice ();
if _ea :=d .DecodeElement (&_fgb .Default ,&_ba );_ea !=nil {return _ea ;};_ddd .TypesChoice =append (_ddd .TypesChoice ,_fgb );case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_be :=NewCT_TypesChoice ();
if _gde :=d .DecodeElement (&_be .Override ,&_ba );_gde !=nil {return _gde ;};_ddd .TypesChoice =append (_ddd .TypesChoice ,_be );default:_c .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_ba .Name );
if _gb :=d .Skip ();_gb !=nil {return _gb ;};};case _a .EndElement :break _dc ;case _a .CharData :};};return nil ;};func (_ddb *Override )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_ddb .CT_Override =*NewCT_Override ();for _ ,_bed :=range start .Attr {if _bed .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_bcd :=_bed .Value ;
_ddb .ContentTypeAttr =_bcd ;continue ;};if _bed .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_cca :=_bed .Value ;_ddb .PartNameAttr =_cca ;continue ;};};for {_de ,_fba :=d .Token ();if _fba !=nil {return _e .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_fba );
};if _ff ,_ada :=_de .(_a .EndElement );_ada &&_ff .Name ==start .Name {break ;};};return nil ;};func (_ce *CT_TypesChoice )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );if _ce .Default !=nil {_bb :=_a .StartElement {Name :_a .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};
e .EncodeElement (_ce .Default ,_bb );}else if _ce .Override !=nil {_ee :=_a .StartElement {Name :_a .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};e .EncodeElement (_ce .Override ,_ee );};e .EncodeToken (_a .EndElement {Name :start .Name });
return nil ;};

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_gaa *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_gaa .ContentTypeAttr ){return _e .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_gaa .ContentTypeAttr );
};return nil ;};type CT_Types struct{TypesChoice []*CT_TypesChoice ;};func (_eab *Types )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0054\u0079\u0070e\u0073";return _eab .CT_Types .MarshalXML (e ,start );};type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};func NewCT_Override ()*CT_Override {_gfc :=&CT_Override {};_gfc .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
return _gfc ;};type Override struct{CT_Override };type Default struct{CT_Default };

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_ded *Override )ValidateWithPath (path string )error {if _ge :=_ded .CT_Override .ValidateWithPath (path );_ge !=nil {return _ge ;};return nil ;};

// Validate validates the CT_Override and its children
func (_fcd *CT_Override )Validate ()error {return _fcd .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func (_b *CT_Override )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_b .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
for _ ,_fg :=range start .Attr {if _fg .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_cg :=_fg .Value ;_b .ContentTypeAttr =_cg ;continue ;};if _fg .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_fd :=_fg .Value ;
_b .PartNameAttr =_fd ;continue ;};};for {_dd ,_ag :=d .Token ();if _ag !=nil {return _e .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_ag );};if _acc ,_ga :=_dd .(_a .EndElement );
_ga &&_acc .Name ==start .Name {break ;};};return nil ;};func NewCT_Types ()*CT_Types {_cc :=&CT_Types {};return _cc };

// Validate validates the CT_Default and its children
func (_gf *CT_Default )Validate ()error {return _gf .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};func NewTypes ()*Types {_gc :=&Types {};_gc .CT_Types =*NewCT_Types ();return _gc };var ST_ContentTypePatternRe =_fa .MustCompile (ST_ContentTypePattern );
func init (){_ac .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );
_ac .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );
_ac .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );
_ac .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );
_ac .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );
_ac .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );
};