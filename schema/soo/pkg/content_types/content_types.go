//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_f "encoding/xml";_dc "fmt";_fce "github.com/unidoc/unioffice";_fc "github.com/unidoc/unioffice/common/logger";_d "regexp";);type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};func (_e *CT_Default )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_dc .Sprintf ("\u0025\u0076",_e .ExtensionAttr )});
start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_dc .Sprintf ("\u0025\u0076",_e .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_a *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_a .ExtensionAttr ){return _dc .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_a .ExtensionAttr );
};if !ST_ContentTypePatternRe .MatchString (_a .ContentTypeAttr ){return _dc .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_a .ContentTypeAttr );
};return nil ;};

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_bf *CT_Types )ValidateWithPath (path string )error {for _gd ,_gfe :=range _bf .Default {if _egb :=_gfe .ValidateWithPath (_dc .Sprintf ("\u0025\u0073\u002f\u0044\u0065\u0066\u0061\u0075\u006ct\u005b\u0025\u0064\u005d",path ,_gd ));_egb !=nil {return _egb ;
};};for _bg ,_gg :=range _bf .Override {if _dge :=_gg .ValidateWithPath (_dc .Sprintf ("\u0025s\u002fO\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u005b\u0025\u0064\u005d",path ,_bg ));_dge !=nil {return _dge ;};};return nil ;};func (_dab *Override )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_dab .CT_Override =*NewCT_Override ();
for _ ,_de :=range start .Attr {if _de .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_bgf ,_ef :=_de .Value ,error (nil );if _ef !=nil {return _ef ;};_dab .ContentTypeAttr =_bgf ;continue ;};if _de .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_bcc ,_gad :=_de .Value ,error (nil );
if _gad !=nil {return _gad ;};_dab .PartNameAttr =_bcc ;continue ;};};for {_bdd ,_cge :=d .Token ();if _cge !=nil {return _dc .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_cge );};if _agg ,_bdcb :=_bdd .(_f .EndElement );
_bdcb &&_agg .Name ==start .Name {break ;};};return nil ;};func NewDefault ()*Default {_fac :=&Default {};_fac .CT_Default =*NewCT_Default ();return _fac };

// Validate validates the CT_Override and its children
func (_fbe *CT_Override )Validate ()error {return _fbe .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func (_c *CT_Default )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_c .ExtensionAttr ="\u0078\u006d\u006c";
_c .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_ed :=range start .Attr {if _ed .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_eg ,_dd :=_ed .Value ,error (nil );if _dd !=nil {return _dd ;
};_c .ExtensionAttr =_eg ;continue ;};if _ed .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_db ,_fa :=_ed .Value ,error (nil );if _fa !=nil {return _fa ;};_c .ContentTypeAttr =_db ;continue ;};};for {_gf ,_ff :=d .Token ();
if _ff !=nil {return _dc .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_ff );};if _dbg ,_fe :=_gf .(_f .EndElement );_fe &&_dbg .Name ==start .Name {break ;};};return nil ;
};func NewCT_Override ()*CT_Override {_bc :=&CT_Override {};_bc .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _bc ;};

// Validate validates the CT_Types and its children
func (_ce *CT_Types )Validate ()error {return _ce .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};var ST_ExtensionPatternRe =_d .MustCompile (ST_ExtensionPattern );

// Validate validates the Types and its children
func (_dga *Types )Validate ()error {return _dga .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};type Default struct{CT_Default };type Override struct{CT_Override };

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_eab *Types )ValidateWithPath (path string )error {if _gfaf :=_eab .CT_Types .ValidateWithPath (path );_gfaf !=nil {return _gfaf ;};return nil ;};func (_ad *Default )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {return _ad .CT_Default .MarshalXML (e ,start );
};type Types struct{CT_Types };

// Validate validates the CT_Default and its children
func (_ffc *CT_Default )Validate ()error {return _ffc .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};var ST_ContentTypePatternRe =_d .MustCompile (ST_ContentTypePattern );func (_fff *Override )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {return _fff .CT_Override .MarshalXML (e ,start );
};func NewCT_Types ()*CT_Types {_gff :=&CT_Types {};return _gff };func (_bb *CT_Override )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_dc .Sprintf ("\u0025\u0076",_bb .ContentTypeAttr )});
start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_dc .Sprintf ("\u0025\u0076",_bb .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};func NewCT_Default ()*CT_Default {_bd :=&CT_Default {};_bd .ExtensionAttr ="\u0078\u006d\u006c";_bd .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _bd ;};func (_ea *Default )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_ea .CT_Default =*NewCT_Default ();
for _ ,_aef :=range start .Attr {if _aef .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_gc ,_edf :=_aef .Value ,error (nil );if _edf !=nil {return _edf ;};_ea .ExtensionAttr =_gc ;continue ;};if _aef .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_aeg ,_dda :=_aef .Value ,error (nil );
if _dda !=nil {return _dda ;};_ea .ContentTypeAttr =_aeg ;continue ;};};for {_dbc ,_bafe :=d .Token ();if _bafe !=nil {return _dc .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_bafe );
};if _abf ,_dce :=_dbc .(_f .EndElement );_dce &&_abf .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Override and its children
func (_dged *Override )Validate ()error {return _dged .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func NewOverride ()*Override {_df :=&Override {};_df .CT_Override =*NewCT_Override ();return _df };

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_bfca *Override )ValidateWithPath (path string )error {if _dgd :=_bfca .CT_Override .ValidateWithPath (path );_dgd !=nil {return _dgd ;};return nil ;};type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};func NewTypes ()*Types {_ee :=&Types {};
_ee .CT_Types =*NewCT_Types ();return _ee };const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_ffg *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_ffg .ContentTypeAttr ){return _dc .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_ffg .ContentTypeAttr );
};return nil ;};func (_cc *Types )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_cc .CT_Types =*NewCT_Types ();_gee :for {_cgb ,_eb :=d .Token ();if _eb !=nil {return _eb ;};switch _gef :=_cgb .(type ){case _f .StartElement :switch _gef .Name {case _f .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_gefd :=NewDefault ();
if _feg :=d .DecodeElement (_gefd ,&_gef );_feg !=nil {return _feg ;};_cc .Default =append (_cc .Default ,_gefd );case _f .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_geb :=NewOverride ();
if _bba :=d .DecodeElement (_geb ,&_gef );_bba !=nil {return _bba ;};_cc .Override =append (_cc .Override ,_geb );default:_fc .Log .Debug ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_gef .Name );
if _ccg :=d .Skip ();_ccg !=nil {return _ccg ;};};case _f .EndElement :break _gee ;case _f .CharData :};};return nil ;};func (_be *CT_Types )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {e .EncodeToken (start );if _be .Default !=nil {_ddg :=_f .StartElement {Name :_f .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};
for _ ,_ffga :=range _be .Default {e .EncodeElement (_ffga ,_ddg );};};if _be .Override !=nil {_da :=_f .StartElement {Name :_f .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};for _ ,_baf :=range _be .Override {e .EncodeElement (_baf ,_da );
};};e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};func (_dag *CT_Types )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_aab :for {_ddc ,_bdb :=d .Token ();if _bdb !=nil {return _bdb ;};switch _dg :=_ddc .(type ){case _f .StartElement :switch _dg .Name {case _f .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_ge :=NewDefault ();
if _af :=d .DecodeElement (_ge ,&_dg );_af !=nil {return _af ;};_dag .Default =append (_dag .Default ,_ge );case _f .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_gfa :=NewOverride ();
if _cg :=d .DecodeElement (_gfa ,&_dg );_cg !=nil {return _cg ;};_dag .Override =append (_dag .Override ,_gfa );default:_fc .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_dg .Name );
if _ae :=d .Skip ();_ae !=nil {return _ae ;};};case _f .EndElement :break _aab ;case _f .CharData :};};return nil ;};func (_cd *Types )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});
start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0054\u0079\u0070e\u0073";return _cd .CT_Types .MarshalXML (e ,start );};

// Validate validates the Default and its children
func (_aac *Default )Validate ()error {return _aac .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};type CT_Types struct{Default []*Default ;Override []*Override ;};const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";
func (_dbd *CT_Override )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_dbd .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_ab :=range start .Attr {if _ab .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_bde ,_eda :=_ab .Value ,error (nil );
if _eda !=nil {return _eda ;};_dbd .ContentTypeAttr =_bde ;continue ;};if _ab .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_ga ,_fb :=_ab .Value ,error (nil );if _fb !=nil {return _fb ;};_dbd .PartNameAttr =_ga ;continue ;};};for {_ag ,_fbg :=d .Token ();
if _fbg !=nil {return _dc .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_fbg );};if _ca ,_ba :=_ag .(_f .EndElement );_ba &&_ca .Name ==start .Name {break ;};
};return nil ;};

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_dcg *Default )ValidateWithPath (path string )error {if _fbd :=_dcg .CT_Default .ValidateWithPath (path );_fbd !=nil {return _fbd ;};return nil ;};func init (){_fce .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );
_fce .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );
_fce .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );
_fce .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );
_fce .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );
_fce .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );
};