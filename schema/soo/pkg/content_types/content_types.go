//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_a "encoding/xml";_c "fmt";_ab "github.com/unidoc/unioffice/v2";_dg "github.com/unidoc/unioffice/v2/common/logger";_d "regexp";);func NewCT_Override ()*CT_Override {_eb :=&CT_Override {};_eb .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
return _eb ;};

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_dd *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_dd .ExtensionAttr ){return _c .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_dd .ExtensionAttr );
};if !ST_ContentTypePatternRe .MatchString (_dd .ContentTypeAttr ){return _c .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_dd .ContentTypeAttr );
};return nil ;};

// ValidateWithPath validates the CT_TypesChoice and its children, prefixing error messages with path
func (_cdb *CT_TypesChoice )ValidateWithPath (path string )error {if _cdb .Default !=nil {if _egd :=_cdb .Default .ValidateWithPath (path +"\u002f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");_egd !=nil {return _egd ;};};if _cdb .Override !=nil {if _afc :=_cdb .Override .ValidateWithPath (path +"\u002fO\u0076\u0065\u0072\u0072\u0069\u0064e");
_afc !=nil {return _afc ;};};return nil ;};func (_gac *Override )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_gac .CT_Override =*NewCT_Override ();for _ ,_ddc :=range start .Attr {if _ddc .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_agd :=_ddc .Value ;
_gac .ContentTypeAttr =_agd ;continue ;};if _ddc .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_bdcc :=_ddc .Value ;_gac .PartNameAttr =_bdcc ;continue ;};};for {_cf ,_gbf :=d .Token ();if _gbf !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_gbf );
};if _aba ,_cgge :=_cf .(_a .EndElement );_cgge &&_aba .Name ==start .Name {break ;};};return nil ;};func NewCT_TypesChoice ()*CT_TypesChoice {_bg :=&CT_TypesChoice {};return _bg };

// Validate validates the CT_Override and its children
func (_ca *CT_Override )Validate ()error {return _ca .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};

// Validate validates the CT_TypesChoice and its children
func (_cgag *CT_TypesChoice )Validate ()error {return _cgag .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0043h\u006f\u0069\u0063\u0065");};func NewOverride ()*Override {_efg :=&Override {};_efg .CT_Override =*NewCT_Override ();
return _efg };type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};func (_fgdg *Default )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return _fgdg .CT_Default .MarshalXML (e ,start );};type CT_TypesChoice struct{Default *Default ;
Override *Override ;};

// Validate validates the Default and its children
func (_ebb *Default )Validate ()error {return _ebb .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};func (_aeg *CT_Types )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_aff :for {_cdf ,_fgc :=d .Token ();if _fgc !=nil {return _fgc ;
};switch _dc :=_cdf .(type ){case _a .StartElement :switch _dc .Name {case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_ega :=NewCT_TypesChoice ();
if _bd :=d .DecodeElement (&_ega .Default ,&_dc );_bd !=nil {return _bd ;};_aeg .TypesChoice =append (_aeg .TypesChoice ,_ega );case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_dbf :=NewCT_TypesChoice ();
if _fgd :=d .DecodeElement (&_dbf .Override ,&_dc );_fgd !=nil {return _fgd ;};_aeg .TypesChoice =append (_aeg .TypesChoice ,_dbf );default:_dg .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_dc .Name );
if _ba :=d .Skip ();_ba !=nil {return _ba ;};};case _a .EndElement :break _aff ;case _a .CharData :};};return nil ;};type Override struct{CT_Override };

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_cb *Default )ValidateWithPath (path string )error {if _gg :=_cb .CT_Default .ValidateWithPath (path );_gg !=nil {return _gg ;};return nil ;};type CT_Types struct{TypesChoice []*CT_TypesChoice ;};const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";
type Default struct{CT_Default };func NewCT_Default ()*CT_Default {_da :=&CT_Default {};_da .ExtensionAttr ="\u0078\u006d\u006c";_da .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _da ;};type Types struct{CT_Types };
func NewTypes ()*Types {_ea :=&Types {};_ea .CT_Types =*NewCT_Types ();return _ea };const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";var ST_ContentTypePatternRe =_d .MustCompile (ST_ContentTypePattern );


// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_fea *Override )ValidateWithPath (path string )error {if _eeb :=_fea .CT_Override .ValidateWithPath (path );_eeb !=nil {return _eeb ;};return nil ;};var ST_ExtensionPatternRe =_d .MustCompile (ST_ExtensionPattern );

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_gef *Types )ValidateWithPath (path string )error {if _gbg :=_gef .CT_Types .ValidateWithPath (path );_gbg !=nil {return _gbg ;};return nil ;};

// Validate validates the Override and its children
func (_ed *Override )Validate ()error {return _ed .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func NewDefault ()*Default {_fe :=&Default {};_fe .CT_Default =*NewCT_Default ();return _fe };

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_gc *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_gc .ContentTypeAttr ){return _c .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_gc .ContentTypeAttr );
};return nil ;};func (_ee *CT_TypesChoice )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_fcb :=start ;switch start .Name {case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_ee .Default =NewDefault ();
if _dab :=d .DecodeElement (_ee .Default ,&_fcb );_dab !=nil {return _dab ;};case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_ee .Override =NewOverride ();
if _ef :=d .DecodeElement (_ee .Override ,&_fcb );_ef !=nil {return _ef ;};default:_dg .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0043\u0068o\u0069c\u0065\u0020\u0025\u0076",_fcb .Name );
if _ff :=d .Skip ();_ff !=nil {return _ff ;};};return nil ;};type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_fa *CT_Types )ValidateWithPath (path string )error {for _gb ,_abg :=range _fa .TypesChoice {if _adb :=_abg .ValidateWithPath (_c .Sprintf ("\u0025s\u002fT\u0079\u0070\u0065\u0073\u0043h\u006f\u0069c\u0065\u005b\u0025\u0064\u005d",path ,_gb ));_adb !=nil {return _adb ;
};};return nil ;};func (_be *CT_TypesChoice )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );if _be .Default !=nil {_bac :=_a .StartElement {Name :_a .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};e .EncodeElement (_be .Default ,_bac );
}else if _be .Override !=nil {_cga :=_a .StartElement {Name :_a .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};e .EncodeElement (_be .Override ,_cga );};e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func (_fcf *Default )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_fcf .CT_Default =*NewCT_Default ();
for _ ,_aca :=range start .Attr {if _aca .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_ce :=_aca .Value ;_fcf .ExtensionAttr =_ce ;continue ;};if _aca .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_bdc :=_aca .Value ;
_fcf .ContentTypeAttr =_bdc ;continue ;};};for {_ag ,_fcba :=d .Token ();if _fcba !=nil {return _c .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_fcba );};if _dda ,_ga :=_ag .(_a .EndElement );
_ga &&_dda .Name ==start .Name {break ;};};return nil ;};func (_bgd *Override )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return _bgd .CT_Override .MarshalXML (e ,start );};func (_fd *CT_Override )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_fd .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
for _ ,_fg :=range start .Attr {if _fg .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_bb :=_fg .Value ;_fd .ContentTypeAttr =_bb ;continue ;};if _fg .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_ebe :=_fg .Value ;
_fd .PartNameAttr =_ebe ;continue ;};};for {_bbe ,_ge :=d .Token ();if _ge !=nil {return _c .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_ge );};if _dag ,_cd :=_bbe .(_a .EndElement );
_cd &&_dag .Name ==start .Name {break ;};};return nil ;};func (_ac *CT_Override )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_c .Sprintf ("\u0025\u0076",_ac .ContentTypeAttr )});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_c .Sprintf ("\u0025\u0076",_ac .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });
return nil ;};

// Validate validates the CT_Types and its children
func (_gf *CT_Types )Validate ()error {return _gf .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};func (_bgf *Types )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0054\u0079\u0070e\u0073";return _bgf .CT_Types .MarshalXML (e ,start );};func (_cgg *CT_Default )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_cgg .ExtensionAttr ="\u0078\u006d\u006c";_cgg .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
for _ ,_f :=range start .Attr {if _f .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_db :=_f .Value ;_cgg .ExtensionAttr =_db ;continue ;};if _f .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_af :=_f .Value ;
_cgg .ContentTypeAttr =_af ;continue ;};};for {_eg ,_ad :=d .Token ();if _ad !=nil {return _c .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_ad );};if _b ,_fc :=_eg .(_a .EndElement );
_fc &&_b .Name ==start .Name {break ;};};return nil ;};

// Validate validates the CT_Default and its children
func (_fb *CT_Default )Validate ()error {return _fb .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};func (_cgf *Types )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_cgf .CT_Types =*NewCT_Types ();_cc :for {_cea ,_cggf :=d .Token ();
if _cggf !=nil {return _cggf ;};switch _cfd :=_cea .(type ){case _a .StartElement :switch _cfd .Name {case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_aa :=NewCT_TypesChoice ();
if _dce :=d .DecodeElement (&_aa .Default ,&_cfd );_dce !=nil {return _dce ;};_cgf .TypesChoice =append (_cgf .TypesChoice ,_aa );case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_dcc :=NewCT_TypesChoice ();
if _gba :=d .DecodeElement (&_dcc .Override ,&_cfd );_gba !=nil {return _gba ;};_cgf .TypesChoice =append (_cgf .TypesChoice ,_dcc );default:_dg .Log .Debug ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_cfd .Name );
if _ecf :=d .Skip ();_ecf !=nil {return _ecf ;};};case _a .EndElement :break _cc ;case _a .CharData :};};return nil ;};func NewCT_Types ()*CT_Types {_egf :=&CT_Types {};return _egf };func (_cg *CT_Default )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_c .Sprintf ("\u0025\u0076",_cg .ExtensionAttr )});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_c .Sprintf ("\u0025\u0076",_cg .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });
return nil ;};

// Validate validates the Types and its children
func (_gge *Types )Validate ()error {return _gge .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};func (_ae *CT_Types )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );if _ae .TypesChoice !=nil {for _ ,_adc :=range _ae .TypesChoice {_adc .MarshalXML (e ,_a .StartElement {});
};};e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func init (){_ab .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );
_ab .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );
_ab .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );
_ab .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );
_ab .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );
_ab .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );
};