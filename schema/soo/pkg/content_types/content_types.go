//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_e "encoding/xml";_b "fmt";_ff "github.com/unidoc/unioffice/v2";_f "github.com/unidoc/unioffice/v2/common/logger";_cg "regexp";);const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";


// Validate validates the CT_Types and its children
func (_bbc *CT_Types )Validate ()error {return _bbc .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};func (_ec *CT_Override )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_ec .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
for _ ,_ba :=range start .Attr {if _ba .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_bbb :=_ba .Value ;_ec .ContentTypeAttr =_bbb ;continue ;};if _ba .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_af :=_ba .Value ;
_ec .PartNameAttr =_af ;continue ;};};for {_cf ,_g :=d .Token ();if _g !=nil {return _b .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_g );};if _ecd ,_bfc :=_cf .(_e .EndElement );
_bfc &&_ecd .Name ==start .Name {break ;};};return nil ;};type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_aab *Default )ValidateWithPath (path string )error {if _ffe :=_aab .CT_Default .ValidateWithPath (path );_ffe !=nil {return _ffe ;};return nil ;};func (_ddd *CT_TypesChoice )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {e .EncodeToken (start );
if _ddd .Default !=nil {_be :=_e .StartElement {Name :_e .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};e .EncodeElement (_ddd .Default ,_be );}else if _ddd .Override !=nil {_ga :=_e .StartElement {Name :_e .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};
e .EncodeElement (_ddd .Override ,_ga );};e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_df *Default )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_df .CT_Default =*NewCT_Default ();for _ ,_fff :=range start .Attr {if _fff .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_fgc :=_fff .Value ;
_df .ExtensionAttr =_fgc ;continue ;};if _fff .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_eee :=_fff .Value ;_df .ContentTypeAttr =_eee ;continue ;};};for {_gag ,_aae :=d .Token ();if _aae !=nil {return _b .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_aae );
};if _cce ,_feb :=_gag .(_e .EndElement );_feb &&_cce .Name ==start .Name {break ;};};return nil ;};func (_gd *CT_Types )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_fe :for {_d ,_fd :=d .Token ();if _fd !=nil {return _fd ;};switch _dc :=_d .(type ){case _e .StartElement :switch _dc .Name {case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_bgc :=NewCT_TypesChoice ();
if _bfe :=d .DecodeElement (&_bgc .Default ,&_dc );_bfe !=nil {return _bfe ;};_gd .TypesChoice =append (_gd .TypesChoice ,_bgc );case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_eg :=NewCT_TypesChoice ();
if _bd :=d .DecodeElement (&_eg .Override ,&_dc );_bd !=nil {return _bd ;};_gd .TypesChoice =append (_gd .TypesChoice ,_eg );default:_f .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_dc .Name );
if _bag :=d .Skip ();_bag !=nil {return _bag ;};};case _e .EndElement :break _fe ;case _e .CharData :};};return nil ;};func (_eefa *Override )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {return _eefa .CT_Override .MarshalXML (e ,start );};


// Validate validates the CT_Default and its children
func (_cc *CT_Default )Validate ()error {return _cc .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};func (_eb *CT_Default )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_b .Sprintf ("\u0025\u0076",_eb .ExtensionAttr )});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_b .Sprintf ("\u0025\u0076",_eb .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });
return nil ;};type Default struct{CT_Default };

// Validate validates the CT_TypesChoice and its children
func (_ege *CT_TypesChoice )Validate ()error {return _ege .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0043h\u006f\u0069\u0063\u0065");};

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_bf *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_bf .ExtensionAttr ){return _b .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_bf .ExtensionAttr );
};if !ST_ContentTypePatternRe .MatchString (_bf .ContentTypeAttr ){return _b .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_bf .ContentTypeAttr );
};return nil ;};type Types struct{CT_Types };func NewCT_Types ()*CT_Types {_ab :=&CT_Types {};return _ab };func NewCT_Override ()*CT_Override {_fa :=&CT_Override {};_fa .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
return _fa ;};func (_bg *CT_Default )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_bg .ExtensionAttr ="\u0078\u006d\u006c";_bg .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_ed :=range start .Attr {if _ed .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_bb :=_ed .Value ;
_bg .ExtensionAttr =_bb ;continue ;};if _ed .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_fg :=_ed .Value ;_bg .ContentTypeAttr =_fg ;continue ;};};for {_cb ,_ag :=d .Token ();if _ag !=nil {return _b .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_ag );
};if _bgd ,_ce :=_cb .(_e .EndElement );_ce &&_bgd .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Types and its children
func (_dbf *Types )Validate ()error {return _dbf .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};func (_cef *Default )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {return _cef .CT_Default .MarshalXML (e ,start );};func NewDefault ()*Default {_ea :=&Default {};
_ea .CT_Default =*NewCT_Default ();return _ea };

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_dec *Override )ValidateWithPath (path string )error {if _cfcb :=_dec .CT_Override .ValidateWithPath (path );_cfcb !=nil {return _cfcb ;};return nil ;};

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_ac *CT_Types )ValidateWithPath (path string )error {for _gbd ,_agd :=range _ac .TypesChoice {if _dd :=_agd .ValidateWithPath (_b .Sprintf ("\u0025s\u002fT\u0079\u0070\u0065\u0073\u0043h\u006f\u0069c\u0065\u005b\u0025\u0064\u005d",path ,_gbd ));_dd !=nil {return _dd ;
};};return nil ;};

// ValidateWithPath validates the CT_TypesChoice and its children, prefixing error messages with path
func (_ef *CT_TypesChoice )ValidateWithPath (path string )error {if _ef .Default !=nil {if _bbg :=_ef .Default .ValidateWithPath (path +"\u002f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");_bbg !=nil {return _bbg ;};};if _ef .Override !=nil {if _ffa :=_ef .Override .ValidateWithPath (path +"\u002fO\u0076\u0065\u0072\u0072\u0069\u0064e");
_ffa !=nil {return _ffa ;};};return nil ;};func (_fdg *CT_TypesChoice )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_bab :=start ;switch start .Name {case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_fdg .Default =NewDefault ();
if _gba :=d .DecodeElement (_fdg .Default ,&_bab );_gba !=nil {return _gba ;};case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_fdg .Override =NewOverride ();
if _cbb :=d .DecodeElement (_fdg .Override ,&_bab );_cbb !=nil {return _cbb ;};default:_f .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0043\u0068o\u0069c\u0065\u0020\u0025\u0076",_bab .Name );
if _cd :=d .Skip ();_cd !=nil {return _cd ;};};return nil ;};func NewCT_TypesChoice ()*CT_TypesChoice {_cfc :=&CT_TypesChoice {};return _cfc };

// Validate validates the Default and its children
func (_gdd *Default )Validate ()error {return _gdd .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};type Override struct{CT_Override };func (_eef *CT_Types )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {e .EncodeToken (start );
if _eef .TypesChoice !=nil {for _ ,_gg :=range _eef .TypesChoice {_gg .MarshalXML (e ,_e .StartElement {});};};e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};var ST_ContentTypePatternRe =_cg .MustCompile (ST_ContentTypePattern );func (_ffg *CT_Override )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_b .Sprintf ("\u0025\u0076",_ffg .ContentTypeAttr )});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_b .Sprintf ("\u0025\u0076",_ffg .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });
return nil ;};func (_fag *Types )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_fag .CT_Types =*NewCT_Types ();_edf :for {_fdd ,_afb :=d .Token ();if _afb !=nil {return _afb ;};switch _bbgd :=_fdd .(type ){case _e .StartElement :switch _bbgd .Name {case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_ece :=NewCT_TypesChoice ();
if _dfc :=d .DecodeElement (&_ece .Default ,&_bbgd );_dfc !=nil {return _dfc ;};_fag .TypesChoice =append (_fag .TypesChoice ,_ece );case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_abd :=NewCT_TypesChoice ();
if _ccb :=d .DecodeElement (&_abd .Override ,&_bbgd );_ccb !=nil {return _ccb ;};_fag .TypesChoice =append (_fag .TypesChoice ,_abd );default:_f .Log .Debug ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_bbgd .Name );
if _db :=d .Skip ();_db !=nil {return _db ;};};case _e .EndElement :break _edf ;case _e .CharData :};};return nil ;};

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_gb *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_gb .ContentTypeAttr ){return _b .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_gb .ContentTypeAttr );
};return nil ;};func NewOverride ()*Override {_bfce :=&Override {};_bfce .CT_Override =*NewCT_Override ();return _bfce ;};func (_ffae *Override )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_ffae .CT_Override =*NewCT_Override ();for _ ,_fdb :=range start .Attr {if _fdb .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_eac :=_fdb .Value ;
_ffae .ContentTypeAttr =_eac ;continue ;};if _fdb .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_cced :=_fdb .Value ;_ffae .PartNameAttr =_cced ;continue ;};};for {_de ,_bdb :=d .Token ();if _bdb !=nil {return _b .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_bdb );
};if _eda ,_ae :=_de .(_e .EndElement );_ae &&_eda .Name ==start .Name {break ;};};return nil ;};func (_fab *Types )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0054\u0079\u0070e\u0073";return _fab .CT_Types .MarshalXML (e ,start );};var ST_ExtensionPatternRe =_cg .MustCompile (ST_ExtensionPattern );type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";


// Validate validates the Override and its children
func (_bfeb *Override )Validate ()error {return _bfeb .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};type CT_TypesChoice struct{Default *Default ;Override *Override ;};

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_def *Types )ValidateWithPath (path string )error {if _dfe :=_def .CT_Types .ValidateWithPath (path );_dfe !=nil {return _dfe ;};return nil ;};func NewCT_Default ()*CT_Default {_a :=&CT_Default {};_a .ExtensionAttr ="\u0078\u006d\u006c";_a .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";
return _a ;};

// Validate validates the CT_Override and its children
func (_aa *CT_Override )Validate ()error {return _aa .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};type CT_Types struct{TypesChoice []*CT_TypesChoice ;};func NewTypes ()*Types {_cefa :=&Types {};_cefa .CT_Types =*NewCT_Types ();
return _cefa };func init (){_ff .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );
_ff .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );
_ff .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );
_ff .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );
_ff .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );
_ff .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );
};