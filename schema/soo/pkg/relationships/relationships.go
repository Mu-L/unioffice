//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package relationships ;import (_d "encoding/xml";_c "fmt";_ca "github.com/unidoc/unioffice/v2";_g "github.com/unidoc/unioffice/v2/common/logger";);func (_gdcb *CT_Relationships )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_eae :for {_dee ,_gce :=d .Token ();
if _gce !=nil {return _gce ;};switch _cd :=_dee .(type ){case _d .StartElement :switch _cd .Name {case _d .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s",Local :"\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070"}:_aab :=NewRelationship ();
if _gdg :=d .DecodeElement (_aab ,&_cd );_gdg !=nil {return _gdg ;};_gdcb .Relationship =append (_gdcb .Relationship ,_aab );default:_g .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073\u0020\u0025v",_cd .Name );
if _df :=d .Skip ();_df !=nil {return _df ;};};case _d .EndElement :break _eae ;case _d .CharData :};};return nil ;};func (_cb *CT_Relationships )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {e .EncodeToken (start );if _cb .Relationship !=nil {_cfa :=_d .StartElement {Name :_d .Name {Local :"\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070"}};
for _ ,_gdc :=range _cb .Relationship {e .EncodeElement (_gdc ,_cfa );};};e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the CT_Relationship and its children
func (_da *CT_Relationship )Validate ()error {return _da .ValidateWithPath ("\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070");};func (_ec *CT_Relationship )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _ec .TargetModeAttr !=ST_TargetModeUnset {_ff ,_caa :=_ec .TargetModeAttr .MarshalXMLAttr (_d .Name {Local :"\u0054\u0061\u0072\u0067\u0065\u0074\u004d\u006f\u0064\u0065"});
if _caa !=nil {return _caa ;};start .Attr =append (start .Attr ,_ff );};start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0054\u0061\u0072\u0067\u0065\u0074"},Value :_c .Sprintf ("\u0025\u0076",_ec .TargetAttr )});start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0054\u0079\u0070\u0065"},Value :_c .Sprintf ("\u0025\u0076",_ec .TypeAttr )});
start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0049\u0064"},Value :_c .Sprintf ("\u0025\u0076",_ec .IdAttr )});e .EncodeElement (_ec .Content ,start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the Relationships and its children
func (_eg *Relationships )Validate ()error {return _eg .ValidateWithPath ("\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073");};type Relationships struct{CT_Relationships };func (_gba *ST_TargetMode )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_bce ,_ega :=d .Token ();
if _ega !=nil {return _ega ;};if _gcb ,_dfed :=_bce .(_d .EndElement );_dfed &&_gcb .Name ==start .Name {*_gba =1;return nil ;};if _ged ,_ffb :=_bce .(_d .CharData );!_ffb {return _c .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_bce );
}else {switch string (_ged ){case "":*_gba =0;case "\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c":*_gba =1;case "\u0049\u006e\u0074\u0065\u0072\u006e\u0061\u006c":*_gba =2;};};_bce ,_ega =d .Token ();if _ega !=nil {return _ega ;};if _dae ,_dg :=_bce .(_d .EndElement );
_dg &&_dae .Name ==start .Name {return nil ;};return _c .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_bce );};type ST_TargetMode byte ;

// Validate validates the CT_Relationships and its children
func (_bd *CT_Relationships )Validate ()error {return _bd .ValidateWithPath ("\u0043\u0054_\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073");};func (_dd *CT_Relationship )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for _ ,_cg :=range start .Attr {if _cg .Name .Local =="\u0054\u0061\u0072\u0067\u0065\u0074\u004d\u006f\u0064\u0065"{_dd .TargetModeAttr .UnmarshalXMLAttr (_cg );
continue ;};if _cg .Name .Local =="\u0054\u0061\u0072\u0067\u0065\u0074"{_cf :=_cg .Value ;_dd .TargetAttr =_cf ;continue ;};if _cg .Name .Local =="\u0054\u0079\u0070\u0065"{_ea :=_cg .Value ;_dd .TypeAttr =_ea ;continue ;};if _cg .Name .Local =="\u0049\u0064"{_gd :=_cg .Value ;
_dd .IdAttr =_gd ;continue ;};};for {_de ,_fg :=d .Token ();if _fg !=nil {return _c .Errorf ("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006c\u0061\u0074\u0069o\u006e\u0073\u0068i\u0070:\u0020\u0025\u0073",_fg );};if _fc ,_a :=_de .(_d .CharData );
_a {_dd .Content =string (_fc );};if _b ,_gc :=_de .(_d .EndElement );_gc &&_b .Name ==start .Name {break ;};};return nil ;};type CT_Relationships struct{Relationship []*Relationship ;};func NewRelationships ()*Relationships {_ada :=&Relationships {};_ada .CT_Relationships =*NewCT_Relationships ();
return _ada ;};func (_cce ST_TargetMode )ValidateWithPath (path string )error {switch _cce {case 0,1,2:default:return _c .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_cce ));
};return nil ;};func NewCT_Relationships ()*CT_Relationships {_aa :=&CT_Relationships {};return _aa };

// Validate validates the Relationship and its children
func (_bdg *Relationship )Validate ()error {return _bdg .ValidateWithPath ("\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070");};func (_acd ST_TargetMode )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {return e .EncodeElement (_acd .String (),start );
};func (_fcd *Relationship )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {return _fcd .CT_Relationship .MarshalXML (e ,start );};

// ValidateWithPath validates the CT_Relationships and its children, prefixing error messages with path
func (_bg *CT_Relationships )ValidateWithPath (path string )error {for _ad ,_bgg :=range _bg .Relationship {if _bcc :=_bgg .ValidateWithPath (_c .Sprintf ("\u0025\u0073\u002f\u0052el\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u005b\u0025\u0064\u005d",path ,_ad ));
_bcc !=nil {return _bcc ;};};return nil ;};

// ValidateWithPath validates the Relationships and its children, prefixing error messages with path
func (_ebf *Relationships )ValidateWithPath (path string )error {if _bfd :=_ebf .CT_Relationships .ValidateWithPath (path );_bfd !=nil {return _bfd ;};return nil ;};func (_ece *ST_TargetMode )UnmarshalXMLAttr (attr _d .Attr )error {switch attr .Value {case "":*_ece =0;
case "\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c":*_ece =1;case "\u0049\u006e\u0074\u0065\u0072\u006e\u0061\u006c":*_ece =2;};return nil ;};func (_ag ST_TargetMode )String ()string {switch _ag {case 0:return "";case 1:return "\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c";
case 2:return "\u0049\u006e\u0074\u0065\u0072\u006e\u0061\u006c";};return "";};func (_bceb ST_TargetMode )Validate ()error {return _bceb .ValidateWithPath ("")};func NewCT_Relationship ()*CT_Relationship {_e :=&CT_Relationship {};return _e };func (_ced *Relationship )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_ced .CT_Relationship =*NewCT_Relationship ();
for _ ,_ed :=range start .Attr {if _ed .Name .Local =="\u0054\u0061\u0072\u0067\u0065\u0074\u004d\u006f\u0064\u0065"{_ced .TargetModeAttr .UnmarshalXMLAttr (_ed );continue ;};if _ed .Name .Local =="\u0054\u0061\u0072\u0067\u0065\u0074"{_bcca :=_ed .Value ;
_ced .TargetAttr =_bcca ;continue ;};if _ed .Name .Local =="\u0054\u0079\u0070\u0065"{_cgc :=_ed .Value ;_ced .TypeAttr =_cgc ;continue ;};if _ed .Name .Local =="\u0049\u0064"{_eb :=_ed .Value ;_ced .IdAttr =_eb ;continue ;};};for {_fff ,_ab :=d .Token ();
if _ab !=nil {return _c .Errorf ("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u003a\u0020\u0025\u0073",_ab );};if _ecg ,_fa :=_fff .(_d .EndElement );_fa &&_ecg .Name ==start .Name {break ;
};};return nil ;};func (_cef ST_TargetMode )MarshalXMLAttr (name _d .Name )(_d .Attr ,error ){_cge :=_d .Attr {};_cge .Name =name ;switch _cef {case ST_TargetModeUnset :_cge .Value ="";case ST_TargetModeExternal :_cge .Value ="\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c";
case ST_TargetModeInternal :_cge .Value ="\u0049\u006e\u0074\u0065\u0072\u006e\u0061\u006c";};return _cge ,nil ;};

// ValidateWithPath validates the CT_Relationship and its children, prefixing error messages with path
func (_bc *CT_Relationship )ValidateWithPath (path string )error {if _ga :=_bc .TargetModeAttr .ValidateWithPath (path +"\u002fT\u0061r\u0067\u0065\u0074\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072");_ga !=nil {return _ga ;};return nil ;};type CT_Relationship struct{TargetModeAttr ST_TargetMode ;
TargetAttr string ;TypeAttr string ;IdAttr string ;Content string ;};const (ST_TargetModeUnset ST_TargetMode =0;ST_TargetModeExternal ST_TargetMode =1;ST_TargetModeInternal ST_TargetMode =2;);func (_afb *Relationships )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s"});
start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073";return _afb .CT_Relationships .MarshalXML (e ,start );};func (_bcg *Relationships )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_bcg .CT_Relationships =*NewCT_Relationships ();
_cc :for {_be ,_eaa :=d .Token ();if _eaa !=nil {return _eaa ;};switch _fb :=_be .(type ){case _d .StartElement :switch _fb .Name {case _d .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s",Local :"\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070"}:_bf :=NewRelationship ();
if _cbf :=d .DecodeElement (_bf ,&_fb );_cbf !=nil {return _cbf ;};_bcg .Relationship =append (_bcg .Relationship ,_bf );default:_g .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0052\u0065\u006c\u0061t\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073 \u0025\u0076",_fb .Name );
if _ac :=d .Skip ();_ac !=nil {return _ac ;};};case _d .EndElement :break _cc ;case _d .CharData :};};return nil ;};type Relationship struct{CT_Relationship };

// ValidateWithPath validates the Relationship and its children, prefixing error messages with path
func (_dfe *Relationship )ValidateWithPath (path string )error {if _ae :=_dfe .CT_Relationship .ValidateWithPath (path );_ae !=nil {return _ae ;};return nil ;};func NewRelationship ()*Relationship {_ge :=&Relationship {};_ge .CT_Relationship =*NewCT_Relationship ();
return _ge ;};func init (){_ca .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s","\u0043\u0054_\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073",NewCT_Relationships );
_ca .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s","\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070",NewCT_Relationship );
_ca .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s","\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073",NewRelationships );
_ca .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s","\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070",NewRelationship );
};