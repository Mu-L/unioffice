//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package relationships ;import (_c "encoding/xml";_fa "fmt";_ce "github.com/unidoc/unioffice/v2";_fe "github.com/unidoc/unioffice/v2/common/logger";);

// Validate validates the Relationships and its children
func (_bcf *Relationships )Validate ()error {return _bcf .ValidateWithPath ("\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073");};func (_ae *CT_Relationships )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {e .EncodeToken (start );
if _ae .Relationship !=nil {_fd :=_c .StartElement {Name :_c .Name {Local :"\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070"}};for _ ,_gd :=range _ae .Relationship {e .EncodeElement (_gd ,_fd );};};e .EncodeToken (_c .EndElement {Name :start .Name });
return nil ;};func (_agb ST_TargetMode )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {return e .EncodeElement (_agb .String (),start );};type ST_TargetMode byte ;func (_ba *CT_Relationships )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_eed :for {_da ,_gdd :=d .Token ();
if _gdd !=nil {return _gdd ;};switch _fae :=_da .(type ){case _c .StartElement :switch _fae .Name {case _c .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s",Local :"\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070"}:_ebd :=NewRelationship ();
if _fc :=d .DecodeElement (_ebd ,&_fae );_fc !=nil {return _fc ;};_ba .Relationship =append (_ba .Relationship ,_ebd );default:_fe .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073\u0020\u0025v",_fae .Name );
if _cg :=d .Skip ();_cg !=nil {return _cg ;};};case _c .EndElement :break _eed ;case _c .CharData :};};return nil ;};

// Validate validates the Relationship and its children
func (_eeg *Relationship )Validate ()error {return _eeg .ValidateWithPath ("\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070");};type CT_Relationship struct{TargetModeAttr ST_TargetMode ;TargetAttr string ;TypeAttr string ;IdAttr string ;
Content string ;};func (_eg *Relationships )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_eg .CT_Relationships =*NewCT_Relationships ();_db :for {_bca ,_faee :=d .Token ();if _faee !=nil {return _faee ;};switch _fbe :=_bca .(type ){case _c .StartElement :switch _fbe .Name {case _c .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s",Local :"\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070"}:_dbf :=NewRelationship ();
if _cec :=d .DecodeElement (_dbf ,&_fbe );_cec !=nil {return _cec ;};_eg .Relationship =append (_eg .Relationship ,_dbf );default:_fe .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0052\u0065\u006c\u0061t\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073 \u0025\u0076",_fbe .Name );
if _df :=d .Skip ();_df !=nil {return _df ;};};case _c .EndElement :break _db ;case _c .CharData :};};return nil ;};func (_bb *ST_TargetMode )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_cce ,_bbc :=d .Token ();if _bbc !=nil {return _bbc ;
};if _cfd ,_cdb :=_cce .(_c .EndElement );_cdb &&_cfd .Name ==start .Name {*_bb =1;return nil ;};if _aab ,_ga :=_cce .(_c .CharData );!_ga {return _fa .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_cce );
}else {switch string (_aab ){case "":*_bb =0;case "\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c":*_bb =1;case "\u0049\u006e\u0074\u0065\u0072\u006e\u0061\u006c":*_bb =2;};};_cce ,_bbc =d .Token ();if _bbc !=nil {return _bbc ;};if _edg ,_cbd :=_cce .(_c .EndElement );
_cbd &&_edg .Name ==start .Name {return nil ;};return _fa .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_cce );};func (_dfc *ST_TargetMode )UnmarshalXMLAttr (attr _c .Attr )error {switch attr .Value {case "":*_dfc =0;
case "\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c":*_dfc =1;case "\u0049\u006e\u0074\u0065\u0072\u006e\u0061\u006c":*_dfc =2;};return nil ;};type CT_Relationships struct{Relationship []*Relationship ;};func NewCT_Relationship ()*CT_Relationship {_e :=&CT_Relationship {};
return _e };type Relationships struct{CT_Relationships };func (_fabd ST_TargetMode )Validate ()error {return _fabd .ValidateWithPath ("")};func (_aaa *Relationship )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {return _aaa .CT_Relationship .MarshalXML (e ,start );
};func (_cc ST_TargetMode )MarshalXMLAttr (name _c .Name )(_c .Attr ,error ){_bcc :=_c .Attr {};_bcc .Name =name ;switch _cc {case ST_TargetModeUnset :_bcc .Value ="";case ST_TargetModeExternal :_bcc .Value ="\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c";
case ST_TargetModeInternal :_bcc .Value ="\u0049\u006e\u0074\u0065\u0072\u006e\u0061\u006c";};return _bcc ,nil ;};

// Validate validates the CT_Relationships and its children
func (_gg *CT_Relationships )Validate ()error {return _gg .ValidateWithPath ("\u0043\u0054_\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073");};func NewRelationship ()*Relationship {_fec :=&Relationship {};_fec .CT_Relationship =*NewCT_Relationship ();
return _fec ;};func NewRelationships ()*Relationships {_fdb :=&Relationships {};_fdb .CT_Relationships =*NewCT_Relationships ();return _fdb ;};

// Validate validates the CT_Relationship and its children
func (_bg *CT_Relationship )Validate ()error {return _bg .ValidateWithPath ("\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070");};func (_ed *CT_Relationship )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for _ ,_b :=range start .Attr {if _b .Name .Local =="\u0054\u0061\u0072\u0067\u0065\u0074\u004d\u006f\u0064\u0065"{_ed .TargetModeAttr .UnmarshalXMLAttr (_b );
continue ;};if _b .Name .Local =="\u0054\u0061\u0072\u0067\u0065\u0074"{_fab :=_b .Value ;_ed .TargetAttr =_fab ;continue ;};if _b .Name .Local =="\u0054\u0079\u0070\u0065"{_g :=_b .Value ;_ed .TypeAttr =_g ;continue ;};if _b .Name .Local =="\u0049\u0064"{_de :=_b .Value ;
_ed .IdAttr =_de ;continue ;};};for {_eb ,_fg :=d .Token ();if _fg !=nil {return _fa .Errorf ("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006c\u0061\u0074\u0069o\u006e\u0073\u0068i\u0070:\u0020\u0025\u0073",_fg );};if _fba ,_ag :=_eb .(_c .CharData );
_ag {_ed .Content =string (_fba );};if _ad ,_cb :=_eb .(_c .EndElement );_cb &&_ad .Name ==start .Name {break ;};};return nil ;};func (_bcg *Relationships )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073";return _bcg .CT_Relationships .MarshalXML (e ,start );};const (ST_TargetModeUnset ST_TargetMode =0;ST_TargetModeExternal ST_TargetMode =1;ST_TargetModeInternal ST_TargetMode =2;
);func (_cd *Relationship )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_cd .CT_Relationship =*NewCT_Relationship ();for _ ,_cf :=range start .Attr {if _cf .Name .Local =="\u0054\u0061\u0072\u0067\u0065\u0074\u004d\u006f\u0064\u0065"{_cd .TargetModeAttr .UnmarshalXMLAttr (_cf );
continue ;};if _cf .Name .Local =="\u0054\u0061\u0072\u0067\u0065\u0074"{_cba :=_cf .Value ;_cd .TargetAttr =_cba ;continue ;};if _cf .Name .Local =="\u0054\u0079\u0070\u0065"{_cbf :=_cf .Value ;_cd .TypeAttr =_cbf ;continue ;};if _cf .Name .Local =="\u0049\u0064"{_fee :=_cf .Value ;
_cd .IdAttr =_fee ;continue ;};};for {_be ,_cea :=d .Token ();if _cea !=nil {return _fa .Errorf ("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u003a\u0020\u0025\u0073",_cea );};if _fea ,_gf :=_be .(_c .EndElement );
_gf &&_fea .Name ==start .Name {break ;};};return nil ;};type Relationship struct{CT_Relationship };

// ValidateWithPath validates the Relationship and its children, prefixing error messages with path
func (_gfe *Relationship )ValidateWithPath (path string )error {if _ca :=_gfe .CT_Relationship .ValidateWithPath (path );_ca !=nil {return _ca ;};return nil ;};func NewCT_Relationships ()*CT_Relationships {_ac :=&CT_Relationships {};return _ac };

// ValidateWithPath validates the CT_Relationships and its children, prefixing error messages with path
func (_bc *CT_Relationships )ValidateWithPath (path string )error {for _gb ,_adb :=range _bc .Relationship {if _fgd :=_adb .ValidateWithPath (_fa .Sprintf ("\u0025\u0073\u002f\u0052el\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u005b\u0025\u0064\u005d",path ,_gb ));
_fgd !=nil {return _fgd ;};};return nil ;};func (_cab ST_TargetMode )String ()string {switch _cab {case 0:return "";case 1:return "\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c";case 2:return "\u0049\u006e\u0074\u0065\u0072\u006e\u0061\u006c";};return "";
};func (_a *CT_Relationship )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _a .TargetModeAttr !=ST_TargetModeUnset {_d ,_ee :=_a .TargetModeAttr .MarshalXMLAttr (_c .Name {Local :"\u0054\u0061\u0072\u0067\u0065\u0074\u004d\u006f\u0064\u0065"});
if _ee !=nil {return _ee ;};start .Attr =append (start .Attr ,_d );};start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0054\u0061\u0072\u0067\u0065\u0074"},Value :_fa .Sprintf ("\u0025\u0076",_a .TargetAttr )});start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0054\u0079\u0070\u0065"},Value :_fa .Sprintf ("\u0025\u0076",_a .TypeAttr )});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0049\u0064"},Value :_fa .Sprintf ("\u0025\u0076",_a .IdAttr )});e .EncodeElement (_a .Content ,start );e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func (_cfde ST_TargetMode )ValidateWithPath (path string )error {switch _cfde {case 0,1,2:default:return _fa .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_cfde ));
};return nil ;};

// ValidateWithPath validates the Relationships and its children, prefixing error messages with path
func (_agf *Relationships )ValidateWithPath (path string )error {if _fdc :=_agf .CT_Relationships .ValidateWithPath (path );_fdc !=nil {return _fdc ;};return nil ;};

// ValidateWithPath validates the CT_Relationship and its children, prefixing error messages with path
func (_aa *CT_Relationship )ValidateWithPath (path string )error {if _fad :=_aa .TargetModeAttr .ValidateWithPath (path +"\u002fT\u0061r\u0067\u0065\u0074\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072");_fad !=nil {return _fad ;};return nil ;};func init (){_ce .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s","\u0043\u0054_\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073",NewCT_Relationships );
_ce .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s","\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070",NewCT_Relationship );
_ce .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s","\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073",NewRelationships );
_ce .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073h\u0069\u0070s","\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070",NewRelationship );
};