//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package sharedTypes ;import (_bf "encoding/xml";_bc "fmt";_a "regexp";_e "time";);func (_gaa *ST_ConformanceClass )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_gaa =0;case "\u0073\u0074\u0072\u0069\u0063\u0074":*_gaa =1;case "\u0074\u0072\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0061\u006c":*_gaa =2;
};return nil ;};

// ST_TwipsMeasure is a union type
type ST_TwipsMeasure struct{ST_UnsignedDecimalNumber *uint64 ;ST_PositiveUniversalMeasure *string ;};func (_bfa ST_AlgType )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_bed :=_bf .Attr {};_bed .Name =name ;switch _bfa {case ST_AlgTypeUnset :_bed .Value ="";
case ST_AlgTypeTypeAny :_bed .Value ="\u0074y\u0070\u0065\u0041\u006e\u0079";case ST_AlgTypeCustom :_bed .Value ="\u0063\u0075\u0073\u0074\u006f\u006d";};return _bed ,nil ;};func (_ed ST_CalendarType )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_geb :=_bf .Attr {};
_geb .Name =name ;switch _ed {case ST_CalendarTypeUnset :_geb .Value ="";case ST_CalendarTypeGregorian :_geb .Value ="\u0067r\u0065\u0067\u006f\u0072\u0069\u0061n";case ST_CalendarTypeGregorianUs :_geb .Value ="g\u0072\u0065\u0067\u006f\u0072\u0069\u0061\u006e\u0055\u0073";
case ST_CalendarTypeGregorianMeFrench :_geb .Value ="\u0067\u0072\u0065\u0067\u006f\u0072\u0069\u0061\u006e\u004d\u0065\u0046r\u0065\u006e\u0063\u0068";case ST_CalendarTypeGregorianArabic :_geb .Value ="\u0067r\u0065g\u006f\u0072\u0069\u0061\u006e\u0041\u0072\u0061\u0062\u0069\u0063";
case ST_CalendarTypeHijri :_geb .Value ="\u0068\u0069\u006ar\u0069";case ST_CalendarTypeHebrew :_geb .Value ="\u0068\u0065\u0062\u0072\u0065\u0077";case ST_CalendarTypeTaiwan :_geb .Value ="\u0074\u0061\u0069\u0077\u0061\u006e";case ST_CalendarTypeJapan :_geb .Value ="\u006a\u0061\u0070a\u006e";
case ST_CalendarTypeThai :_geb .Value ="\u0074\u0068\u0061\u0069";case ST_CalendarTypeKorea :_geb .Value ="\u006b\u006f\u0072e\u0061";case ST_CalendarTypeSaka :_geb .Value ="\u0073\u0061\u006b\u0061";case ST_CalendarTypeGregorianXlitEnglish :_geb .Value ="g\u0072e\u0067\u006f\u0072\u0069\u0061\u006e\u0058\u006ci\u0074\u0045\u006e\u0067li\u0073\u0068";
case ST_CalendarTypeGregorianXlitFrench :_geb .Value ="\u0067\u0072\u0065\u0067or\u0069\u0061\u006e\u0058\u006c\u0069\u0074\u0046\u0072\u0065\u006e\u0063\u0068";case ST_CalendarTypeNone :_geb .Value ="\u006e\u006f\u006e\u0065";};return _geb ,nil ;};func (_edc ST_CalendarType )Validate ()error {return _edc .ValidateWithPath ("")};
func (_bbg *ST_VerticalAlignRun )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_bbg =0;case "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065":*_bbg =1;case "s\u0075\u0070\u0065\u0072\u0073\u0063\u0072\u0069\u0070\u0074":*_bbg =2;
case "\u0073u\u0062\u0073\u0063\u0072\u0069\u0070t":*_bbg =3;};return nil ;};type ST_YAlign byte ;const (ST_OnOff1Unset ST_OnOff1 =0;ST_OnOff1On ST_OnOff1 =1;ST_OnOff1Off ST_OnOff1 =2;);func (_deb *ST_AlgType )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_ecd ,_fg :=d .Token ();
if _fg !=nil {return _fg ;};if _gc ,_fef :=_ecd .(_bf .EndElement );_fef &&_gc .Name ==start .Name {*_deb =1;return nil ;};if _fabe ,_ebf :=_ecd .(_bf .CharData );!_ebf {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_ecd );
}else {switch string (_fabe ){case "":*_deb =0;case "\u0074y\u0070\u0065\u0041\u006e\u0079":*_deb =1;case "\u0063\u0075\u0073\u0074\u006f\u006d":*_deb =2;};};_ecd ,_fg =d .Token ();if _fg !=nil {return _fg ;};if _dae ,_adc :=_ecd .(_bf .EndElement );_adc &&_dae .Name ==start .Name {return nil ;
};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_ecd );};var ST_PositivePercentagePatternRe =_a .MustCompile (ST_PositivePercentagePattern );
func (_aa ST_OnOff )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {e .EncodeToken (start );if _aa .Bool !=nil {e .EncodeToken (_bf .CharData (_bc .Sprintf ("\u0025\u0064",_fa (*_aa .Bool ))));};if _aa .ST_OnOff1 !=ST_OnOff1Unset {e .EncodeToken (_bf .CharData (_aa .ST_OnOff1 .String ()));
};return e .EncodeToken (_bf .EndElement {Name :start .Name });};const ST_UniversalMeasurePattern ="\u002d\u003f\u005b\u0030\u002d\u0039\u005d\u002b\u0028\u005c\u002e\u005b\u0030\u002d\u0039\u005d\u002b\u0029\u003f\u0028\u006d\u006d\u007c\u0063m\u007c\u0069\u006e\u007c\u0070t\u007c\u0070c\u007c\u0070\u0069\u0029";
func (_dda ST_VerticalAlignRun )Validate ()error {return _dda .ValidateWithPath ("")};func (_afd *ST_VerticalAlignRun )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_gbe ,_cba :=d .Token ();if _cba !=nil {return _cba ;};if _bba ,_aaa :=_gbe .(_bf .EndElement );
_aaa &&_bba .Name ==start .Name {*_afd =1;return nil ;};if _dcgc ,_cfe :=_gbe .(_bf .CharData );!_cfe {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_gbe );
}else {switch string (_dcgc ){case "":*_afd =0;case "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065":*_afd =1;case "s\u0075\u0070\u0065\u0072\u0073\u0063\u0072\u0069\u0070\u0074":*_afd =2;case "\u0073u\u0062\u0073\u0063\u0072\u0069\u0070t":*_afd =3;};
};_gbe ,_cba =d .Token ();if _cba !=nil {return _cba ;};if _aef ,_gbd :=_gbe .(_bf .EndElement );_gbd &&_aef .Name ==start .Name {return nil ;};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_gbe );
};func (_cea ST_XAlign )Validate ()error {return _cea .ValidateWithPath ("")};func (_gd *ST_CalendarType )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_ega ,_gac :=d .Token ();if _gac !=nil {return _gac ;};if _cd ,_dd :=_ega .(_bf .EndElement );
_dd &&_cd .Name ==start .Name {*_gd =1;return nil ;};if _da ,_ef :=_ega .(_bf .CharData );!_ef {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_ega );
}else {switch string (_da ){case "":*_gd =0;case "\u0067r\u0065\u0067\u006f\u0072\u0069\u0061n":*_gd =1;case "g\u0072\u0065\u0067\u006f\u0072\u0069\u0061\u006e\u0055\u0073":*_gd =2;case "\u0067\u0072\u0065\u0067\u006f\u0072\u0069\u0061\u006e\u004d\u0065\u0046r\u0065\u006e\u0063\u0068":*_gd =3;
case "\u0067r\u0065g\u006f\u0072\u0069\u0061\u006e\u0041\u0072\u0061\u0062\u0069\u0063":*_gd =4;case "\u0068\u0069\u006ar\u0069":*_gd =5;case "\u0068\u0065\u0062\u0072\u0065\u0077":*_gd =6;case "\u0074\u0061\u0069\u0077\u0061\u006e":*_gd =7;case "\u006a\u0061\u0070a\u006e":*_gd =8;
case "\u0074\u0068\u0061\u0069":*_gd =9;case "\u006b\u006f\u0072e\u0061":*_gd =10;case "\u0073\u0061\u006b\u0061":*_gd =11;case "g\u0072e\u0067\u006f\u0072\u0069\u0061\u006e\u0058\u006ci\u0074\u0045\u006e\u0067li\u0073\u0068":*_gd =12;case "\u0067\u0072\u0065\u0067or\u0069\u0061\u006e\u0058\u006c\u0069\u0074\u0046\u0072\u0065\u006e\u0063\u0068":*_gd =13;
case "\u006e\u006f\u006e\u0065":*_gd =14;};};_ega ,_gac =d .Token ();if _gac !=nil {return _gac ;};if _efg ,_fe :=_ega .(_bf .EndElement );_fe &&_efg .Name ==start .Name {return nil ;};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_ega );
};func (_gaf ST_CalendarType )ValidateWithPath (path string )error {switch _gaf {case 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_gaf ));
};return nil ;};func (_dbc ST_TrueFalse )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_cdd :=_bf .Attr {};_cdd .Name =name ;switch _dbc {case ST_TrueFalseUnset :_cdd .Value ="";case ST_TrueFalseT :_cdd .Value ="\u0074";case ST_TrueFalseF :_cdd .Value ="\u0066";
case ST_TrueFalseTrue :_cdd .Value ="\u0074\u0072\u0075\u0065";case ST_TrueFalseFalse :_cdd .Value ="\u0066\u0061\u006cs\u0065";};return _cdd ,nil ;};const (ST_AlgClassUnset ST_AlgClass =0;ST_AlgClassHash ST_AlgClass =1;ST_AlgClassCustom ST_AlgClass =2;
);func (_cc ST_AlgType )ValidateWithPath (path string )error {switch _cc {case 0,1,2:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_cc ));
};return nil ;};func (_ddaf ST_ConformanceClass )Validate ()error {return _ddaf .ValidateWithPath ("")};const (ST_AlgTypeUnset ST_AlgType =0;ST_AlgTypeTypeAny ST_AlgType =1;ST_AlgTypeCustom ST_AlgType =2;);func (_cgc ST_AlgClass )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_cgc .String (),start );
};var ST_PositiveFixedPercentagePatternRe =_a .MustCompile (ST_PositiveFixedPercentagePattern );func (_fge ST_OnOff1 )Validate ()error {return _fge .ValidateWithPath ("")};func (_fad ST_AlgClass )Validate ()error {return _fad .ValidateWithPath ("")};func FormatTime (t _e .Time )string {return t .Format (_cg )};
func FormatDate (t _e .Time )string {return t .Format (_ce )};func (_egac *ST_TrueFalseBlank )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_egac =0;case "\u0074":*_egac =1;case "\u0066":*_egac =2;case "\u0074\u0072\u0075\u0065":*_egac =3;
case "\u0066\u0061\u006cs\u0065":*_egac =4;case "\u0054\u0072\u0075\u0065":*_egac =6;case "\u0046\u0061\u006cs\u0065":*_egac =7;};return nil ;};func (_caf ST_XAlign )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_ddf :=_bf .Attr {};_ddf .Name =name ;
switch _caf {case ST_XAlignUnset :_ddf .Value ="";case ST_XAlignLeft :_ddf .Value ="\u006c\u0065\u0066\u0074";case ST_XAlignCenter :_ddf .Value ="\u0063\u0065\u006e\u0074\u0065\u0072";case ST_XAlignRight :_ddf .Value ="\u0072\u0069\u0067h\u0074";case ST_XAlignInside :_ddf .Value ="\u0069\u006e\u0073\u0069\u0064\u0065";
case ST_XAlignOutside :_ddf .Value ="\u006fu\u0074\u0073\u0069\u0064\u0065";};return _ddf ,nil ;};func (_bdd *ST_OnOff1 )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_bdd =0;case "\u006f\u006e":*_bdd =1;case "\u006f\u0066\u0066":*_bdd =2;
};return nil ;};type ST_TrueFalse byte ;func (_edd *ST_TrueFalse )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_feb ,_gfdc :=d .Token ();if _gfdc !=nil {return _gfdc ;};if _edb ,_edaa :=_feb .(_bf .EndElement );_edaa &&_edb .Name ==start .Name {*_edd =1;
return nil ;};if _egc ,_eab :=_feb .(_bf .CharData );!_eab {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_feb );}else {switch string (_egc ){case "":*_edd =0;
case "\u0074":*_edd =1;case "\u0066":*_edd =2;case "\u0074\u0072\u0075\u0065":*_edd =3;case "\u0066\u0061\u006cs\u0065":*_edd =4;};};_feb ,_gfdc =d .Token ();if _gfdc !=nil {return _gfdc ;};if _ff ,_edga :=_feb .(_bf .EndElement );_edga &&_ff .Name ==start .Name {return nil ;
};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_feb );};func (_dbd ST_TrueFalse )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_dbd .String (),start );
};type ST_XAlign byte ;func (_gdb ST_YAlign )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_gdb .String (),start );};const ST_GuidPattern ="\u005c\u007b\u005b\u0030\u002d\u0039\u0041\u002d\u0046\u005d\u007b\u0038\u007d\u002d\u005b\u0030\u002d9\u0041\u002d\u0046\u005d\u007b\u0034\u007d\u002d\u005b\u0030-\u0039\u0041\u002d\u0046\u005d\u007b\u0034\u007d\u002d\u005b\u0030\u002d\u0039\u0041\u002d\u0046\u005d\u007b4\u007d\u002d\u005b\u0030\u002d\u0039A\u002d\u0046]\u007b\u00312\u007d\\\u007d";
func ParseStdlibTime (s string )(_e .Time ,error ){var _d _e .Time ;if _ee ,_ge :=_e .Parse (_ce ,s );_ge ==nil {return _ee ,nil ;};if _fb ,_bb :=_e .Parse (_cg ,s );_bb ==nil {return _fb ,nil ;};if _be ,_ec :=_e .Parse (_ga ,s );_ec ==nil {return _be ,nil ;
};return _d ,_bc .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0064\u0061\u0074\u0065\u002f\u0074\u0069\u006d\u0065",s );};func (_eea *ST_CryptProv )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_eea =0;
case "\u0072\u0073\u0061\u0041\u0045\u0053":*_eea =1;case "\u0072s\u0061\u0046\u0075\u006c\u006c":*_eea =2;case "\u0063\u0075\u0073\u0074\u006f\u006d":*_eea =3;};return nil ;};func (_dg ST_AlgClass )String ()string {switch _dg {case 0:return "";case 1:return "\u0068\u0061\u0073\u0068";
case 2:return "\u0063\u0075\u0073\u0074\u006f\u006d";};return "";};var ST_PercentagePatternRe =_a .MustCompile (ST_PercentagePattern );func (_dge ST_YAlign )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_adcf :=_bf .Attr {};_adcf .Name =name ;switch _dge {case ST_YAlignUnset :_adcf .Value ="";
case ST_YAlignInline :_adcf .Value ="\u0069\u006e\u006c\u0069\u006e\u0065";case ST_YAlignTop :_adcf .Value ="\u0074\u006f\u0070";case ST_YAlignCenter :_adcf .Value ="\u0063\u0065\u006e\u0074\u0065\u0072";case ST_YAlignBottom :_adcf .Value ="\u0062\u006f\u0074\u0074\u006f\u006d";
case ST_YAlignInside :_adcf .Value ="\u0069\u006e\u0073\u0069\u0064\u0065";case ST_YAlignOutside :_adcf .Value ="\u006fu\u0074\u0073\u0069\u0064\u0065";};return _adcf ,nil ;};var ST_FixedPercentagePatternRe =_a .MustCompile (ST_FixedPercentagePattern );
type ST_TrueFalseBlank byte ;type ST_CalendarType byte ;func (_ab ST_TrueFalse )ValidateWithPath (path string )error {switch _ab {case 0,1,2,3,4:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_ab ));
};return nil ;};func _fa (_ae bool )uint8 {if _ae {return 1;};return 0;};func (_fed ST_XAlign )String ()string {switch _fed {case 0:return "";case 1:return "\u006c\u0065\u0066\u0074";case 2:return "\u0063\u0065\u006e\u0074\u0065\u0072";case 3:return "\u0072\u0069\u0067h\u0074";
case 4:return "\u0069\u006e\u0073\u0069\u0064\u0065";case 5:return "\u006fu\u0074\u0073\u0069\u0064\u0065";};return "";};func (_bab *ST_XAlign )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_bab =0;case "\u006c\u0065\u0066\u0074":*_bab =1;
case "\u0063\u0065\u006e\u0074\u0065\u0072":*_bab =2;case "\u0072\u0069\u0067h\u0074":*_bab =3;case "\u0069\u006e\u0073\u0069\u0064\u0065":*_bab =4;case "\u006fu\u0074\u0073\u0069\u0064\u0065":*_bab =5;};return nil ;};var ST_PositiveUniversalMeasurePatternRe =_a .MustCompile (ST_PositiveUniversalMeasurePattern );
func (_ebaf *ST_YAlign )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_ebaf =0;case "\u0069\u006e\u006c\u0069\u006e\u0065":*_ebaf =1;case "\u0074\u006f\u0070":*_ebaf =2;case "\u0063\u0065\u006e\u0074\u0065\u0072":*_ebaf =3;case "\u0062\u006f\u0074\u0074\u006f\u006d":*_ebaf =4;
case "\u0069\u006e\u0073\u0069\u0064\u0065":*_ebaf =5;case "\u006fu\u0074\u0073\u0069\u0064\u0065":*_ebaf =6;};return nil ;};func (_bef ST_AlgType )String ()string {switch _bef {case 0:return "";case 1:return "\u0074y\u0070\u0065\u0041\u006e\u0079";case 2:return "\u0063\u0075\u0073\u0074\u006f\u006d";
};return "";};type ST_AlgClass byte ;func (_ba ST_AlgClass )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_db :=_bf .Attr {};_db .Name =name ;switch _ba {case ST_AlgClassUnset :_db .Value ="";case ST_AlgClassHash :_db .Value ="\u0068\u0061\u0073\u0068";
case ST_AlgClassCustom :_db .Value ="\u0063\u0075\u0073\u0074\u006f\u006d";};return _db ,nil ;};const (ST_TrueFalseBlankUnset ST_TrueFalseBlank =0;ST_TrueFalseBlankT ST_TrueFalseBlank =1;ST_TrueFalseBlankF ST_TrueFalseBlank =2;ST_TrueFalseBlankTrue ST_TrueFalseBlank =3;
ST_TrueFalseBlankFalse ST_TrueFalseBlank =4;ST_TrueFalseBlankTrue_ ST_TrueFalseBlank =6;ST_TrueFalseBlankFalse_ ST_TrueFalseBlank =7;);func (_ad *ST_OnOff )Validate ()error {return _ad .ValidateWithPath ("")};func (_df ST_CalendarType )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_df .String (),start );
};func (_fbg ST_OnOff1 )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_gdf :=_bf .Attr {};_gdf .Name =name ;switch _fbg {case ST_OnOff1Unset :_gdf .Value ="";case ST_OnOff1On :_gdf .Value ="\u006f\u006e";case ST_OnOff1Off :_gdf .Value ="\u006f\u0066\u0066";
};return _gdf ,nil ;};func (_cee *ST_OnOff1 )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_fgg ,_bfe :=d .Token ();if _bfe !=nil {return _bfe ;};if _gbg ,_gab :=_fgg .(_bf .EndElement );_gab &&_gbg .Name ==start .Name {*_cee =1;return nil ;
};if _adgb ,_aea :=_fgg .(_bf .CharData );!_aea {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_fgg );}else {switch string (_adgb ){case "":*_cee =0;
case "\u006f\u006e":*_cee =1;case "\u006f\u0066\u0066":*_cee =2;};};_fgg ,_bfe =d .Token ();if _bfe !=nil {return _bfe ;};if _edg ,_bcg :=_fgg .(_bf .EndElement );_bcg &&_edg .Name ==start .Name {return nil ;};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_fgg );
};const (ST_YAlignUnset ST_YAlign =0;ST_YAlignInline ST_YAlign =1;ST_YAlignTop ST_YAlign =2;ST_YAlignCenter ST_YAlign =3;ST_YAlignBottom ST_YAlign =4;ST_YAlignInside ST_YAlign =5;ST_YAlignOutside ST_YAlign =6;);func (_cb ST_OnOff1 )ValidateWithPath (path string )error {switch _cb {case 0,1,2:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_cb ));
};return nil ;};func (_eba ST_VerticalAlignRun )String ()string {switch _eba {case 0:return "";case 1:return "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065";case 2:return "s\u0075\u0070\u0065\u0072\u0073\u0063\u0072\u0069\u0070\u0074";case 3:return "\u0073u\u0062\u0073\u0063\u0072\u0069\u0070t";
};return "";};func (_gee ST_OnOff1 )String ()string {switch _gee {case 0:return "";case 1:return "\u006f\u006e";case 2:return "\u006f\u0066\u0066";};return "";};

// ST_OnOff is a union type
type ST_OnOff struct{Bool *bool ;ST_OnOff1 ST_OnOff1 ;};func (_bg ST_TwipsMeasure )String ()string {if _bg .ST_UnsignedDecimalNumber !=nil {return _bc .Sprintf ("\u0025\u0076",*_bg .ST_UnsignedDecimalNumber );};if _bg .ST_PositiveUniversalMeasure !=nil {return _bc .Sprintf ("\u0025\u0076",*_bg .ST_PositiveUniversalMeasure );
};return "";};const ST_PositiveUniversalMeasurePattern ="\u005b\u0030-9\u005d\u002b\u0028\\\u002e\u005b\u0030\u002d9]+\u0029?(\u006d\u006d\u007c\u0063\u006d\u007c\u0069n|\u0070\u0074\u007c\u0070\u0063\u007c\u0070i\u0029";func (_dfe ST_AlgClass )ValidateWithPath (path string )error {switch _dfe {case 0,1,2:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_dfe ));
};return nil ;};func (_cef ST_CryptProv )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_deg :=_bf .Attr {};_deg .Name =name ;switch _cef {case ST_CryptProvUnset :_deg .Value ="";case ST_CryptProvRsaAES :_deg .Value ="\u0072\u0073\u0061\u0041\u0045\u0053";
case ST_CryptProvRsaFull :_deg .Value ="\u0072s\u0061\u0046\u0075\u006c\u006c";case ST_CryptProvCustom :_deg .Value ="\u0063\u0075\u0073\u0074\u006f\u006d";};return _deg ,nil ;};func (_fda ST_OnOff1 )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_fda .String (),start );
};const (ST_XAlignUnset ST_XAlign =0;ST_XAlignLeft ST_XAlign =1;ST_XAlignCenter ST_XAlign =2;ST_XAlignRight ST_XAlign =3;ST_XAlignInside ST_XAlign =4;ST_XAlignOutside ST_XAlign =5;);func (_bfc *ST_AlgClass )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_bfc =0;
case "\u0068\u0061\u0073\u0068":*_bfc =1;case "\u0063\u0075\u0073\u0074\u006f\u006d":*_bfc =2;};return nil ;};func (_bbb ST_YAlign )Validate ()error {return _bbb .ValidateWithPath ("")};type ST_AlgType byte ;func (_dcg ST_VerticalAlignRun )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_dege :=_bf .Attr {};
_dege .Name =name ;switch _dcg {case ST_VerticalAlignRunUnset :_dege .Value ="";case ST_VerticalAlignRunBaseline :_dege .Value ="\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065";case ST_VerticalAlignRunSuperscript :_dege .Value ="s\u0075\u0070\u0065\u0072\u0073\u0063\u0072\u0069\u0070\u0074";
case ST_VerticalAlignRunSubscript :_dege .Value ="\u0073u\u0062\u0073\u0063\u0072\u0069\u0070t";};return _dege ,nil ;};func (_eda ST_CalendarType )String ()string {switch _eda {case 0:return "";case 1:return "\u0067r\u0065\u0067\u006f\u0072\u0069\u0061n";
case 2:return "g\u0072\u0065\u0067\u006f\u0072\u0069\u0061\u006e\u0055\u0073";case 3:return "\u0067\u0072\u0065\u0067\u006f\u0072\u0069\u0061\u006e\u004d\u0065\u0046r\u0065\u006e\u0063\u0068";case 4:return "\u0067r\u0065g\u006f\u0072\u0069\u0061\u006e\u0041\u0072\u0061\u0062\u0069\u0063";
case 5:return "\u0068\u0069\u006ar\u0069";case 6:return "\u0068\u0065\u0062\u0072\u0065\u0077";case 7:return "\u0074\u0061\u0069\u0077\u0061\u006e";case 8:return "\u006a\u0061\u0070a\u006e";case 9:return "\u0074\u0068\u0061\u0069";case 10:return "\u006b\u006f\u0072e\u0061";
case 11:return "\u0073\u0061\u006b\u0061";case 12:return "g\u0072e\u0067\u006f\u0072\u0069\u0061\u006e\u0058\u006ci\u0074\u0045\u006e\u0067li\u0073\u0068";case 13:return "\u0067\u0072\u0065\u0067or\u0069\u0061\u006e\u0058\u006c\u0069\u0074\u0046\u0072\u0065\u006e\u0063\u0068";
case 14:return "\u006e\u006f\u006e\u0065";};return "";};func (_gfg ST_CryptProv )Validate ()error {return _gfg .ValidateWithPath ("")};func (_g ST_OnOff )String ()string {if _g .Bool !=nil {return _bc .Sprintf ("\u0025\u0076",*_g .Bool );};if _g .ST_OnOff1 !=ST_OnOff1Unset {return _g .ST_OnOff1 .String ();
};return "";};func (_ccc ST_ConformanceClass )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_ccc .String (),start );};type ST_OnOff1 byte ;func (_c *ST_TwipsMeasure )ValidateWithPath (path string )error {_add :=[]string {};
if _c .ST_UnsignedDecimalNumber !=nil {_add =append (_add ,"\u0053T\u005f\u0055\u006e\u0073\u0069\u0067\u006e\u0065\u0064\u0044\u0065c\u0069\u006d\u0061\u006c\u004e\u0075\u006d\u0062\u0065\u0072");};if _c .ST_PositiveUniversalMeasure !=nil {_add =append (_add ,"S\u0054\u005f\u0050\u006f\u0073\u0069t\u0069\u0076\u0065\u0055\u006e\u0069\u0076\u0065\u0072s\u0061\u006c\u004de\u0061s\u0075\u0072\u0065");
};if len (_add )> 1{return _bc .Errorf ("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076",path ,_add );};return nil ;};func (_dade *ST_ConformanceClass )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_dbdg ,_gcb :=d .Token ();
if _gcb !=nil {return _gcb ;};if _dag ,_fdf :=_dbdg .(_bf .EndElement );_fdf &&_dag .Name ==start .Name {*_dade =1;return nil ;};if _dgd ,_daff :=_dbdg .(_bf .CharData );!_daff {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_dbdg );
}else {switch string (_dgd ){case "":*_dade =0;case "\u0073\u0074\u0072\u0069\u0063\u0074":*_dade =1;case "\u0074\u0072\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0061\u006c":*_dade =2;};};_dbdg ,_gcb =d .Token ();if _gcb !=nil {return _gcb ;};if _dga ,_aae :=_dbdg .(_bf .EndElement );
_aae &&_dga .Name ==start .Name {return nil ;};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_dbdg );};func (_fae ST_TrueFalse )String ()string {switch _fae {case 0:return "";
case 1:return "\u0074";case 2:return "\u0066";case 3:return "\u0074\u0072\u0075\u0065";case 4:return "\u0066\u0061\u006cs\u0065";};return "";};func (_aac ST_VerticalAlignRun )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_aac .String (),start );
};func (_gbc ST_YAlign )ValidateWithPath (path string )error {switch _gbc {case 0,1,2,3,4,5,6:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_gbc ));
};return nil ;};func (_gaeg ST_TrueFalseBlank )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_gaeg .String (),start );};func (_efe ST_TrueFalseBlank )String ()string {switch _efe {case 0:return "";case 1:return "\u0074";
case 2:return "\u0066";case 3:return "\u0074\u0072\u0075\u0065";case 4:return "\u0066\u0061\u006cs\u0065";case 6:return "\u0054\u0072\u0075\u0065";case 7:return "\u0046\u0061\u006cs\u0065";};return "";};const (ST_CalendarTypeUnset ST_CalendarType =0;ST_CalendarTypeGregorian ST_CalendarType =1;
ST_CalendarTypeGregorianUs ST_CalendarType =2;ST_CalendarTypeGregorianMeFrench ST_CalendarType =3;ST_CalendarTypeGregorianArabic ST_CalendarType =4;ST_CalendarTypeHijri ST_CalendarType =5;ST_CalendarTypeHebrew ST_CalendarType =6;ST_CalendarTypeTaiwan ST_CalendarType =7;
ST_CalendarTypeJapan ST_CalendarType =8;ST_CalendarTypeThai ST_CalendarType =9;ST_CalendarTypeKorea ST_CalendarType =10;ST_CalendarTypeSaka ST_CalendarType =11;ST_CalendarTypeGregorianXlitEnglish ST_CalendarType =12;ST_CalendarTypeGregorianXlitFrench ST_CalendarType =13;
ST_CalendarTypeNone ST_CalendarType =14;);var ST_GuidPatternRe =_a .MustCompile (ST_GuidPattern );func (_ag *ST_CalendarType )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_ag =0;case "\u0067r\u0065\u0067\u006f\u0072\u0069\u0061n":*_ag =1;
case "g\u0072\u0065\u0067\u006f\u0072\u0069\u0061\u006e\u0055\u0073":*_ag =2;case "\u0067\u0072\u0065\u0067\u006f\u0072\u0069\u0061\u006e\u004d\u0065\u0046r\u0065\u006e\u0063\u0068":*_ag =3;case "\u0067r\u0065g\u006f\u0072\u0069\u0061\u006e\u0041\u0072\u0061\u0062\u0069\u0063":*_ag =4;
case "\u0068\u0069\u006ar\u0069":*_ag =5;case "\u0068\u0065\u0062\u0072\u0065\u0077":*_ag =6;case "\u0074\u0061\u0069\u0077\u0061\u006e":*_ag =7;case "\u006a\u0061\u0070a\u006e":*_ag =8;case "\u0074\u0068\u0061\u0069":*_ag =9;case "\u006b\u006f\u0072e\u0061":*_ag =10;
case "\u0073\u0061\u006b\u0061":*_ag =11;case "g\u0072e\u0067\u006f\u0072\u0069\u0061\u006e\u0058\u006ci\u0074\u0045\u006e\u0067li\u0073\u0068":*_ag =12;case "\u0067\u0072\u0065\u0067or\u0069\u0061\u006e\u0058\u006c\u0069\u0074\u0046\u0072\u0065\u006e\u0063\u0068":*_ag =13;
case "\u006e\u006f\u006e\u0065":*_ag =14;};return nil ;};func (_gfdg *ST_CryptProv )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_fd ,_efgb :=d .Token ();if _efgb !=nil {return _efgb ;};if _gafc ,_gae :=_fd .(_bf .EndElement );_gae &&_gafc .Name ==start .Name {*_gfdg =1;
return nil ;};if _fc ,_fcg :=_fd .(_bf .CharData );!_fcg {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_fd );}else {switch string (_fc ){case "":*_gfdg =0;
case "\u0072\u0073\u0061\u0041\u0045\u0053":*_gfdg =1;case "\u0072s\u0061\u0046\u0075\u006c\u006c":*_gfdg =2;case "\u0063\u0075\u0073\u0074\u006f\u006d":*_gfdg =3;};};_fd ,_efgb =d .Token ();if _efgb !=nil {return _efgb ;};if _ea ,_agd :=_fd .(_bf .EndElement );
_agd &&_ea .Name ==start .Name {return nil ;};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_fd );};const ST_PositiveFixedPercentagePattern ="\u0028\u0028\u0031\u0030\u0030\u0029\u007c\u0028\u005b\u0030\u002d\u0039\u005d\u005b\u0030\u002d\u0039\u005d\u003f\u0029\u0029\u0028\u005c\u002e[\u0030\u002d\u0039\u005d\u005b0\u002d\u0039]\u003f\u0029\u003f\u0025";
func (_egg ST_YAlign )String ()string {switch _egg {case 0:return "";case 1:return "\u0069\u006e\u006c\u0069\u006e\u0065";case 2:return "\u0074\u006f\u0070";case 3:return "\u0063\u0065\u006e\u0074\u0065\u0072";case 4:return "\u0062\u006f\u0074\u0074\u006f\u006d";
case 5:return "\u0069\u006e\u0073\u0069\u0064\u0065";case 6:return "\u006fu\u0074\u0073\u0069\u0064\u0065";};return "";};const (ST_VerticalAlignRunUnset ST_VerticalAlignRun =0;ST_VerticalAlignRunBaseline ST_VerticalAlignRun =1;ST_VerticalAlignRunSuperscript ST_VerticalAlignRun =2;
ST_VerticalAlignRunSubscript ST_VerticalAlignRun =3;);func ParseUnionST_OnOff (s string )(ST_OnOff ,error ){_cf :=ST_OnOff {};switch s {case "\u0074\u0072\u0075\u0065","\u0031","\u006f\u006e":_ca :=true ;_cf .Bool =&_ca ;default:_bd :=false ;_cf .Bool =&_bd ;
};return _cf ,nil ;};func (_dec ST_CryptProv )String ()string {switch _dec {case 0:return "";case 1:return "\u0072\u0073\u0061\u0041\u0045\u0053";case 2:return "\u0072s\u0061\u0046\u0075\u006c\u006c";case 3:return "\u0063\u0075\u0073\u0074\u006f\u006d";
};return "";};func (_abg ST_XAlign )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_abg .String (),start );};func (_fdd ST_AlgType )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_fdd .String (),start );
};const (ST_CryptProvUnset ST_CryptProv =0;ST_CryptProvRsaAES ST_CryptProv =1;ST_CryptProvRsaFull ST_CryptProv =2;ST_CryptProvCustom ST_CryptProv =3;);func (_eb *ST_OnOff )ValidateWithPath (path string )error {_eg :=[]string {};if _eb .Bool !=nil {_eg =append (_eg ,"\u0042\u006f\u006f\u006c");
};if _eb .ST_OnOff1 !=ST_OnOff1Unset {_eg =append (_eg ,"\u0053T\u005f\u004f\u006e\u004f\u0066\u00661");};if len (_eg )> 1{return _bc .Errorf ("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076",path ,_eg );
};return nil ;};const ST_FixedPercentagePattern ="-\u003f\u0028\u0028\u0031\u0030\u0030\u0029\u007c\u0028\u005b\u0030\u002d\u0039\u005d\u005b\u0030\u002d\u0039]\u003f\u0029\u0029\u0028\u005c\u002e\u005b\u0030\u002d\u0039][\u0030\u002d\u0039]\u003f)\u003f\u0025";
func (_agf ST_TrueFalseBlank )ValidateWithPath (path string )error {switch _agf {case 0,1,2,3,4,6,7:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_agf ));
};return nil ;};func (_daed ST_XAlign )ValidateWithPath (path string )error {switch _daed {case 0,1,2,3,4,5:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_daed ));
};return nil ;};func (_f ST_TwipsMeasure )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {e .EncodeToken (start );if _f .ST_UnsignedDecimalNumber !=nil {e .EncodeToken (_bf .CharData (_bc .Sprintf ("\u0025\u0064",*_f .ST_UnsignedDecimalNumber )));
};if _f .ST_PositiveUniversalMeasure !=nil {e .EncodeToken (_bf .CharData (*_f .ST_PositiveUniversalMeasure ));};return e .EncodeToken (_bf .EndElement {Name :start .Name });};func (_dea ST_CryptProv )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {return e .EncodeElement (_dea .String (),start );
};func (_aag *ST_TwipsMeasure )Validate ()error {return _aag .ValidateWithPath ("")};type ST_ConformanceClass byte ;const (ST_ConformanceClassUnset ST_ConformanceClass =0;ST_ConformanceClassStrict ST_ConformanceClass =1;ST_ConformanceClassTransitional ST_ConformanceClass =2;
);func (_cbc ST_TrueFalseBlank )Validate ()error {return _cbc .ValidateWithPath ("")};func FormatDateTime (t _e .Time )string {return t .Format (_ga )};func (_adce *ST_YAlign )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_baeg ,_def :=d .Token ();
if _def !=nil {return _def ;};if _ded ,_bag :=_baeg .(_bf .EndElement );_bag &&_ded .Name ==start .Name {*_adce =1;return nil ;};if _bda ,_gdg :=_baeg .(_bf .CharData );!_gdg {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_baeg );
}else {switch string (_bda ){case "":*_adce =0;case "\u0069\u006e\u006c\u0069\u006e\u0065":*_adce =1;case "\u0074\u006f\u0070":*_adce =2;case "\u0063\u0065\u006e\u0074\u0065\u0072":*_adce =3;case "\u0062\u006f\u0074\u0074\u006f\u006d":*_adce =4;case "\u0069\u006e\u0073\u0069\u0064\u0065":*_adce =5;
case "\u006fu\u0074\u0073\u0069\u0064\u0065":*_adce =6;};};_baeg ,_def =d .Token ();if _def !=nil {return _def ;};if _baec ,_cab :=_baeg .(_bf .EndElement );_cab &&_baec .Name ==start .Name {return nil ;};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_baeg );
};const (ST_TrueFalseUnset ST_TrueFalse =0;ST_TrueFalseT ST_TrueFalse =1;ST_TrueFalseF ST_TrueFalse =2;ST_TrueFalseTrue ST_TrueFalse =3;ST_TrueFalseFalse ST_TrueFalse =4;);const (_ce ="2\u0030\u0030\u0036\u002d\u004a\u0061\u006e\u002d\u0030\u0032";_cg ="\u0031\u0035\u003a\u0030\u0034\u003a\u0030\u0035";
_ga ="\u00320\u0030\u0036\u002d\u00301\u002d\u0030\u0032\u0054\u00315\u003a0\u0034:\u0030\u0035\u005a\u0030\u0037\u003a\u00300";);func (_dad *ST_AlgClass )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_gf ,_adg :=d .Token ();if _adg !=nil {return _adg ;
};if _de ,_gb :=_gf .(_bf .EndElement );_gb &&_de .Name ==start .Name {*_dad =1;return nil ;};if _dc ,_fab :=_gf .(_bf .CharData );!_fab {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_gf );
}else {switch string (_dc ){case "":*_dad =0;case "\u0068\u0061\u0073\u0068":*_dad =1;case "\u0063\u0075\u0073\u0074\u006f\u006d":*_dad =2;};};_gf ,_adg =d .Token ();if _adg !=nil {return _adg ;};if _efa ,_gfd :=_gf .(_bf .EndElement );_gfd &&_efa .Name ==start .Name {return nil ;
};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_gf );};func (_bae *ST_TrueFalseBlank )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_afg ,_gcc :=d .Token ();
if _gcc !=nil {return _gcc ;};if _adcd ,_bdf :=_afg .(_bf .EndElement );_bdf &&_adcd .Name ==start .Name {*_bae =1;return nil ;};if _daf ,_gdfc :=_afg .(_bf .CharData );!_gdfc {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_afg );
}else {switch string (_daf ){case "":*_bae =0;case "\u0074":*_bae =1;case "\u0066":*_bae =2;case "\u0074\u0072\u0075\u0065":*_bae =3;case "\u0066\u0061\u006cs\u0065":*_bae =4;case "\u0054\u0072\u0075\u0065":*_bae =6;case "\u0046\u0061\u006cs\u0065":*_bae =7;
};};_afg ,_gcc =d .Token ();if _gcc !=nil {return _gcc ;};if _cgg ,_ecg :=_afg .(_bf .EndElement );_ecg &&_cgg .Name ==start .Name {return nil ;};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_afg );
};const ST_PercentagePattern ="-\u003f[\u0030\u002d\u0039\u005d\u002b\u0028\u005c\u002e[\u0030\u002d\u0039\u005d+)\u003f\u0025";type ST_CryptProv byte ;var ST_UniversalMeasurePatternRe =_a .MustCompile (ST_UniversalMeasurePattern );func (_aed ST_AlgType )Validate ()error {return _aed .ValidateWithPath ("")};
func (_ead ST_VerticalAlignRun )ValidateWithPath (path string )error {switch _ead {case 0,1,2,3:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_ead ));
};return nil ;};func (_cbb ST_ConformanceClass )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_cbf :=_bf .Attr {};_cbf .Name =name ;switch _cbb {case ST_ConformanceClassUnset :_cbf .Value ="";case ST_ConformanceClassStrict :_cbf .Value ="\u0073\u0074\u0072\u0069\u0063\u0074";
case ST_ConformanceClassTransitional :_cbf .Value ="\u0074\u0072\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0061\u006c";};return _cbf ,nil ;};func (_cdf ST_TrueFalseBlank )MarshalXMLAttr (name _bf .Name )(_bf .Attr ,error ){_af :=_bf .Attr {};_af .Name =name ;
switch _cdf {case ST_TrueFalseBlankUnset :_af .Value ="";case ST_TrueFalseBlankT :_af .Value ="\u0074";case ST_TrueFalseBlankF :_af .Value ="\u0066";case ST_TrueFalseBlankTrue :_af .Value ="\u0074\u0072\u0075\u0065";case ST_TrueFalseBlankFalse :_af .Value ="\u0066\u0061\u006cs\u0065";
case ST_TrueFalseBlankTrue_ :_af .Value ="\u0054\u0072\u0075\u0065";case ST_TrueFalseBlankFalse_ :_af .Value ="\u0046\u0061\u006cs\u0065";};return _af ,nil ;};func (_bcd *ST_TrueFalse )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_bcd =0;
case "\u0074":*_bcd =1;case "\u0066":*_bcd =2;case "\u0074\u0072\u0075\u0065":*_bcd =3;case "\u0066\u0061\u006cs\u0065":*_bcd =4;};return nil ;};type ST_VerticalAlignRun byte ;func (_ggf ST_ConformanceClass )String ()string {switch _ggf {case 0:return "";
case 1:return "\u0073\u0074\u0072\u0069\u0063\u0074";case 2:return "\u0074\u0072\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0061\u006c";};return "";};func (_gdc ST_CryptProv )ValidateWithPath (path string )error {switch _gdc {case 0,1,2,3:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_gdc ));
};return nil ;};func (_egb ST_TrueFalse )Validate ()error {return _egb .ValidateWithPath ("")};func (_aaad *ST_XAlign )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_faf ,_cgd :=d .Token ();if _cgd !=nil {return _cgd ;};if _gg ,_fga :=_faf .(_bf .EndElement );
_fga &&_gg .Name ==start .Name {*_aaad =1;return nil ;};if _gag ,_befb :=_faf .(_bf .CharData );!_befb {return _bc .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_faf );
}else {switch string (_gag ){case "":*_aaad =0;case "\u006c\u0065\u0066\u0074":*_aaad =1;case "\u0063\u0065\u006e\u0074\u0065\u0072":*_aaad =2;case "\u0072\u0069\u0067h\u0074":*_aaad =3;case "\u0069\u006e\u0073\u0069\u0064\u0065":*_aaad =4;case "\u006fu\u0074\u0073\u0069\u0064\u0065":*_aaad =5;
};};_faf ,_cgd =d .Token ();if _cgd !=nil {return _cgd ;};if _bcb ,_faeg :=_faf .(_bf .EndElement );_faeg &&_bcb .Name ==start .Name {return nil ;};return _bc .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_faf );
};const ST_PositivePercentagePattern ="\u005b0\u002d9\u005d\u002b\u0028\u005c\u002e[\u0030\u002d9\u005d\u002b\u0029\u003f\u0025";func (_fdac ST_ConformanceClass )ValidateWithPath (path string )error {switch _fdac {case 0,1,2:default:return _bc .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_fdac ));
};return nil ;};func (_edag *ST_AlgType )UnmarshalXMLAttr (attr _bf .Attr )error {switch attr .Value {case "":*_edag =0;case "\u0074y\u0070\u0065\u0041\u006e\u0079":*_edag =1;case "\u0063\u0075\u0073\u0074\u006f\u006d":*_edag =2;};return nil ;};