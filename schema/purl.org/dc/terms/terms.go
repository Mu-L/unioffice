//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_g "encoding/xml";_c "fmt";_ge "github.com/unidoc/unioffice";_fe "github.com/unidoc/unioffice/common/logger";_e "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);func (_ce *DDC )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_fbe ,_eg :=d .Token ();
if _eg !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_eg );};if _ef ,_bdg :=_fbe .(_g .EndElement );_bdg &&_ef .Name ==start .Name {break ;};};return nil ;};func (_fb *Box )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";
e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the ISO639_2 and its children
func (_bfd *ISO639_2 )Validate ()error {return _bfd .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};func (_fff *Period )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";
e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_ccb *Point )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_ced *Period )ValidateWithPath (path string )error {return nil };

// Validate validates the RFC3066 and its children
func (_acb *RFC3066 )Validate ()error {return _acb .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};type Box struct{};func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_cfba :=&ElementsAndRefinementsGroup {};return _cfba ;
};func (_dda *TGN )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_fdcd ,_dge :=d .Token ();if _dge !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_dge );};if _cfc ,_gbc :=_fdcd .(_g .EndElement );
_gbc &&_cfc .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_da *DDC )ValidateWithPath (path string )error {return nil };func (_gbb *LCSH )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });
return nil ;};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_aadc *UDC )ValidateWithPath (path string )error {return nil };func (_ged *URI )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_be ,_cga :=d .Token ();if _cga !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_cga );
};if _gcb ,_cea :=_be .(_g .EndElement );_cea &&_gcb .Name ==start .Name {break ;};};return nil ;};type RFC1766 struct{};

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_eda *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _geg ,_db :=range _eda .Choice {if _cae :=_db .ValidateWithPath (_c .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_geg ));
_cae !=nil {return _cae ;};};return nil ;};func (_ga *MESH )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;
};func (_bab *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_eab :for {_ede ,_bcd :=d .Token ();if _bcd !=nil {return _bcd ;};switch _gd :=_ede .(type ){case _g .StartElement :switch _gd .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dd :=_e .NewAny ();
if _bge :=d .DecodeElement (_dd ,&_gd );_bge !=nil {return _bge ;};_bab .Any =append (_bab .Any ,_dd );default:_fe .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_gd .Name );
if _gdf :=d .Skip ();_gdf !=nil {return _gdf ;};};case _g .EndElement :break _eab ;case _g .CharData :};};return nil ;};func (_cg *ElementOrRefinementContainer )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";
e .EncodeToken (start );if _cg .Choice !=nil {for _ ,_ccc :=range _cg .Choice {_ccc .MarshalXML (e ,_g .StartElement {});};};e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_afge *ElementsAndRefinementsGroupChoice )Validate ()error {return _afge .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");
};func (_ffff *Point )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_fdg ,_cfe :=d .Token ();if _cfe !=nil {return _c .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_cfe );
};if _fbea ,_cbf :=_fdg .(_g .EndElement );_cbf &&_fbea .Name ==start .Name {break ;};};return nil ;};func (_cac *Period )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_def ,_gad :=d .Token ();if _gad !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_gad );
};if _aab ,_aae :=_def .(_g .EndElement );_aae &&_aab .Name ==start .Name {break ;};};return nil ;};func (_bga *ElementOrRefinementContainer )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_dc :for {_fa ,_ac :=d .Token ();if _ac !=nil {return _ac ;
};switch _ca :=_fa .(type ){case _g .StartElement :switch _ca .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bde :=NewElementsAndRefinementsGroupChoice ();
if _ba :=d .DecodeElement (&_bde .Any ,&_ca );_ba !=nil {return _ba ;};_bga .Choice =append (_bga .Choice ,_bde );default:_fe .Log .Debug ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_ca .Name );
if _ae :=d .Skip ();_ae !=nil {return _ae ;};};case _g .EndElement :break _dc ;case _g .CharData :};};return nil ;};func (_gb *ElementsAndRefinementsGroup )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {if _gb .Choice !=nil {for _ ,_fc :=range _gb .Choice {_fc .MarshalXML (e ,_g .StartElement {});
};};return nil ;};type RFC3066 struct{};func (_defe *W3CDTF )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });
return nil ;};type DCMIType struct{};

// Validate validates the DCMIType and its children
func (_cfb *DCMIType )Validate ()error {return _cfb .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func NewISO3166 ()*ISO3166 {_adc :=&ISO3166 {};return _adc };type ElementsAndRefinementsGroupChoice struct{Any []*_e .Any ;};func (_bac *Point )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";
e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_ab *DCMIType )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );
e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_dcd *RFC1766 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_ceg ,_egdc :=d .Token ();if _egdc !=nil {return _c .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_egdc );
};if _aefe ,_fage :=_ceg .(_g .EndElement );_fage &&_aefe .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_bcf *DCMIType )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_bcda *URI )ValidateWithPath (path string )error {return nil };type ISO3166 struct{};

// Validate validates the MESH and its children
func (_bgb *MESH )Validate ()error {return _bgb .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func (_bc *DCMIType )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_bg ,_d :=d .Token ();if _d !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_d );
};if _gef ,_ed :=_bg .(_g .EndElement );_ed &&_gef .Name ==start .Name {break ;};};return nil ;};func (_cf *Box )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_ff ,_gf :=d .Token ();if _gf !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_gf );
};if _a ,_af :=_ff .(_g .EndElement );_af &&_a .Name ==start .Name {break ;};};return nil ;};func NewLCC ()*LCC {_de :=&LCC {};return _de };type LCSH struct{};

// Validate validates the Box and its children
func (_eb *Box )Validate ()error {return _eb .ValidateWithPath ("\u0042\u006f\u0078")};func (_cc *DDC )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });
return nil ;};

// Validate validates the LCSH and its children
func (_cgg *LCSH )Validate ()error {return _cgg .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func (_aca *W3CDTF )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_ag ,_edb :=d .Token ();if _edb !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_edb );
};if _cadc ,_ffg :=_ag .(_g .EndElement );_ffg &&_cadc .Name ==start .Name {break ;};};return nil ;};func (_fed *MESH )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_adce ,_gbbd :=d .Token ();if _gbbd !=nil {return _c .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_gbbd );
};if _ega ,_bff :=_adce .(_g .EndElement );_bff &&_ega .Name ==start .Name {break ;};};return nil ;};type Point struct{};

// Validate validates the TGN and its children
func (_efe *TGN )Validate ()error {return _efe .ValidateWithPath ("\u0054\u0047\u004e")};type ISO639_2 struct{};func (_ada *LCC )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );
e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the Period and its children
func (_dfg *Period )Validate ()error {return _dfg .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};

// Validate validates the URI and its children
func (_egdb *URI )Validate ()error {return _egdb .ValidateWithPath ("\u0055\u0052\u0049")};func (_dbbg *UDC )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_bae ,_efgf :=d .Token ();if _efgf !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_efgf );
};if _gda ,_fbcd :=_bae .(_g .EndElement );_fbcd &&_gda .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_ffd *ISO639_2 )ValidateWithPath (path string )error {return nil };func (_edcf *RFC3066 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });
return nil ;};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_dba *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _aa ,_ea :=range _dba .Choice {if _aac :=_ea .ValidateWithPath (_c .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_aa ));
_aac !=nil {return _aac ;};};return nil ;};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_afb :=&ElementOrRefinementContainer {};return _afb ;};type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;
};func NewLCSH ()*LCSH {_bb :=&LCSH {};return _bb };

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_dbc *LCSH )ValidateWithPath (path string )error {return nil };func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_aeb :=&ElementsAndRefinementsGroupChoice {};return _aeb ;};func (_aeg *TGN )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";
e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type Period struct{};func (_aacg *LCC )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_dgc ,_fg :=d .Token ();if _fg !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_fg );
};if _egcd ,_fgc :=_dgc .(_g .EndElement );_fgc &&_egcd .Name ==start .Name {break ;};};return nil ;};type URI struct{};type UDC struct{};func NewPeriod ()*Period {_fad :=&Period {};return _fad };func NewTGN ()*TGN {_cfec :=&TGN {};return _cfec };type IMT struct{};
func (_cgd *URI )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func NewRFC1766 ()*RFC1766 {_fde :=&RFC1766 {};
return _fde };

// Validate validates the RFC1766 and its children
func (_fga *RFC1766 )Validate ()error {return _fga .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};func (_bffa *RFC3066 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_cbfd ,_daa :=d .Token ();if _daa !=nil {return _c .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_daa );
};if _caed ,_dbba :=_cbfd .(_g .EndElement );_dbba &&_caed .Name ==start .Name {break ;};};return nil ;};func (_geb *IMT )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });
return nil ;};func NewDCMIType ()*DCMIType {_ad :=&DCMIType {};return _ad };

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_cfde *W3CDTF )ValidateWithPath (path string )error {return nil };func NewIMT ()*IMT {_ee :=&IMT {};return _ee };func (_gca *ISO639_2 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";
e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_fba *UDC )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });
return nil ;};

// Validate validates the Point and its children
func (_caf *Point )Validate ()error {return _caf .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};type TGN struct{};func (_egd *ElementsAndRefinementsGroup )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_bdeg :for {_df ,_edc :=d .Token ();
if _edc !=nil {return _edc ;};switch _gfa :=_df .(type ){case _g .StartElement :switch _gfa .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ceb :=NewElementsAndRefinementsGroupChoice ();
if _fag :=d .DecodeElement (&_ceb .Any ,&_gfa );_fag !=nil {return _fag ;};_egd .Choice =append (_egd .Choice ,_ceb );default:_fe .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_gfa .Name );
if _dg :=d .Skip ();_dg !=nil {return _dg ;};};case _g .EndElement :break _bdeg ;case _g .CharData :};};return nil ;};

// Validate validates the ElementOrRefinementContainer and its children
func (_afg *ElementOrRefinementContainer )Validate ()error {return _afg .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};type DDC struct{};


// Validate validates the W3CDTF and its children
func (_fbec *W3CDTF )Validate ()error {return _fbec .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};func NewW3CDTF ()*W3CDTF {_ffcc :=&W3CDTF {};return _ffcc };func NewMESH ()*MESH {_gge :=&MESH {};return _gge };

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_ace *MESH )ValidateWithPath (path string )error {return nil };func NewUDC ()*UDC {_egdce :=&UDC {};return _egdce };

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_bbe *TGN )ValidateWithPath (path string )error {return nil };type LCC struct{};

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_b *Box )ValidateWithPath (path string )error {return nil };

// Validate validates the ISO3166 and its children
func (_eba *ISO3166 )Validate ()error {return _eba .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};type MESH struct{};type W3CDTF struct{};func (_bda *ISO639_2 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_ffc ,_fdc :=d .Token ();
if _fdc !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_fdc );};if _fdd ,_fbg :=_ffc .(_g .EndElement );_fbg &&_fdd .Name ==start .Name {break ;};};return nil ;};func (_dbb *ISO3166 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";
e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_gfb *ElementsAndRefinementsGroupChoice )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {if _gfb .Any !=nil {_dfa :=_g .StartElement {Name :_g .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};
for _ ,_bcb :=range _gfb .Any {e .EncodeElement (_bcb ,_dfa );};};return nil ;};func NewDDC ()*DDC {_bd :=&DDC {};return _bd };

// Validate validates the IMT and its children
func (_cd *IMT )Validate ()error {return _cd .ValidateWithPath ("\u0049\u004d\u0054")};func (_edec *IMT )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_fbc ,_cfa :=d .Token ();if _cfa !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_cfa );
};if _afa ,_fbd :=_fbc .(_g .EndElement );_fbd &&_afa .Name ==start .Name {break ;};};return nil ;};

// Validate validates the UDC and its children
func (_dgb *UDC )Validate ()error {return _dgb .ValidateWithPath ("\u0055\u0044\u0043")};func NewRFC3066 ()*RFC3066 {_fdgg :=&RFC3066 {};return _fdgg };func NewBox ()*Box {_gg :=&Box {};return _gg };

// Validate validates the DDC and its children
func (_ec *DDC )Validate ()error {return _ec .ValidateWithPath ("\u0044\u0044\u0043")};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_cbfe *RFC3066 )ValidateWithPath (path string )error {return nil };func NewISO639_2 ()*ISO639_2 {_cad :=&ISO639_2 {};return _cad };func (_ded *RFC1766 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";
e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func NewURI ()*URI {_abd :=&URI {};return _abd };

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_gfff *RFC1766 )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_aef *IMT )ValidateWithPath (path string )error {return nil };func (_cb *LCSH )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_ebb ,_cfd :=d .Token ();if _cfd !=nil {return _c .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_cfd );
};if _ecc ,_dgce :=_ebb .(_g .EndElement );_dgce &&_ecc .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_efg *ISO3166 )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_gff *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _aad ,_egc :=range _gff .Any {if _gcg :=_egc .ValidateWithPath (_c .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_aad ));_gcg !=nil {return _gcg ;
};};return nil ;};

// Validate validates the ElementsAndRefinementsGroup and its children
func (_baf *ElementsAndRefinementsGroup )Validate ()error {return _baf .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_dcg *LCC )ValidateWithPath (path string )error {return nil };func NewPoint ()*Point {_feg :=&Point {};return _feg };func (_gdb *ISO3166 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_gfgf ,_fdf :=d .Token ();if _fdf !=nil {return _c .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_fdf );
};if _bcba ,_bf :=_gfgf .(_g .EndElement );_bf &&_bcba .Name ==start .Name {break ;};};return nil ;};

// Validate validates the LCC and its children
func (_abb *LCC )Validate ()error {return _abb .ValidateWithPath ("\u004c\u0043\u0043")};func init (){_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );
_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );
_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );
_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );
_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );
_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );
_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );
_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );
_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );
_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );
_ge .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );
};