//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_b "encoding/xml";_d "fmt";_bb "github.com/unidoc/unioffice";_c "github.com/unidoc/unioffice/common/logger";);func (_dge *SimpleLiteral )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_fdg ,_bad :=d .Token ();
if _bad !=nil {return _d .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_bad );};if _eef ,_cde :=_fdg .(_b .EndElement );_cde &&_eef .Name ==start .Name {break ;};};return nil ;
};type SimpleLiteral struct{};func NewElementsGroupChoice ()*ElementsGroupChoice {_ff :=&ElementsGroupChoice {};return _ff };

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_fc *ElementsGroup )ValidateWithPath (path string )error {for _dg ,_fa :=range _fc .Choice {if _af :=_fa .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_dg ));_af !=nil {return _af ;
};};return nil ;};func (_dcc *ElementsGroupChoice )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {if _dcc .Any !=nil {_cb :=_b .StartElement {Name :_b .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_bag :=range _dcc .Any {e .EncodeElement (_bag ,_cb );
};};return nil ;};func NewElementsGroup ()*ElementsGroup {_ee :=&ElementsGroup {};return _ee };

// Validate validates the ElementContainer and its children
func (_dfb *ElementContainer )Validate ()error {return _dfb .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};

// Validate validates the Any and its children
func (_bf *Any )Validate ()error {return _bf .ValidateWithPath ("\u0041\u006e\u0079")};

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_cdeg *SimpleLiteral )ValidateWithPath (path string )error {return nil };func (_gbc *ElementsGroup )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_gd :for {_abe ,_gef :=d .Token ();if _gef !=nil {return _gef ;};switch _dc :=_abe .(type ){case _b .StartElement :switch _dc .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dfc :=NewElementsGroupChoice ();
if _de :=d .DecodeElement (&_dfc .Any ,&_dc );_de !=nil {return _de ;};_gbc .Choice =append (_gbc .Choice ,_dfc );default:_c .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_dc .Name );
if _ed :=d .Skip ();_ed !=nil {return _ed ;};};case _b .EndElement :break _gd ;case _b .CharData :};};return nil ;};

// Validate validates the ElementsGroup and its children
func (_beb *ElementsGroup )Validate ()error {return _beb .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};func (_ga *ElementContainer )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_ba :for {_df ,_ad :=d .Token ();
if _ad !=nil {return _ad ;};switch _ab :=_df .(type ){case _b .StartElement :switch _ab .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_cf :=NewElementsGroupChoice ();
if _ag :=d .DecodeElement (&_cf .Any ,&_ab );_ag !=nil {return _ag ;};_ga .Choice =append (_ga .Choice ,_cf );default:_c .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_ab .Name );
if _ge :=d .Skip ();_ge !=nil {return _ge ;};};case _b .EndElement :break _ba ;case _b .CharData :};};return nil ;};func (_bg *ElementsGroupChoice )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_db :for {_gbd ,_dd :=d .Token ();if _dd !=nil {return _dd ;
};switch _dbe :=_gbd .(type ){case _b .StartElement :switch _dbe .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bba :=NewAny ();
if _fff :=d .DecodeElement (_bba ,&_dbe );_fff !=nil {return _fff ;};_bg .Any =append (_bg .Any ,_bba );default:_c .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_dbe .Name );
if _bd :=d .Skip ();_bd !=nil {return _bd ;};};case _b .EndElement :break _db ;case _b .CharData :};};return nil ;};func NewElementContainer ()*ElementContainer {_ec :=&ElementContainer {};return _ec };type Any struct{SimpleLiteral };func NewAny ()*Any {_be :=&Any {};
_be .SimpleLiteral =*NewSimpleLiteral ();return _be };func (_geb *ElementsGroup )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {if _geb .Choice !=nil {for _ ,_cc :=range _geb .Choice {_cc .MarshalXML (e ,_b .StartElement {});};};return nil ;
};

// Validate validates the ElementsGroupChoice and its children
func (_dcd *ElementsGroupChoice )Validate ()error {return _dcd .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};func NewSimpleLiteral ()*SimpleLiteral {_ecd :=&SimpleLiteral {};
return _ecd };

// Validate validates the SimpleLiteral and its children
func (_dbf *SimpleLiteral )Validate ()error {return _dbf .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};type ElementsGroupChoice struct{Any []*Any ;};

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_afd *ElementsGroupChoice )ValidateWithPath (path string )error {for _gc ,_aga :=range _afd .Any {if _ce :=_aga .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_gc ));_ce !=nil {return _ce ;};};
return nil ;};type ElementsGroup struct{Choice []*ElementsGroupChoice ;};func (_fffa *SimpleLiteral )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_a *Any )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {return _a .SimpleLiteral .MarshalXML (e ,start );
};

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_fe *ElementContainer )ValidateWithPath (path string )error {for _eg ,_ecb :=range _fe .Choice {if _ea :=_ecb .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_eg ));_ea !=nil {return _ea ;
};};return nil ;};

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_gg *Any )ValidateWithPath (path string )error {if _e :=_gg .SimpleLiteral .ValidateWithPath (path );_e !=nil {return _e ;};return nil ;};func (_fd *Any )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_fd .SimpleLiteral =*NewSimpleLiteral ();
for {_cd ,_cg :=d .Token ();if _cg !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_cg );};if _g ,_da :=_cd .(_b .EndElement );_da &&_g .Name ==start .Name {break ;};};return nil ;};func (_bc *ElementContainer )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";
e .EncodeToken (start );if _bc .Choice !=nil {for _ ,_cdc :=range _bc .Choice {_cdc .MarshalXML (e ,_b .StartElement {});};};e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type ElementContainer struct{Choice []*ElementsGroupChoice ;
};func init (){_bb .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );
_bb .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );
_bb .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_bb .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );
};