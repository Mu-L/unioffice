//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package symex ;import (_c "encoding/xml";_a "fmt";_e "github.com/unidoc/unioffice/v2";);type CT_SymEx struct{FontAttr *string ;CharAttr *string ;};type SymEx struct{CT_SymEx };func (_eg *CT_SymEx )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for _ ,_ac :=range start .Attr {if _ac .Name .Local =="\u0066\u006f\u006e\u0074"{_f :=_ac .Value ;
_eg .FontAttr =&_f ;continue ;};if _ac .Name .Local =="\u0063\u0068\u0061\u0072"{_aca :=_ac .Value ;_eg .CharAttr =&_aca ;continue ;};};for {_age ,_ff :=d .Token ();if _ff !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0079\u006d\u0045\u0078: \u0025\u0073",_ff );
};if _b ,_af :=_age .(_c .EndElement );_af &&_b .Name ==start .Name {break ;};};return nil ;};func NewSymEx ()*SymEx {_cf :=&SymEx {};_cf .CT_SymEx =*NewCT_SymEx ();return _cf };func (_afc *SymEx )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006ff\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u00315\u002f\u0077\u006f\u0072\u0064\u006dl\u002f\u0073\u0079m\u0065\u0078"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006ff\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u00315\u002f\u0077\u006f\u0072\u0064\u006dl\u002f\u0073\u0079m\u0065\u0078"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"},Value :"\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0077"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0073:\u0073\u0079\u006d\u0045\u0078";return _afc .CT_SymEx .MarshalXML (e ,start );};

// ValidateWithPath validates the SymEx and its children, prefixing error messages with path
func (_bc *SymEx )ValidateWithPath (path string )error {if _be :=_bc .CT_SymEx .ValidateWithPath (path );_be !=nil {return _be ;};return nil ;};func (_d *CT_SymEx )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _d .FontAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0073\u003a\u0066\u006f\u006e\u0074"},Value :_a .Sprintf ("\u0025\u0076",*_d .FontAttr )});
};if _d .CharAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0073\u003a\u0063\u0068\u0061\u0072"},Value :_a .Sprintf ("\u0025\u0076",*_d .CharAttr )});};e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });
return nil ;};func (_cd *SymEx )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_cd .CT_SymEx =*NewCT_SymEx ();for _ ,_fb :=range start .Attr {if _fb .Name .Local =="\u0066\u006f\u006e\u0074"{_gd :=_fb .Value ;_cd .FontAttr =&_gd ;continue ;
};if _fb .Name .Local =="\u0063\u0068\u0061\u0072"{_cdd :=_fb .Value ;_cd .CharAttr =&_cdd ;continue ;};};for {_ab ,_baa :=d .Token ();if _baa !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0053\u0079\u006d\u0045x\u003a\u0020\u0025\u0073",_baa );
};if _fc ,_fe :=_ab .(_c .EndElement );_fe &&_fc .Name ==start .Name {break ;};};return nil ;};func NewCT_SymEx ()*CT_SymEx {_eb :=&CT_SymEx {};return _eb };

// ValidateWithPath validates the CT_SymEx and its children, prefixing error messages with path
func (_ba *CT_SymEx )ValidateWithPath (path string )error {return nil };

// Validate validates the CT_SymEx and its children
func (_egc *CT_SymEx )Validate ()error {return _egc .ValidateWithPath ("\u0043\u0054\u005f\u0053\u0079\u006d\u0045\u0078");};

// Validate validates the SymEx and its children
func (_ec *SymEx )Validate ()error {return _ec .ValidateWithPath ("\u0053\u0079\u006dE\u0078")};func init (){_e .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006ff\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u00315\u002f\u0077\u006f\u0072\u0064\u006dl\u002f\u0073\u0079m\u0065\u0078","\u0043\u0054\u005f\u0053\u0079\u006d\u0045\u0078",NewCT_SymEx );
_e .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006ff\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u00315\u002f\u0077\u006f\u0072\u0064\u006dl\u002f\u0073\u0079m\u0065\u0078","\u0073\u0079\u006dE\u0078",NewSymEx );
};