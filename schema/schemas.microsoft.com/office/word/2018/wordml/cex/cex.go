//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package cex ;import (_c "encoding/xml";_cb "fmt";_ag "github.com/unidoc/unioffice/v2";_g "github.com/unidoc/unioffice/v2/common/logger";_e "github.com/unidoc/unioffice/v2/schema/schemas.microsoft.com/office/word/2018/wordml";_eb "github.com/unidoc/unioffice/v2/schema/soo/ofc/sharedTypes";
_b "time";);func (_cc *CT_CommentExtensible )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _cc .DateUtcAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0063\u0065\u003a\u0064\u0061\u0074\u0065\u0055\u0074\u0063"},Value :_eb .FormatDateTime (*_cc .DateUtcAttr )});
};if _cc .IntelligentPlaceholderAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0063e\u003a\u0069\u006e\u0074e\u006c\u006c\u0069\u0067\u0065n\u0074P\u006ca\u0063\u0065\u0068\u006f\u006c\u0064\u0065r"},Value :_cb .Sprintf ("\u0025\u0076",*_cc .IntelligentPlaceholderAttr )});
};e .EncodeToken (start );if _cc .ExtLst !=nil {_f :=_c .StartElement {Name :_c .Name {Local :"\u0063e\u003a\u0065\u0078\u0074\u004c\u0073t"}};e .EncodeElement (_cc .ExtLst ,_f );};e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func NewCT_CommentsExtensible ()*CT_CommentsExtensible {_ccg :=&CT_CommentsExtensible {};
return _ccg };

// ValidateWithPath validates the CT_CommentExtensible and its children, prefixing error messages with path
func (_da *CT_CommentExtensible )ValidateWithPath (path string )error {if _da .IntelligentPlaceholderAttr !=nil {if _ad :=_da .IntelligentPlaceholderAttr .ValidateWithPath (path +"/\u0049\u006e\u0074\u0065\u006c\u006ci\u0067\u0065\u006e\u0074\u0050\u006c\u0061\u0063\u0065h\u006f\u006c\u0064e\u0072A\u0074\u0074\u0072");
_ad !=nil {return _ad ;};};if _da .ExtLst !=nil {if _ada :=_da .ExtLst .ValidateWithPath (path +"\u002fE\u0078\u0074\u004c\u0073\u0074");_ada !=nil {return _ada ;};};return nil ;};func NewCT_CommentExtensible ()*CT_CommentExtensible {_cf :=&CT_CommentExtensible {};
return _cf };type CT_CommentsExtensible struct{CommentExtensible []*CT_CommentExtensible ;ExtLst *_e .CT_ExtensionList ;};func NewCommentsExtensible ()*CommentsExtensible {_gd :=&CommentsExtensible {};_gd .CT_CommentsExtensible =*NewCT_CommentsExtensible ();
return _gd ;};type CT_CommentExtensible struct{DateUtcAttr *_b .Time ;IntelligentPlaceholderAttr *_eb .ST_OnOff ;ExtLst *_e .CT_ExtensionList ;};

// ValidateWithPath validates the CT_CommentsExtensible and its children, prefixing error messages with path
func (_ea *CT_CommentsExtensible )ValidateWithPath (path string )error {for _ffg ,_ee :=range _ea .CommentExtensible {if _bb :=_ee .ValidateWithPath (_cb .Sprintf ("\u0025s\u002f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065\u005b\u0025\u0064\u005d",path ,_ffg ));
_bb !=nil {return _bb ;};};if _ea .ExtLst !=nil {if _gga :=_ea .ExtLst .ValidateWithPath (path +"\u002fE\u0078\u0074\u004c\u0073\u0074");_gga !=nil {return _gga ;};};return nil ;};func (_dc *CT_CommentsExtensible )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_ef :for {_bf ,_gc :=d .Token ();
if _gc !=nil {return _gc ;};switch _df :=_bf .(type ){case _c .StartElement :switch _df .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074\u0065\u006es\u0069\u0062\u006c\u0065"}:_dae :=NewCT_CommentExtensible ();
if _aff :=d .DecodeElement (_dae ,&_df );_aff !=nil {return _aff ;};_dc .CommentExtensible =append (_dc .CommentExtensible ,_dae );case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0065\u0078\u0074\u004c\u0073\u0074"}:_dc .ExtLst =_e .NewCT_ExtensionList ();
if _bcg :=d .DecodeElement (_dc .ExtLst ,&_df );_bcg !=nil {return _bcg ;};default:_g .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u0062\u006c\u0065\u0020\u0025\u0076",_df .Name );
if _ge :=d .Skip ();_ge !=nil {return _ge ;};};case _c .EndElement :break _ef ;case _c .CharData :};};return nil ;};func (_fd *CT_CommentsExtensible )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {e .EncodeToken (start );if _fd .CommentExtensible !=nil {_afcb :=_c .StartElement {Name :_c .Name {Local :"c\u0065:\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0045x\u0074\u0065\u006e\u0073ib\u006c\u0065"}};
for _ ,_aa :=range _fd .CommentExtensible {e .EncodeElement (_aa ,_afcb );};};if _fd .ExtLst !=nil {_ga :=_c .StartElement {Name :_c .Name {Local :"\u0063e\u003a\u0065\u0078\u0074\u004c\u0073t"}};e .EncodeElement (_fd .ExtLst ,_ga );};e .EncodeToken (_c .EndElement {Name :start .Name });
return nil ;};

// ValidateWithPath validates the CommentsExtensible and its children, prefixing error messages with path
func (_ebe *CommentsExtensible )ValidateWithPath (path string )error {if _ccc :=_ebe .CT_CommentsExtensible .ValidateWithPath (path );_ccc !=nil {return _ccc ;};return nil ;};type CommentsExtensible struct{CT_CommentsExtensible };

// Validate validates the CT_CommentsExtensible and its children
func (_ac *CT_CommentsExtensible )Validate ()error {return _ac .ValidateWithPath ("C\u0054\u005f\u0043\u006fmm\u0065n\u0074\u0073\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065");};func (_be *CT_CommentExtensible )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for _ ,_ff :=range start .Attr {if _ff .Name .Local =="\u0064a\u0074\u0065\u0055\u0074\u0063"{_ae ,_d :=ParseStdlibTime (_ff .Value );
if _d !=nil {return _d ;};_be .DateUtcAttr =&_ae ;continue ;};if _ff .Name .Local =="\u0069\u006e\u0074\u0065ll\u0069\u0067\u0065\u006e\u0074\u0050\u006c\u0061\u0063\u0065\u0068\u006f\u006c\u0064e\u0072"{_dd ,_dg :=ParseUnionST_OnOff (_ff .Value );if _dg !=nil {return _dg ;
};_be .IntelligentPlaceholderAttr =&_dd ;continue ;};};_afc :for {_bc ,_dgf :=d .Token ();if _dgf !=nil {return _dgf ;};switch _ce :=_bc .(type ){case _c .StartElement :switch _ce .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0065\u0078\u0074\u004c\u0073\u0074"}:_be .ExtLst =_e .NewCT_ExtensionList ();
if _ba :=d .DecodeElement (_be .ExtLst ,&_ce );_ba !=nil {return _ba ;};default:_g .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u0062\u006c\u0065\u0020\u0025\u0076",_ce .Name );
if _ebc :=d .Skip ();_ebc !=nil {return _ebc ;};};case _c .EndElement :break _afc ;case _c .CharData :};};return nil ;};

// Validate validates the CommentsExtensible and its children
func (_dgeg *CommentsExtensible )Validate ()error {return _dgeg .ValidateWithPath ("\u0043o\u006dm\u0065\u006e\u0074\u0073\u0045x\u0074\u0065n\u0073\u0069\u0062\u006c\u0065");};func ParseStdlibTime (s string )(_b .Time ,error ){return _eb .ParseStdlibTime (s )};
func (_ebd *CommentsExtensible )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006c\u006e\u0073\u003a\u0063\u0065"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0077"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="c\u0065\u003a\u0063\u006fmm\u0065n\u0074\u0073\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065";return _ebd .CT_CommentsExtensible .MarshalXML (e ,start );};

// Validate validates the CT_CommentExtensible and its children
func (_gg *CT_CommentExtensible )Validate ()error {return _gg .ValidateWithPath ("C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045x\u0074\u0065\u006e\u0073ib\u006c\u0065");};func (_ffd *CommentsExtensible )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_ffd .CT_CommentsExtensible =*NewCT_CommentsExtensible ();
_db :for {_ffa ,_acb :=d .Token ();if _acb !=nil {return _acb ;};switch _eac :=_ffa .(type ){case _c .StartElement :switch _eac .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074\u0065\u006es\u0069\u0062\u006c\u0065"}:_cd :=NewCT_CommentExtensible ();
if _cbf :=d .DecodeElement (_cd ,&_eac );_cbf !=nil {return _cbf ;};_ffd .CommentExtensible =append (_ffd .CommentExtensible ,_cd );case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0065\u0078\u0074\u004c\u0073\u0074"}:_ffd .ExtLst =_e .NewCT_ExtensionList ();
if _ec :=d .DecodeElement (_ffd .ExtLst ,&_eac );_ec !=nil {return _ec ;};default:_g .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045x\u0074\u0065\u006e\u0073\u0069\u0062\u006c\u0065\u0020\u0025\u0076",_eac .Name );
if _ecd :=d .Skip ();_ecd !=nil {return _ecd ;};};case _c .EndElement :break _db ;case _c .CharData :};};return nil ;};func ParseUnionST_OnOff (s string )(_eb .ST_OnOff ,error ){return _eb .ParseUnionST_OnOff (s )};func init (){_ag .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078","C\u0054\u005f\u0043\u006fmm\u0065n\u0074\u0073\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065",NewCT_CommentsExtensible );
_ag .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078","C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045x\u0074\u0065\u006e\u0073ib\u006c\u0065",NewCT_CommentExtensible );
_ag .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078","\u0063o\u006dm\u0065\u006e\u0074\u0073\u0045x\u0074\u0065n\u0073\u0069\u0062\u006c\u0065",NewCommentsExtensible );
};