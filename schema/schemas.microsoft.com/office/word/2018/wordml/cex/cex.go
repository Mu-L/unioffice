//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package cex ;import (_d "encoding/xml";_c "fmt";_e "github.com/unidoc/unioffice/v2";_aa "github.com/unidoc/unioffice/v2/common/logger";_g "github.com/unidoc/unioffice/v2/schema/schemas.microsoft.com/office/word/2018/wordml";_ee "github.com/unidoc/unioffice/v2/schema/soo/ofc/sharedTypes";
_a "time";);

// Validate validates the CT_CommentExtensible and its children
func (_ba *CT_CommentExtensible )Validate ()error {return _ba .ValidateWithPath ("C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045x\u0074\u0065\u006e\u0073ib\u006c\u0065");};func (_cb *CT_CommentsExtensible )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_cfab :for {_cged ,_cbg :=d .Token ();
if _cbg !=nil {return _cbg ;};switch _ce :=_cged .(type ){case _d .StartElement :switch _ce .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074\u0065\u006es\u0069\u0062\u006c\u0065"}:_fa :=NewCT_CommentExtensible ();
if _ff :=d .DecodeElement (_fa ,&_ce );_ff !=nil {return _ff ;};_cb .CommentExtensible =append (_cb .CommentExtensible ,_fa );case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0065\u0078\u0074\u004c\u0073\u0074"}:_cb .ExtLst =_g .NewCT_ExtensionList ();
if _ed :=d .DecodeElement (_cb .ExtLst ,&_ce );_ed !=nil {return _ed ;};default:_aa .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u0062\u006c\u0065\u0020\u0025\u0076",_ce .Name );
if _cbe :=d .Skip ();_cbe !=nil {return _cbe ;};};case _d .EndElement :break _cfab ;case _d .CharData :};};return nil ;};type CT_CommentExtensible struct{DateUtcAttr *_a .Time ;IntelligentPlaceholderAttr *_ee .ST_OnOff ;ExtLst *_g .CT_ExtensionList ;};
func NewCT_CommentExtensible ()*CT_CommentExtensible {_cf :=&CT_CommentExtensible {};return _cf };

// ValidateWithPath validates the CommentsExtensible and its children, prefixing error messages with path
func (_bea *CommentsExtensible )ValidateWithPath (path string )error {if _gbf :=_bea .CT_CommentsExtensible .ValidateWithPath (path );_gbf !=nil {return _gbf ;};return nil ;};func NewCommentsExtensible ()*CommentsExtensible {_bcc :=&CommentsExtensible {};
_bcc .CT_CommentsExtensible =*NewCT_CommentsExtensible ();return _bcc ;};func ParseUnionST_OnOff (s string )(_ee .ST_OnOff ,error ){return _ee .ParseUnionST_OnOff (s )};func (_dg *CT_CommentsExtensible )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {e .EncodeToken (start );
if _dg .CommentExtensible !=nil {_cge :=_d .StartElement {Name :_d .Name {Local :"c\u0065:\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0045x\u0074\u0065\u006e\u0073ib\u006c\u0065"}};for _ ,_baf :=range _dg .CommentExtensible {e .EncodeElement (_baf ,_cge );
};};if _dg .ExtLst !=nil {_cfg :=_d .StartElement {Name :_d .Name {Local :"\u0063e\u003a\u0065\u0078\u0074\u004c\u0073t"}};e .EncodeElement (_dg .ExtLst ,_cfg );};e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_eg *CT_CommentExtensible )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _eg .DateUtcAttr !=nil {start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0063\u0065\u003a\u0064\u0061\u0074\u0065\u0055\u0074\u0063"},Value :_ee .FormatDateTime (*_eg .DateUtcAttr )});
};if _eg .IntelligentPlaceholderAttr !=nil {start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0063e\u003a\u0069\u006e\u0074e\u006c\u006c\u0069\u0067\u0065n\u0074P\u006ca\u0063\u0065\u0068\u006f\u006c\u0064\u0065r"},Value :_c .Sprintf ("\u0025\u0076",*_eg .IntelligentPlaceholderAttr )});
};e .EncodeToken (start );if _eg .ExtLst !=nil {_aad :=_d .StartElement {Name :_d .Name {Local :"\u0063e\u003a\u0065\u0078\u0074\u004c\u0073t"}};e .EncodeElement (_eg .ExtLst ,_aad );};e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};
func NewCT_CommentsExtensible ()*CT_CommentsExtensible {_agc :=&CT_CommentsExtensible {};return _agc };type CommentsExtensible struct{CT_CommentsExtensible };

// Validate validates the CommentsExtensible and its children
func (_eef *CommentsExtensible )Validate ()error {return _eef .ValidateWithPath ("\u0043o\u006dm\u0065\u006e\u0074\u0073\u0045x\u0074\u0065n\u0073\u0069\u0062\u006c\u0065");};func (_bfa *CommentsExtensible )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_bfa .CT_CommentsExtensible =*NewCT_CommentsExtensible ();
_cfae :for {_ae ,_bg :=d .Token ();if _bg !=nil {return _bg ;};switch _ggf :=_ae .(type ){case _d .StartElement :switch _ggf .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074\u0065\u006es\u0069\u0062\u006c\u0065"}:_bfe :=NewCT_CommentExtensible ();
if _be :=d .DecodeElement (_bfe ,&_ggf );_be !=nil {return _be ;};_bfa .CommentExtensible =append (_bfa .CommentExtensible ,_bfe );case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0065\u0078\u0074\u004c\u0073\u0074"}:_bfa .ExtLst =_g .NewCT_ExtensionList ();
if _gba :=d .DecodeElement (_bfa .ExtLst ,&_ggf );_gba !=nil {return _gba ;};default:_aa .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045x\u0074\u0065\u006e\u0073\u0069\u0062\u006c\u0065\u0020\u0025\u0076",_ggf .Name );
if _eb :=d .Skip ();_eb !=nil {return _eb ;};};case _d .EndElement :break _cfae ;case _d .CharData :};};return nil ;};

// Validate validates the CT_CommentsExtensible and its children
func (_bad *CT_CommentsExtensible )Validate ()error {return _bad .ValidateWithPath ("C\u0054\u005f\u0043\u006fmm\u0065n\u0074\u0073\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065");};

// ValidateWithPath validates the CT_CommentExtensible and its children, prefixing error messages with path
func (_bc *CT_CommentExtensible )ValidateWithPath (path string )error {if _bc .IntelligentPlaceholderAttr !=nil {if _af :=_bc .IntelligentPlaceholderAttr .ValidateWithPath (path +"/\u0049\u006e\u0074\u0065\u006c\u006ci\u0067\u0065\u006e\u0074\u0050\u006c\u0061\u0063\u0065h\u006f\u006c\u0064e\u0072A\u0074\u0074\u0072");
_af !=nil {return _af ;};};if _bc .ExtLst !=nil {if _gc :=_bc .ExtLst .ValidateWithPath (path +"\u002fE\u0078\u0074\u004c\u0073\u0074");_gc !=nil {return _gc ;};};return nil ;};type CT_CommentsExtensible struct{CommentExtensible []*CT_CommentExtensible ;
ExtLst *_g .CT_ExtensionList ;};

// ValidateWithPath validates the CT_CommentsExtensible and its children, prefixing error messages with path
func (_bf *CT_CommentsExtensible )ValidateWithPath (path string )error {for _ac ,_bd :=range _bf .CommentExtensible {if _gg :=_bd .ValidateWithPath (_c .Sprintf ("\u0025s\u002f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065\u005b\u0025\u0064\u005d",path ,_ac ));
_gg !=nil {return _gg ;};};if _bf .ExtLst !=nil {if _baff :=_bf .ExtLst .ValidateWithPath (path +"\u002fE\u0078\u0074\u004c\u0073\u0074");_baff !=nil {return _baff ;};};return nil ;};func ParseStdlibTime (s string )(_a .Time ,error ){return _ee .ParseStdlibTime (s )};
func (_gd *CT_CommentExtensible )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for _ ,_gf :=range start .Attr {if _gf .Name .Local =="\u0064a\u0074\u0065\u0055\u0074\u0063"{_dcd ,_cfa :=ParseStdlibTime (_gf .Value );if _cfa !=nil {return _cfa ;
};_gd .DateUtcAttr =&_dcd ;continue ;};if _gf .Name .Local =="\u0069\u006e\u0074\u0065ll\u0069\u0067\u0065\u006e\u0074\u0050\u006c\u0061\u0063\u0065\u0068\u006f\u006c\u0064e\u0072"{_ea ,_gb :=ParseUnionST_OnOff (_gf .Value );if _gb !=nil {return _gb ;};
_gd .IntelligentPlaceholderAttr =&_ea ;continue ;};};_ec :for {_b ,_df :=d .Token ();if _df !=nil {return _df ;};switch _ag :=_b .(type ){case _d .StartElement :switch _ag .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0065\u0078\u0074\u004c\u0073\u0074"}:_gd .ExtLst =_g .NewCT_ExtensionList ();
if _cg :=d .DecodeElement (_gd .ExtLst ,&_ag );_cg !=nil {return _cg ;};default:_aa .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u0062\u006c\u0065\u0020\u0025\u0076",_ag .Name );
if _fb :=d .Skip ();_fb !=nil {return _fb ;};};case _d .EndElement :break _ec ;case _d .CharData :};};return nil ;};func (_fg *CommentsExtensible )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078"});
start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078\u006d\u006c\u006e\u0073\u003a\u0063\u0065"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078"});
start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"});
start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0077"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"});
start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="c\u0065\u003a\u0063\u006fmm\u0065n\u0074\u0073\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065";return _fg .CT_CommentsExtensible .MarshalXML (e ,start );};func init (){_e .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078","C\u0054\u005f\u0043\u006fmm\u0065n\u0074\u0073\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065",NewCT_CommentsExtensible );
_e .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078","C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045x\u0074\u0065\u006e\u0073ib\u006c\u0065",NewCT_CommentExtensible );
_e .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078","\u0063o\u006dm\u0065\u006e\u0074\u0073\u0045x\u0074\u0065n\u0073\u0069\u0062\u006c\u0065",NewCommentsExtensible );
};