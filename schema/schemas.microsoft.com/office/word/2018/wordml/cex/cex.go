//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package cex ;import (_e "encoding/xml";_f "fmt";_c "github.com/unidoc/unioffice";_b "github.com/unidoc/unioffice/common/logger";_cc "github.com/unidoc/unioffice/schema/schemas.microsoft.com/office/word/2018/wordml";_cg "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";
_g "time";);

// Validate validates the CT_CommentsExtensible and its children
func (_ea *CT_CommentsExtensible )Validate ()error {return _ea .ValidateWithPath ("C\u0054\u005f\u0043\u006fmm\u0065n\u0074\u0073\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065");};func NewCT_CommentExtensible ()*CT_CommentExtensible {_fg :=&CT_CommentExtensible {};
return _fg };type CT_CommentsExtensible struct{CommentExtensible []*CT_CommentExtensible ;ExtLst *_cc .CT_ExtensionList ;};func ParseUnionST_OnOff (s string )(_cg .ST_OnOff ,error ){return _cg .ParseUnionST_OnOff (s )};func (_a *CT_CommentExtensible )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for _ ,_af :=range start .Attr {if _af .Name .Local =="\u0064a\u0074\u0065\u0055\u0074\u0063"{_ed ,_be :=ParseStdlibTime (_af .Value );
if _be !=nil {return _be ;};_a .DateUtcAttr =&_ed ;continue ;};if _af .Name .Local =="\u0069\u006e\u0074\u0065ll\u0069\u0067\u0065\u006e\u0074\u0050\u006c\u0061\u0063\u0065\u0068\u006f\u006c\u0064e\u0072"{_bg ,_df :=ParseUnionST_OnOff (_af .Value );if _df !=nil {return _df ;
};_a .IntelligentPlaceholderAttr =&_bg ;continue ;};};_fc :for {_eg ,_bb :=d .Token ();if _bb !=nil {return _bb ;};switch _dc :=_eg .(type ){case _e .StartElement :switch _dc .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0065\u0078\u0074\u004c\u0073\u0074"}:_a .ExtLst =_cc .NewCT_ExtensionList ();
if _de :=d .DecodeElement (_a .ExtLst ,&_dc );_de !=nil {return _de ;};default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u0062\u006c\u0065\u0020\u0025\u0076",_dc .Name );
if _gd :=d .Skip ();_gd !=nil {return _gd ;};};case _e .EndElement :break _fc ;case _e .CharData :};};return nil ;};

// ValidateWithPath validates the CT_CommentExtensible and its children, prefixing error messages with path
func (_gb *CT_CommentExtensible )ValidateWithPath (path string )error {if _gb .IntelligentPlaceholderAttr !=nil {if _gc :=_gb .IntelligentPlaceholderAttr .ValidateWithPath (path +"/\u0049\u006e\u0074\u0065\u006c\u006ci\u0067\u0065\u006e\u0074\u0050\u006c\u0061\u0063\u0065h\u006f\u006c\u0064e\u0072A\u0074\u0074\u0072");
_gc !=nil {return _gc ;};};if _gb .ExtLst !=nil {if _ede :=_gb .ExtLst .ValidateWithPath (path +"\u002fE\u0078\u0074\u004c\u0073\u0074");_ede !=nil {return _ede ;};};return nil ;};func NewCT_CommentsExtensible ()*CT_CommentsExtensible {_da :=&CT_CommentsExtensible {};
return _da };func ParseStdlibTime (s string )(_g .Time ,error ){return _g .Time {},nil };func NewCommentsExtensible ()*CommentsExtensible {_baa :=&CommentsExtensible {};_baa .CT_CommentsExtensible =*NewCT_CommentsExtensible ();return _baa ;};func (_ba *CT_CommentExtensible )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {if _ba .DateUtcAttr !=nil {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0063\u0065\u003a\u0064\u0061\u0074\u0065\u0055\u0074\u0063"},Value :_f .Sprintf ("\u0025\u0076",*_ba .DateUtcAttr )});
};if _ba .IntelligentPlaceholderAttr !=nil {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0063e\u003a\u0069\u006e\u0074e\u006c\u006c\u0069\u0067\u0065n\u0074P\u006ca\u0063\u0065\u0068\u006f\u006c\u0064\u0065r"},Value :_f .Sprintf ("\u0025\u0076",*_ba .IntelligentPlaceholderAttr )});
};e .EncodeToken (start );if _ba .ExtLst !=nil {_bc :=_e .StartElement {Name :_e .Name {Local :"\u0063e\u003a\u0065\u0078\u0074\u004c\u0073t"}};e .EncodeElement (_ba .ExtLst ,_bc );};e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the CommentsExtensible and its children, prefixing error messages with path
func (_gda *CommentsExtensible )ValidateWithPath (path string )error {if _gcd :=_gda .CT_CommentsExtensible .ValidateWithPath (path );_gcd !=nil {return _gcd ;};return nil ;};type CommentsExtensible struct{CT_CommentsExtensible };func (_ag *CT_CommentsExtensible )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {e .EncodeToken (start );
if _ag .CommentExtensible !=nil {_ff :=_e .StartElement {Name :_e .Name {Local :"c\u0065:\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0045x\u0074\u0065\u006e\u0073ib\u006c\u0065"}};for _ ,_ce :=range _ag .CommentExtensible {e .EncodeElement (_ce ,_ff );
};};if _ag .ExtLst !=nil {_ceb :=_e .StartElement {Name :_e .Name {Local :"\u0063e\u003a\u0065\u0078\u0074\u004c\u0073t"}};e .EncodeElement (_ag .ExtLst ,_ceb );};e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_cce *CT_CommentsExtensible )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_bcf :for {_beb ,_dd :=d .Token ();
if _dd !=nil {return _dd ;};switch _ccb :=_beb .(type ){case _e .StartElement :switch _ccb .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074\u0065\u006es\u0069\u0062\u006c\u0065"}:_egb :=NewCT_CommentExtensible ();
if _fa :=d .DecodeElement (_egb ,&_ccb );_fa !=nil {return _fa ;};_cce .CommentExtensible =append (_cce .CommentExtensible ,_egb );case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0065\u0078\u0074\u004c\u0073\u0074"}:_cce .ExtLst =_cc .NewCT_ExtensionList ();
if _ca :=d .DecodeElement (_cce .ExtLst ,&_ccb );_ca !=nil {return _ca ;};default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u0062\u006c\u0065\u0020\u0025\u0076",_ccb .Name );
if _dg :=d .Skip ();_dg !=nil {return _dg ;};};case _e .EndElement :break _bcf ;case _e .CharData :};};return nil ;};func (_fad *CommentsExtensible )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_fad .CT_CommentsExtensible =*NewCT_CommentsExtensible ();
_bec :for {_fb ,_ecg :=d .Token ();if _ecg !=nil {return _ecg ;};switch _def :=_fb .(type ){case _e .StartElement :switch _def .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074\u0065\u006es\u0069\u0062\u006c\u0065"}:_fe :=NewCT_CommentExtensible ();
if _db :=d .DecodeElement (_fe ,&_def );_db !=nil {return _db ;};_fad .CommentExtensible =append (_fad .CommentExtensible ,_fe );case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078",Local :"\u0065\u0078\u0074\u004c\u0073\u0074"}:_fad .ExtLst =_cc .NewCT_ExtensionList ();
if _bdd :=d .DecodeElement (_fad .ExtLst ,&_def );_bdd !=nil {return _bdd ;};default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045x\u0074\u0065\u006e\u0073\u0069\u0062\u006c\u0065\u0020\u0025\u0076",_def .Name );
if _cae :=d .Skip ();_cae !=nil {return _cae ;};};case _e .EndElement :break _bec ;case _e .CharData :};};return nil ;};

// Validate validates the CT_CommentExtensible and its children
func (_gf *CT_CommentExtensible )Validate ()error {return _gf .ValidateWithPath ("C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045x\u0074\u0065\u006e\u0073ib\u006c\u0065");};func (_ec *CommentsExtensible )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078"});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078\u006d\u006c\u006e\u0073\u003a\u0063\u0065"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078"});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0077"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="c\u0065\u003a\u0063\u006fmm\u0065n\u0074\u0073\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065";return _ec .CT_CommentsExtensible .MarshalXML (e ,start );};

// Validate validates the CommentsExtensible and its children
func (_ab *CommentsExtensible )Validate ()error {return _ab .ValidateWithPath ("\u0043o\u006dm\u0065\u006e\u0074\u0073\u0045x\u0074\u0065n\u0073\u0069\u0062\u006c\u0065");};type CT_CommentExtensible struct{DateUtcAttr *_g .Time ;IntelligentPlaceholderAttr *_cg .ST_OnOff ;
ExtLst *_cc .CT_ExtensionList ;};

// ValidateWithPath validates the CT_CommentsExtensible and its children, prefixing error messages with path
func (_bd *CT_CommentsExtensible )ValidateWithPath (path string )error {for _dcd ,_cd :=range _bd .CommentExtensible {if _edd :=_cd .ValidateWithPath (_f .Sprintf ("\u0025s\u002f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065\u005b\u0025\u0064\u005d",path ,_dcd ));
_edd !=nil {return _edd ;};};if _bd .ExtLst !=nil {if _cf :=_bd .ExtLst .ValidateWithPath (path +"\u002fE\u0078\u0074\u004c\u0073\u0074");_cf !=nil {return _cf ;};};return nil ;};func init (){_c .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078","C\u0054\u005f\u0043\u006fmm\u0065n\u0074\u0073\u0045\u0078\u0074e\u006e\u0073\u0069\u0062\u006c\u0065",NewCT_CommentsExtensible );
_c .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078","C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0045x\u0074\u0065\u006e\u0073ib\u006c\u0065",NewCT_CommentExtensible );
_c .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002ec\u006f\u006d\u002f\u006f\u0066fi\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c\u002f\u0063\u0065\u0078","\u0063o\u006dm\u0065\u006e\u0074\u0073\u0045x\u0074\u0065n\u0073\u0069\u0062\u006c\u0065",NewCommentsExtensible );
};