//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wordml ;import (_dg "encoding/xml";_dc "fmt";_b "github.com/unidoc/unioffice/v2";_c "github.com/unidoc/unioffice/v2/common/logger";_cc "github.com/unidoc/unioffice/v2/schema/soo/dml";_g "github.com/unidoc/unioffice/v2/schema/soo/ofc/sharedTypes";
_e "time";);func (_gf *CT_ExtensionList )MarshalXML (e *_dg .Encoder ,start _dg .StartElement )error {start .Name .Local ="\u0077\u006f\u003a\u0043T_\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074";e .EncodeToken (start );
if _gf .Ext !=nil {_fac :=_dg .StartElement {Name :_dg .Name {Local :"\u0077\u006f\u003a\u0065\u0078\u0074"}};for _ ,_gg :=range _gf .Ext {e .EncodeElement (_gg ,_fac );};};e .EncodeToken (_dg .EndElement {Name :start .Name });return nil ;};func ParseUnionST_FixedPercentage (s string )(_cc .ST_FixedPercentage ,error ){return _cc .ParseUnionST_FixedPercentage (s );
};func ParseUnionST_AdjAngle (s string )(_cc .ST_AdjAngle ,error ){return _cc .ParseUnionST_AdjAngle (s )};func ParseUnionST_TextPoint (s string )(_cc .ST_TextPoint ,error ){return _cc .ParseUnionST_TextPoint (s )};func ParseUnionST_TextFontScalePercentOrPercentString (s string )(_cc .ST_TextFontScalePercentOrPercentString ,error ){return _cc .ParseUnionST_TextFontScalePercentOrPercentString (s );
};type Any interface{MarshalXML (_aa *_dg .Encoder ,_fb _dg .StartElement )error ;UnmarshalXML (_ed *_dg .Decoder ,_ce _dg .StartElement )error ;};func ParseUnionST_AdjCoordinate (s string )(_cc .ST_AdjCoordinate ,error ){return _cc .ParseUnionST_AdjCoordinate (s );
};func ParseUnionST_Coordinate (s string )(_cc .ST_Coordinate ,error ){return _cc .ParseUnionST_Coordinate (s );};func ParseUnionST_Percentage (s string )(_cc .ST_Percentage ,error ){return _cc .ParseUnionST_Percentage (s );};func (_gc *CT_Extension )MarshalXML (e *_dg .Encoder ,start _dg .StartElement )error {if _gc .UriAttr !=nil {start .Attr =append (start .Attr ,_dg .Attr {Name :_dg .Name {Local :"\u0077\u006f\u003a\u0075\u0072\u0069"},Value :_dc .Sprintf ("\u0025\u0076",*_gc .UriAttr )});
};e .EncodeToken (start );if _gc .Any !=nil {_gc .Any .MarshalXML (e ,_dg .StartElement {});};e .EncodeToken (_dg .EndElement {Name :start .Name });return nil ;};func NewCT_Extension ()*CT_Extension {_gb :=&CT_Extension {};return _gb };func ParseUnionST_PositivePercentage (s string )(_cc .ST_PositivePercentage ,error ){return _cc .ParseUnionST_PositivePercentage (s );
};func ParseUnionST_PositiveFixedPercentage (s string )(_cc .ST_PositiveFixedPercentage ,error ){return _cc .ParseUnionST_PositiveFixedPercentage (s );};func ParseStdlibTime (s string )(_e .Time ,error ){return _g .ParseStdlibTime (s )};func _abb (_abe bool )uint8 {if _abe {return 1;
};return 0;};type CT_ExtensionList struct{Ext []*CT_Extension ;};func ParseUnionST_AnimationChartBuildType (s string )(_cc .ST_AnimationChartBuildType ,error ){return _cc .ParseUnionST_AnimationChartBuildType (s );};func ParseUnionST_TextSpacingPercentOrPercentString (s string )(_cc .ST_TextSpacingPercentOrPercentString ,error ){return _cc .ParseUnionST_TextSpacingPercentOrPercentString (s );
};

// Validate validates the CT_ExtensionList and its children
func (_fd *CT_ExtensionList )Validate ()error {return _fd .ValidateWithPath ("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074");};

// Validate validates the CT_Extension and its children
func (_ad *CT_Extension )Validate ()error {return _ad .ValidateWithPath ("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e");};func ParseUnionST_Coordinate32 (s string )(_cc .ST_Coordinate32 ,error ){return _cc .ParseUnionST_Coordinate32 (s );
};func ParseUnionST_AnimationDgmBuildType (s string )(_cc .ST_AnimationDgmBuildType ,error ){return _cc .ParseUnionST_AnimationDgmBuildType (s );};

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_ef *CT_Extension )ValidateWithPath (path string )error {return nil };func (_df *CT_Extension )UnmarshalXML (d *_dg .Decoder ,start _dg .StartElement )error {for _ ,_ag :=range start .Attr {if _ag .Name .Local =="\u0075\u0072\u0069"{_f :=_ag .Value ;
_df .UriAttr =&_f ;continue ;};};_be :for {_ae ,_ea :=d .Token ();if _ea !=nil {return _ea ;};switch _aed :=_ae .(type ){case _dg .StartElement :switch _aed .Name {default:if _fg ,_fa :=_b .CreateElement (_aed );_fa !=nil {return _fa ;}else {if _fe :=d .DecodeElement (_fg ,&_aed );
_fe !=nil {return _fe ;};_df .Any =_fg ;};};case _dg .EndElement :break _be ;case _dg .CharData :};};return nil ;};type CT_Extension struct{UriAttr *string ;Any _b .Any ;};func ParseUnionST_OnOff (s string )(_g .ST_OnOff ,error ){return _g .ST_OnOff {},nil };
func (_eag *CT_ExtensionList )UnmarshalXML (d *_dg .Decoder ,start _dg .StartElement )error {_bg :for {_bd ,_bf :=d .Token ();if _bf !=nil {return _bf ;};switch _gfc :=_bd .(type ){case _dg .StartElement :switch _gfc .Name {case _dg .Name {Space :"\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c",Local :"\u0065\u0078\u0074"}:_cd :=NewCT_Extension ();
if _ab :=d .DecodeElement (_cd ,&_gfc );_ab !=nil {return _ab ;};_eag .Ext =append (_eag .Ext ,_cd );default:_c .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v",_gfc .Name );
if _adb :=d .Skip ();_adb !=nil {return _adb ;};};case _dg .EndElement :break _bg ;case _dg .CharData :};};return nil ;};

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_cf *CT_ExtensionList )ValidateWithPath (path string )error {for _cg ,_de :=range _cf .Ext {if _dge :=_de .ValidateWithPath (_dc .Sprintf ("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d",path ,_cg ));_dge !=nil {return _dge ;};};return nil ;
};func NewCT_ExtensionList ()*CT_ExtensionList {_ec :=&CT_ExtensionList {};return _ec };func init (){_b .RegisterConstructor ("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c","\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e",NewCT_Extension );
_b .RegisterConstructor ("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c","\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074",NewCT_ExtensionList );
};