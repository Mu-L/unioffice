//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wordml ;import (_d "encoding/xml";_f "fmt";_c "github.com/unidoc/unioffice";_ac "github.com/unidoc/unioffice/common/logger";_ab "github.com/unidoc/unioffice/schema/soo/dml";_dg "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_g "time";
);func ParseUnionST_PositivePercentage (s string )(_ab .ST_PositivePercentage ,error ){return _ab .ParseUnionST_PositivePercentage (s );};func ParseStdlibTime (s string )(_g .Time ,error ){return _g .Time {},nil };func ParseUnionST_AnimationDgmBuildType (s string )(_ab .ST_AnimationDgmBuildType ,error ){return _ab .ParseUnionST_AnimationDgmBuildType (s );
};

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_cga *CT_ExtensionList )ValidateWithPath (path string )error {for _ea ,_ga :=range _cga .Ext {if _ccg :=_ga .ValidateWithPath (_f .Sprintf ("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d",path ,_ea ));_ccg !=nil {return _ccg ;};};return nil ;
};func NewCT_ExtensionList ()*CT_ExtensionList {_aa :=&CT_ExtensionList {};return _aa };func ParseUnionST_Coordinate32 (s string )(_ab .ST_Coordinate32 ,error ){return _ab .ParseUnionST_Coordinate32 (s );};func ParseUnionST_PositiveFixedPercentage (s string )(_ab .ST_PositiveFixedPercentage ,error ){return _ab .ParseUnionST_PositiveFixedPercentage (s );
};func ParseUnionST_Percentage (s string )(_ab .ST_Percentage ,error ){return _ab .ParseUnionST_Percentage (s );};func (_gb *CT_ExtensionList )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_bd :for {_bcd ,_ge :=d .Token ();if _ge !=nil {return _ge ;
};switch _dc :=_bcd .(type ){case _d .StartElement :switch _dc .Name {case _d .Name {Space :"\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c",Local :"\u0065\u0078\u0074"}:_ege :=NewCT_Extension ();
if _abe :=d .DecodeElement (_ege ,&_dc );_abe !=nil {return _abe ;};_gb .Ext =append (_gb .Ext ,_ege );default:_ac .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v",_dc .Name );
if _ag :=d .Skip ();_ag !=nil {return _ag ;};};case _d .EndElement :break _bd ;case _d .CharData :};};return nil ;};func ParseUnionST_OnOff (s string )(_dg .ST_OnOff ,error ){return _dg .ST_OnOff {},nil };

// Validate validates the CT_Extension and its children
func (_cge *CT_Extension )Validate ()error {return _cge .ValidateWithPath ("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e");};type CT_Extension struct{UriAttr *string ;Any _c .Any ;};func ParseUnionST_AdjCoordinate (s string )(_ab .ST_AdjCoordinate ,error ){return _ab .ParseUnionST_AdjCoordinate (s );
};func (_cg *CT_Extension )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for _ ,_cb :=range start .Attr {if _cb .Name .Local =="\u0075\u0072\u0069"{_e ,_fg :=_cb .Value ,error (nil );if _fg !=nil {return _fg ;};_cg .UriAttr =&_e ;continue ;
};};_bb :for {_eg ,_fb :=d .Token ();if _fb !=nil {return _fb ;};switch _ad :=_eg .(type ){case _d .StartElement :switch _ad .Name {default:if _ba ,_ec :=_c .CreateElement (_ad );_ec !=nil {return _ec ;}else {if _fbf :=d .DecodeElement (_ba ,&_ad );_fbf !=nil {return _fbf ;
};_cg .Any =_ba ;};};case _d .EndElement :break _bb ;case _d .CharData :};};return nil ;};func (_cc *CT_Extension )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _cc .UriAttr !=nil {start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0077\u006f\u003a\u0075\u0072\u0069"},Value :_f .Sprintf ("\u0025\u0076",*_cc .UriAttr )});
};e .EncodeToken (start );if _cc .Any !=nil {_cc .Any .MarshalXML (e ,_d .StartElement {});};e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the CT_ExtensionList and its children
func (_dge *CT_ExtensionList )Validate ()error {return _dge .ValidateWithPath ("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074");};type CT_ExtensionList struct{Ext []*CT_Extension ;};func ParseUnionST_AnimationChartBuildType (s string )(_ab .ST_AnimationChartBuildType ,error ){return _ab .ParseUnionST_AnimationChartBuildType (s );
};func ParseUnionST_TextSpacingPercentOrPercentString (s string )(_ab .ST_TextSpacingPercentOrPercentString ,error ){return _ab .ParseUnionST_TextSpacingPercentOrPercentString (s );};

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_db *CT_Extension )ValidateWithPath (path string )error {return nil };func ParseUnionST_TextPoint (s string )(_ab .ST_TextPoint ,error ){return _ab .ParseUnionST_TextPoint (s )};func ParseUnionST_AdjAngle (s string )(_ab .ST_AdjAngle ,error ){return _ab .ParseUnionST_AdjAngle (s )};
func NewCT_Extension ()*CT_Extension {_gf :=&CT_Extension {};return _gf };func ParseUnionST_FixedPercentage (s string )(_ab .ST_FixedPercentage ,error ){return _ab .ParseUnionST_FixedPercentage (s );};func (_ff *CT_ExtensionList )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0077\u006f\u003a\u0043T_\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074";
e .EncodeToken (start );if _ff .Ext !=nil {_fc :=_d .StartElement {Name :_d .Name {Local :"\u0077\u006f\u003a\u0065\u0078\u0074"}};for _ ,_bc :=range _ff .Ext {e .EncodeElement (_bc ,_fc );};};e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;
};type Any interface{MarshalXML (_be *_d .Encoder ,_ae _d .StartElement )error ;UnmarshalXML (_gfg *_d .Decoder ,_ee _d .StartElement )error ;};func ParseUnionST_Coordinate (s string )(_ab .ST_Coordinate ,error ){return _ab .ParseUnionST_Coordinate (s );
};func ParseUnionST_TextFontScalePercentOrPercentString (s string )(_ab .ST_TextFontScalePercentOrPercentString ,error ){return _ab .ParseUnionST_TextFontScalePercentOrPercentString (s );};func _dce (_da bool )uint8 {if _da {return 1;};return 0;};func init (){_c .RegisterConstructor ("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c","\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e",NewCT_Extension );
_c .RegisterConstructor ("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0038\u002f\u0077\u006f\u0072\u0064\u006d\u006c","\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074",NewCT_ExtensionList );
};