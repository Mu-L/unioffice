//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_c "encoding/xml";_f "fmt";_e "github.com/unidoc/unioffice";);

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_gd *CT_Empty )ValidateWithPath (path string )error {return nil };func (_dfc *Textdata )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _dfc .CT_Rel .MarshalXML (e ,start );};func (_efa *Iscomment )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _efa .CT_Empty .MarshalXML (e ,start );};

// Validate validates the Iscomment and its children
func (_ffb *Iscomment )Validate ()error {return _ffb .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_fff *Textdata )ValidateWithPath (path string )error {if _fa :=_fff .CT_Rel .ValidateWithPath (path );_fa !=nil {return _fa ;};return nil ;};func (_ef *CT_Empty )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for {_dg ,_cg :=d .Token ();
if _cg !=nil {return _f .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_cg );};if _a ,_dgb :=_dg .(_c .EndElement );_dgb &&_a .Name ==start .Name {break ;};};return nil ;};type CT_Empty struct{};
func (_ce *Iscomment )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_ce .CT_Empty =*NewCT_Empty ();for {_dag ,_df :=d .Token ();if _df !=nil {return _f .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_df );
};if _af ,_adb :=_dag .(_c .EndElement );_adb &&_af .Name ==start .Name {break ;};};return nil ;};func (_ed *CT_Empty )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });
return nil ;};func (_fg *Textdata )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_fg .CT_Rel =*NewCT_Rel ();for _ ,_ae :=range start .Attr {if _ae .Name .Local =="\u0069\u0064"{_bb ,_bc :=_ae .Value ,error (nil );if _bc !=nil {return _bc ;
};_fg .IdAttr =&_bb ;continue ;};};for {_aad ,_aadc :=d .Token ();if _aadc !=nil {return _f .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_aadc );};if _ee ,_dcb :=_aad .(_c .EndElement );_dcb &&_ee .Name ==start .Name {break ;
};};return nil ;};type Textdata struct{CT_Rel };

// Validate validates the CT_Rel and its children
func (_aa *CT_Rel )Validate ()error {return _aa .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};func NewCT_Rel ()*CT_Rel {_ff :=&CT_Rel {};return _ff };

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_dgf *Iscomment )ValidateWithPath (path string )error {if _bd :=_dgf .CT_Empty .ValidateWithPath (path );_bd !=nil {return _bd ;};return nil ;};

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_da *CT_Rel )ValidateWithPath (path string )error {return nil };func (_dc *CT_Rel )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _dc .IdAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0069\u0064"},Value :_f .Sprintf ("\u0025\u0076",*_dc .IdAttr )});
};e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func (_ge *CT_Rel )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for _ ,_ab :=range start .Attr {if _ab .Name .Local =="\u0069\u0064"{_cgd ,_abe :=_ab .Value ,error (nil );
if _abe !=nil {return _abe ;};_ge .IdAttr =&_cgd ;continue ;};};for {_ad ,_b :=d .Token ();if _b !=nil {return _f .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_b );};if _bg ,_db :=_ad .(_c .EndElement );
_db &&_bg .Name ==start .Name {break ;};};return nil ;};func NewCT_Empty ()*CT_Empty {_g :=&CT_Empty {};return _g };type CT_Rel struct{IdAttr *string ;};type Iscomment struct{CT_Empty };func NewIscomment ()*Iscomment {_gf :=&Iscomment {};_gf .CT_Empty =*NewCT_Empty ();
return _gf };

// Validate validates the CT_Empty and its children
func (_edg *CT_Empty )Validate ()error {return _edg .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};func NewTextdata ()*Textdata {_ec :=&Textdata {};_ec .CT_Rel =*NewCT_Rel ();return _ec };

// Validate validates the Textdata and its children
func (_de *Textdata )Validate ()error {return _de .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};func init (){_e .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );
_e .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );
_e .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );
_e .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );
};