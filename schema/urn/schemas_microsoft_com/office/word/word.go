//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package word ;import (_a "encoding/xml";_f "fmt";_c "github.com/unidoc/unioffice/v2";_e "strconv";);func NewBorderbottom ()*Borderbottom {_g :=&Borderbottom {};_g .CT_Border =*NewCT_Border ();return _g ;};

// Validate validates the CT_AnchorLock and its children
func (_fe *CT_AnchorLock )Validate ()error {return _fe .ValidateWithPath ("\u0043\u0054\u005f\u0041\u006e\u0063\u0068\u006f\u0072\u004c\u006f\u0063\u006b");};

// Validate validates the Bordertop and its children
func (_dgb *Bordertop )Validate ()error {return _dgb .ValidateWithPath ("\u0042o\u0072\u0064\u0065\u0072\u0074\u006fp");};type Bordertop struct{CT_Border };func (_ef *Borderbottom )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_ef .CT_Border =*NewCT_Border ();
for _ ,_fbc :=range start .Attr {if _fbc .Name .Local =="\u0074\u0079\u0070\u0065"{_ef .TypeAttr .UnmarshalXMLAttr (_fbc );continue ;};if _fbc .Name .Local =="\u0077\u0069\u0064t\u0068"{_ed ,_gg :=_e .ParseUint (_fbc .Value ,10,32);if _gg !=nil {return _gg ;
};_dc :=uint32 (_ed );_ef .WidthAttr =&_dc ;continue ;};if _fbc .Name .Local =="\u0073\u0068\u0061\u0064\u006f\u0077"{_ef .ShadowAttr .UnmarshalXMLAttr (_fbc );continue ;};};for {_ad ,_ggd :=d .Token ();if _ggd !=nil {return _f .Errorf ("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0042\u006f\u0072\u0064\u0065r\u0062\u006f\u0074\u0074\u006f\u006d\u003a\u0020\u0025\u0073",_ggd );
};if _dd ,_efc :=_ad .(_a .EndElement );_efc &&_dd .Name ==start .Name {break ;};};return nil ;};func (_eb *Bordertop )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_eb .CT_Border =*NewCT_Border ();for _ ,_eg :=range start .Attr {if _eg .Name .Local =="\u0074\u0079\u0070\u0065"{_eb .TypeAttr .UnmarshalXMLAttr (_eg );
continue ;};if _eg .Name .Local =="\u0077\u0069\u0064t\u0068"{_bad ,_edg :=_e .ParseUint (_eg .Value ,10,32);if _edg !=nil {return _edg ;};_efcc :=uint32 (_bad );_eb .WidthAttr =&_efcc ;continue ;};if _eg .Name .Local =="\u0073\u0068\u0061\u0064\u006f\u0077"{_eb .ShadowAttr .UnmarshalXMLAttr (_eg );
continue ;};};for {_ca ,_eae :=d .Token ();if _eae !=nil {return _f .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020B\u006f\u0072\u0064\u0065\u0072t\u006f\u0070\u003a\u0020\u0025\u0073",_eae );};if _bcf ,_ega :=_ca .(_a .EndElement );_ega &&_bcf .Name ==start .Name {break ;
};};return nil ;};func (_gba *CT_AnchorLock )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};type Borderright struct{CT_Border };func (_ddd *CT_AnchorLock )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_ff ,_gdd :=d .Token ();
if _gdd !=nil {return _f .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041n\u0063h\u006fr\u004c\u006f\u0063\u006b\u003a\u0020\u0025s",_gdd );};if _ee ,_cgd :=_ff .(_a .EndElement );_cgd &&_ee .Name ==start .Name {break ;};};return nil ;
};func NewAnchorlock ()*Anchorlock {_fb :=&Anchorlock {};_fb .CT_AnchorLock =*NewCT_AnchorLock ();return _fb ;};

// ValidateWithPath validates the Borderright and its children, prefixing error messages with path
func (_gdc *Borderright )ValidateWithPath (path string )error {if _agg :=_gdc .CT_Border .ValidateWithPath (path );_agg !=nil {return _agg ;};return nil ;};func NewBordertop ()*Bordertop {_de :=&Bordertop {};_de .CT_Border =*NewCT_Border ();return _de };
func (_fdb *CT_Wrap )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for _ ,_bfg :=range start .Attr {if _bfg .Name .Local =="\u0074\u0079\u0070\u0065"{_fdb .TypeAttr .UnmarshalXMLAttr (_bfg );continue ;};if _bfg .Name .Local =="\u0073\u0069\u0064\u0065"{_fdb .SideAttr .UnmarshalXMLAttr (_bfg );
continue ;};if _bfg .Name .Local =="\u0061n\u0063\u0068\u006f\u0072\u0078"{_fdb .AnchorxAttr .UnmarshalXMLAttr (_bfg );continue ;};if _bfg .Name .Local =="\u0061n\u0063\u0068\u006f\u0072\u0079"{_fdb .AnchoryAttr .UnmarshalXMLAttr (_bfg );continue ;};};
for {_ged ,_gfa :=d .Token ();if _gfa !=nil {return _f .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0057\u0072\u0061\u0070\u003a\u0020\u0025\u0073",_gfa );};if _fa ,_geb :=_ged .(_a .EndElement );_geb &&_fa .Name ==start .Name {break ;
};};return nil ;};type ST_WrapType byte ;const (ST_HorizontalAnchorUnset ST_HorizontalAnchor =0;ST_HorizontalAnchorMargin ST_HorizontalAnchor =1;ST_HorizontalAnchorPage ST_HorizontalAnchor =2;ST_HorizontalAnchorText ST_HorizontalAnchor =3;ST_HorizontalAnchorChar ST_HorizontalAnchor =4;
);

// ValidateWithPath validates the Bordertop and its children, prefixing error messages with path
func (_bf *Bordertop )ValidateWithPath (path string )error {if _gef :=_bf .CT_Border .ValidateWithPath (path );_gef !=nil {return _gef ;};return nil ;};func (_fcg *ST_WrapSide )UnmarshalXMLAttr (attr _a .Attr )error {switch attr .Value {case "":*_fcg =0;
case "\u0062\u006f\u0074\u0068":*_fcg =1;case "\u006c\u0065\u0066\u0074":*_fcg =2;case "\u0072\u0069\u0067h\u0074":*_fcg =3;case "\u006ca\u0072\u0067\u0065\u0073\u0074":*_fcg =4;};return nil ;};type ST_BorderShadow byte ;const (ST_BorderShadowUnset ST_BorderShadow =0;
ST_BorderShadowT ST_BorderShadow =1;ST_BorderShadowTrue ST_BorderShadow =2;ST_BorderShadowF ST_BorderShadow =3;ST_BorderShadowFalse ST_BorderShadow =4;);func (_aga *ST_VerticalAnchor )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_deg ,_dde :=d .Token ();
if _dde !=nil {return _dde ;};if _dea ,_def :=_deg .(_a .EndElement );_def &&_dea .Name ==start .Name {*_aga =1;return nil ;};if _cfa ,_aaa :=_deg .(_a .CharData );!_aaa {return _f .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_deg );
}else {switch string (_cfa ){case "":*_aga =0;case "\u006d\u0061\u0072\u0067\u0069\u006e":*_aga =1;case "\u0070\u0061\u0067\u0065":*_aga =2;case "\u0074\u0065\u0078\u0074":*_aga =3;case "\u006c\u0069\u006e\u0065":*_aga =4;};};_deg ,_dde =d .Token ();if _dde !=nil {return _dde ;
};if _bgb ,_dbd :=_deg .(_a .EndElement );_dbd &&_bgb .Name ==start .Name {return nil ;};return _f .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_deg );
};func (_acdc ST_BorderType )String ()string {switch _acdc {case 0:return "";case 1:return "\u006e\u006f\u006e\u0065";case 2:return "\u0073\u0069\u006e\u0067\u006c\u0065";case 3:return "\u0074\u0068\u0069c\u006b";case 4:return "\u0064\u006f\u0075\u0062\u006c\u0065";
case 5:return "\u0068\u0061\u0069\u0072\u006c\u0069\u006e\u0065";case 6:return "\u0064\u006f\u0074";case 7:return "\u0064\u0061\u0073\u0068";case 8:return "\u0064o\u0074\u0044\u0061\u0073\u0068";case 9:return "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074";
case 10:return "\u0074\u0072\u0069\u0070\u006c\u0065";case 11:return "\u0074\u0068\u0069\u006e\u0054\u0068\u0069\u0063\u006bS\u006d\u0061\u006c\u006c";case 12:return "\u0074\u0068\u0069\u0063\u006b\u0054\u0068\u0069\u006eS\u006d\u0061\u006c\u006c";case 13:return "t\u0068\u0069\u0063\u006bBe\u0074w\u0065\u0065\u006e\u0054\u0068i\u006e\u0053\u006d\u0061\u006c\u006c";
case 14:return "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k";case 15:return "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n";case 16:return "\u0074\u0068i\u0063\u006b\u0042e\u0074\u0077\u0065\u0065\u006e\u0054\u0068\u0069\u006e";case 17:return "\u0074\u0068\u0069\u006e\u0054\u0068\u0069\u0063\u006bL\u0061\u0072\u0067\u0065";
case 18:return "\u0074\u0068\u0069\u0063\u006b\u0054\u0068\u0069\u006eL\u0061\u0072\u0067\u0065";case 19:return "t\u0068\u0069\u0063\u006bBe\u0074w\u0065\u0065\u006e\u0054\u0068i\u006e\u004c\u0061\u0072\u0067\u0065";case 20:return "\u0077\u0061\u0076\u0065";
case 21:return "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065";case 22:return "d\u0061\u0073\u0068\u0065\u0064\u0053\u006d\u0061\u006c\u006c";case 23:return "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0053\u0074r\u006f\u006b\u0065\u0064";
case 24:return "\u0074\u0068\u0072e\u0065\u0044\u0045\u006d\u0062\u006f\u0073\u0073";case 25:return "\u0074\u0068\u0072\u0065\u0065\u0044\u0045\u006e\u0067\u0072\u0061\u0076\u0065";case 26:return "\u0048\u0054\u004d\u004c\u004f\u0075\u0074\u0073\u0065\u0074";
case 27:return "\u0048T\u004d\u004c\u0049\u006e\u0073\u0065t";};return "";};func (_faa *ST_WrapType )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_dca ,_cba :=d .Token ();if _cba !=nil {return _cba ;};if _faf ,_gbd :=_dca .(_a .EndElement );
_gbd &&_faf .Name ==start .Name {*_faa =1;return nil ;};if _ccce ,_bef :=_dca .(_a .CharData );!_bef {return _f .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_dca );
}else {switch string (_ccce ){case "":*_faa =0;case "\u0074\u006f\u0070A\u006e\u0064\u0042\u006f\u0074\u0074\u006f\u006d":*_faa =1;case "\u0073\u0071\u0075\u0061\u0072\u0065":*_faa =2;case "\u006e\u006f\u006e\u0065":*_faa =3;case "\u0074\u0069\u0067h\u0074":*_faa =4;
case "\u0074h\u0072\u006f\u0075\u0067\u0068":*_faa =5;};};_dca ,_cba =d .Token ();if _cba !=nil {return _cba ;};if _acb ,_efb :=_dca .(_a .EndElement );_efb &&_acb .Name ==start .Name {return nil ;};return _f .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_dca );
};func (_eed ST_WrapType )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return e .EncodeElement (_eed .String (),start );};type ST_BorderType byte ;func NewBorderright ()*Borderright {_gb :=&Borderright {};_gb .CT_Border =*NewCT_Border ();
return _gb ;};func (_geg ST_VerticalAnchor )MarshalXMLAttr (name _a .Name )(_a .Attr ,error ){_fce :=_a .Attr {};_fce .Name =name ;switch _geg {case ST_VerticalAnchorUnset :_fce .Value ="";case ST_VerticalAnchorMargin :_fce .Value ="\u006d\u0061\u0072\u0067\u0069\u006e";
case ST_VerticalAnchorPage :_fce .Value ="\u0070\u0061\u0067\u0065";case ST_VerticalAnchorText :_fce .Value ="\u0074\u0065\u0078\u0074";case ST_VerticalAnchorLine :_fce .Value ="\u006c\u0069\u006e\u0065";};return _fce ,nil ;};func (_afa ST_HorizontalAnchor )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return e .EncodeElement (_afa .String (),start );
};func (_cf *Wrap )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_cf .CT_Wrap =*NewCT_Wrap ();for _ ,_acg :=range start .Attr {if _acg .Name .Local =="\u0074\u0079\u0070\u0065"{_cf .TypeAttr .UnmarshalXMLAttr (_acg );continue ;};if _acg .Name .Local =="\u0073\u0069\u0064\u0065"{_cf .SideAttr .UnmarshalXMLAttr (_acg );
continue ;};if _acg .Name .Local =="\u0061n\u0063\u0068\u006f\u0072\u0078"{_cf .AnchorxAttr .UnmarshalXMLAttr (_acg );continue ;};if _acg .Name .Local =="\u0061n\u0063\u0068\u006f\u0072\u0079"{_cf .AnchoryAttr .UnmarshalXMLAttr (_acg );continue ;};};for {_fc ,_ada :=d .Token ();
if _ada !=nil {return _f .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u0057\u0072\u0061\u0070\u003a\u0020\u0025\u0073",_ada );};if _da ,_ggf :=_fc .(_a .EndElement );_ggf &&_da .Name ==start .Name {break ;};};return nil ;};func (_abe ST_BorderType )ValidateWithPath (path string )error {switch _abe {case 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27:default:return _f .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_abe ));
};return nil ;};func NewCT_Wrap ()*CT_Wrap {_gf :=&CT_Wrap {};return _gf };

// ValidateWithPath validates the CT_Border and its children, prefixing error messages with path
func (_bfa *CT_Border )ValidateWithPath (path string )error {if _gge :=_bfa .TypeAttr .ValidateWithPath (path +"\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r");_gge !=nil {return _gge ;};if _ggeg :=_bfa .ShadowAttr .ValidateWithPath (path +"/\u0053\u0068\u0061\u0064\u006f\u0077\u0041\u0074\u0074\u0072");
_ggeg !=nil {return _ggeg ;};return nil ;};func (_dcef *ST_BorderType )UnmarshalXMLAttr (attr _a .Attr )error {switch attr .Value {case "":*_dcef =0;case "\u006e\u006f\u006e\u0065":*_dcef =1;case "\u0073\u0069\u006e\u0067\u006c\u0065":*_dcef =2;case "\u0074\u0068\u0069c\u006b":*_dcef =3;
case "\u0064\u006f\u0075\u0062\u006c\u0065":*_dcef =4;case "\u0068\u0061\u0069\u0072\u006c\u0069\u006e\u0065":*_dcef =5;case "\u0064\u006f\u0074":*_dcef =6;case "\u0064\u0061\u0073\u0068":*_dcef =7;case "\u0064o\u0074\u0044\u0061\u0073\u0068":*_dcef =8;
case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":*_dcef =9;case "\u0074\u0072\u0069\u0070\u006c\u0065":*_dcef =10;case "\u0074\u0068\u0069\u006e\u0054\u0068\u0069\u0063\u006bS\u006d\u0061\u006c\u006c":*_dcef =11;case "\u0074\u0068\u0069\u0063\u006b\u0054\u0068\u0069\u006eS\u006d\u0061\u006c\u006c":*_dcef =12;
case "t\u0068\u0069\u0063\u006bBe\u0074w\u0065\u0065\u006e\u0054\u0068i\u006e\u0053\u006d\u0061\u006c\u006c":*_dcef =13;case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":*_dcef =14;case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":*_dcef =15;case "\u0074\u0068i\u0063\u006b\u0042e\u0074\u0077\u0065\u0065\u006e\u0054\u0068\u0069\u006e":*_dcef =16;
case "\u0074\u0068\u0069\u006e\u0054\u0068\u0069\u0063\u006bL\u0061\u0072\u0067\u0065":*_dcef =17;case "\u0074\u0068\u0069\u0063\u006b\u0054\u0068\u0069\u006eL\u0061\u0072\u0067\u0065":*_dcef =18;case "t\u0068\u0069\u0063\u006bBe\u0074w\u0065\u0065\u006e\u0054\u0068i\u006e\u004c\u0061\u0072\u0067\u0065":*_dcef =19;
case "\u0077\u0061\u0076\u0065":*_dcef =20;case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":*_dcef =21;case "d\u0061\u0073\u0068\u0065\u0064\u0053\u006d\u0061\u006c\u006c":*_dcef =22;case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0053\u0074r\u006f\u006b\u0065\u0064":*_dcef =23;
case "\u0074\u0068\u0072e\u0065\u0044\u0045\u006d\u0062\u006f\u0073\u0073":*_dcef =24;case "\u0074\u0068\u0072\u0065\u0065\u0044\u0045\u006e\u0067\u0072\u0061\u0076\u0065":*_dcef =25;case "\u0048\u0054\u004d\u004c\u004f\u0075\u0074\u0073\u0065\u0074":*_dcef =26;
case "\u0048T\u004d\u004c\u0049\u006e\u0073\u0065t":*_dcef =27;};return nil ;};func (_bea *ST_BorderType )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_bbg ,_eaf :=d .Token ();if _eaf !=nil {return _eaf ;};if _cea ,_edeb :=_bbg .(_a .EndElement );
_edeb &&_cea .Name ==start .Name {*_bea =1;return nil ;};if _edab ,_baaf :=_bbg .(_a .CharData );!_baaf {return _f .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_bbg );
}else {switch string (_edab ){case "":*_bea =0;case "\u006e\u006f\u006e\u0065":*_bea =1;case "\u0073\u0069\u006e\u0067\u006c\u0065":*_bea =2;case "\u0074\u0068\u0069c\u006b":*_bea =3;case "\u0064\u006f\u0075\u0062\u006c\u0065":*_bea =4;case "\u0068\u0061\u0069\u0072\u006c\u0069\u006e\u0065":*_bea =5;
case "\u0064\u006f\u0074":*_bea =6;case "\u0064\u0061\u0073\u0068":*_bea =7;case "\u0064o\u0074\u0044\u0061\u0073\u0068":*_bea =8;case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":*_bea =9;case "\u0074\u0072\u0069\u0070\u006c\u0065":*_bea =10;
case "\u0074\u0068\u0069\u006e\u0054\u0068\u0069\u0063\u006bS\u006d\u0061\u006c\u006c":*_bea =11;case "\u0074\u0068\u0069\u0063\u006b\u0054\u0068\u0069\u006eS\u006d\u0061\u006c\u006c":*_bea =12;case "t\u0068\u0069\u0063\u006bBe\u0074w\u0065\u0065\u006e\u0054\u0068i\u006e\u0053\u006d\u0061\u006c\u006c":*_bea =13;
case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":*_bea =14;case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":*_bea =15;case "\u0074\u0068i\u0063\u006b\u0042e\u0074\u0077\u0065\u0065\u006e\u0054\u0068\u0069\u006e":*_bea =16;case "\u0074\u0068\u0069\u006e\u0054\u0068\u0069\u0063\u006bL\u0061\u0072\u0067\u0065":*_bea =17;
case "\u0074\u0068\u0069\u0063\u006b\u0054\u0068\u0069\u006eL\u0061\u0072\u0067\u0065":*_bea =18;case "t\u0068\u0069\u0063\u006bBe\u0074w\u0065\u0065\u006e\u0054\u0068i\u006e\u004c\u0061\u0072\u0067\u0065":*_bea =19;case "\u0077\u0061\u0076\u0065":*_bea =20;
case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":*_bea =21;case "d\u0061\u0073\u0068\u0065\u0064\u0053\u006d\u0061\u006c\u006c":*_bea =22;case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0053\u0074r\u006f\u006b\u0065\u0064":*_bea =23;
case "\u0074\u0068\u0072e\u0065\u0044\u0045\u006d\u0062\u006f\u0073\u0073":*_bea =24;case "\u0074\u0068\u0072\u0065\u0065\u0044\u0045\u006e\u0067\u0072\u0061\u0076\u0065":*_bea =25;case "\u0048\u0054\u004d\u004c\u004f\u0075\u0074\u0073\u0065\u0074":*_bea =26;
case "\u0048T\u004d\u004c\u0049\u006e\u0073\u0065t":*_bea =27;};};_bbg ,_eaf =d .Token ();if _eaf !=nil {return _eaf ;};if _ggeb ,_dae :=_bbg .(_a .EndElement );_dae &&_ggeb .Name ==start .Name {return nil ;};return _f .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_bbg );
};func (_fgd ST_WrapType )Validate ()error {return _fgd .ValidateWithPath ("")};

// ValidateWithPath validates the CT_AnchorLock and its children, prefixing error messages with path
func (_aec *CT_AnchorLock )ValidateWithPath (path string )error {return nil };

// Validate validates the Borderleft and its children
func (_ba *Borderleft )Validate ()error {return _ba .ValidateWithPath ("\u0042\u006f\u0072\u0064\u0065\u0072\u006c\u0065\u0066\u0074");};func (_bgc ST_BorderShadow )ValidateWithPath (path string )error {switch _bgc {case 0,1,2,3,4:default:return _f .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_bgc ));
};return nil ;};func (_cg *Anchorlock )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_cg .CT_AnchorLock =*NewCT_AnchorLock ();for {_fg ,_bb :=d .Token ();if _bb !=nil {return _f .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u006e\u0063\u0068\u006f\u0072\u006c\u006f\u0063\u006b\u003a\u0020%\u0073",_bb );
};if _d ,_ec :=_fg .(_a .EndElement );_ec &&_d .Name ==start .Name {break ;};};return nil ;};type Wrap struct{CT_Wrap };func (_gcf *Borderright )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064"});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="b\u006f\u0072\u0064\u0065\u0072\u0072\u0069\u0067\u0068\u0074";return _gcf .CT_Border .MarshalXML (e ,start );};

// Validate validates the Borderbottom and its children
func (_db *Borderbottom )Validate ()error {return _db .ValidateWithPath ("\u0042\u006f\u0072d\u0065\u0072\u0062\u006f\u0074\u0074\u006f\u006d");};func (_dag ST_BorderShadow )Validate ()error {return _dag .ValidateWithPath ("")};func (_efce ST_HorizontalAnchor )MarshalXMLAttr (name _a .Name )(_a .Attr ,error ){_acba :=_a .Attr {};
_acba .Name =name ;switch _efce {case ST_HorizontalAnchorUnset :_acba .Value ="";case ST_HorizontalAnchorMargin :_acba .Value ="\u006d\u0061\u0072\u0067\u0069\u006e";case ST_HorizontalAnchorPage :_acba .Value ="\u0070\u0061\u0067\u0065";case ST_HorizontalAnchorText :_acba .Value ="\u0074\u0065\u0078\u0074";
case ST_HorizontalAnchorChar :_acba .Value ="\u0063\u0068\u0061\u0072";};return _acba ,nil ;};func (_gedb *ST_WrapType )UnmarshalXMLAttr (attr _a .Attr )error {switch attr .Value {case "":*_gedb =0;case "\u0074\u006f\u0070A\u006e\u0064\u0042\u006f\u0074\u0074\u006f\u006d":*_gedb =1;
case "\u0073\u0071\u0075\u0061\u0072\u0065":*_gedb =2;case "\u006e\u006f\u006e\u0065":*_gedb =3;case "\u0074\u0069\u0067h\u0074":*_gedb =4;case "\u0074h\u0072\u006f\u0075\u0067\u0068":*_gedb =5;};return nil ;};type Borderbottom struct{CT_Border };func (_abg ST_BorderType )Validate ()error {return _abg .ValidateWithPath ("")};
func (_gdf *ST_BorderShadow )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_dgd ,_cgeg :=d .Token ();if _cgeg !=nil {return _cgeg ;};if _bbe ,_ebg :=_dgd .(_a .EndElement );_ebg &&_bbe .Name ==start .Name {*_gdf =1;return nil ;};if _cgca ,_fge :=_dgd .(_a .CharData );
!_fge {return _f .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_dgd );}else {switch string (_cgca ){case "":*_gdf =0;case "\u0074":*_gdf =1;
case "\u0074\u0072\u0075\u0065":*_gdf =2;case "\u0066":*_gdf =3;case "\u0066\u0061\u006cs\u0065":*_gdf =4;};};_dgd ,_cgeg =d .Token ();if _cgeg !=nil {return _cgeg ;};if _bdg ,_ccc :=_dgd .(_a .EndElement );_ccc &&_bdg .Name ==start .Name {return nil ;
};return _f .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_dgd );};func (_dce *Borderleft )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064"});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0062\u006f\u0072\u0064\u0065\u0072\u006c\u0065\u0066\u0074";return _dce .CT_Border .MarshalXML (e ,start );};func (_ddb *CT_Border )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for _ ,_acc :=range start .Attr {if _acc .Name .Local =="\u0074\u0079\u0070\u0065"{_ddb .TypeAttr .UnmarshalXMLAttr (_acc );
continue ;};if _acc .Name .Local =="\u0077\u0069\u0064t\u0068"{_baa ,_aca :=_e .ParseUint (_acc .Value ,10,32);if _aca !=nil {return _aca ;};_egb :=uint32 (_baa );_ddb .WidthAttr =&_egb ;continue ;};if _acc .Name .Local =="\u0073\u0068\u0061\u0064\u006f\u0077"{_ddb .ShadowAttr .UnmarshalXMLAttr (_acc );
continue ;};};for {_age ,_cae :=d .Token ();if _cae !=nil {return _f .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0042\u006f\u0072d\u0065\u0072\u003a\u0020\u0025\u0073",_cae );};if _gac ,_egbb :=_age .(_a .EndElement );_egbb &&_gac .Name ==start .Name {break ;
};};return nil ;};func (_aeb ST_WrapSide )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return e .EncodeElement (_aeb .String (),start );};

// ValidateWithPath validates the Wrap and its children, prefixing error messages with path
func (_fdae *Wrap )ValidateWithPath (path string )error {if _edee :=_fdae .CT_Wrap .ValidateWithPath (path );_edee !=nil {return _edee ;};return nil ;};type Borderleft struct{CT_Border };

// Validate validates the Borderright and its children
func (_gab *Borderright )Validate ()error {return _gab .ValidateWithPath ("B\u006f\u0072\u0064\u0065\u0072\u0072\u0069\u0067\u0068\u0074");};func (_afd *ST_BorderShadow )UnmarshalXMLAttr (attr _a .Attr )error {switch attr .Value {case "":*_afd =0;case "\u0074":*_afd =1;
case "\u0074\u0072\u0075\u0065":*_afd =2;case "\u0066":*_afd =3;case "\u0066\u0061\u006cs\u0065":*_afd =4;};return nil ;};func (_fgc *CT_Border )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _fgc .TypeAttr !=ST_BorderTypeUnset {_fbae ,_dfg :=_fgc .TypeAttr .MarshalXMLAttr (_a .Name {Local :"\u0074\u0079\u0070\u0065"});
if _dfg !=nil {return _dfg ;};start .Attr =append (start .Attr ,_fbae );};if _fgc .WidthAttr !=nil {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0077\u0069\u0064t\u0068"},Value :_f .Sprintf ("\u0025\u0076",*_fgc .WidthAttr )});
};if _fgc .ShadowAttr !=ST_BorderShadowUnset {_dced ,_edga :=_fgc .ShadowAttr .MarshalXMLAttr (_a .Name {Local :"\u0073\u0068\u0061\u0064\u006f\u0077"});if _edga !=nil {return _edga ;};start .Attr =append (start .Attr ,_dced );};e .EncodeToken (start );
e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};const (ST_WrapTypeUnset ST_WrapType =0;ST_WrapTypeTopAndBottom ST_WrapType =1;ST_WrapTypeSquare ST_WrapType =2;ST_WrapTypeNone ST_WrapType =3;ST_WrapTypeTight ST_WrapType =4;ST_WrapTypeThrough ST_WrapType =5;
);func (_eef *CT_Wrap )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _eef .TypeAttr !=ST_WrapTypeUnset {_af ,_cbg :=_eef .TypeAttr .MarshalXMLAttr (_a .Name {Local :"\u0074\u0079\u0070\u0065"});if _cbg !=nil {return _cbg ;};start .Attr =append (start .Attr ,_af );
};if _eef .SideAttr !=ST_WrapSideUnset {_gacf ,_ab :=_eef .SideAttr .MarshalXMLAttr (_a .Name {Local :"\u0073\u0069\u0064\u0065"});if _ab !=nil {return _ab ;};start .Attr =append (start .Attr ,_gacf );};if _eef .AnchorxAttr !=ST_HorizontalAnchorUnset {_ede ,_dcb :=_eef .AnchorxAttr .MarshalXMLAttr (_a .Name {Local :"\u0061n\u0063\u0068\u006f\u0072\u0078"});
if _dcb !=nil {return _dcb ;};start .Attr =append (start .Attr ,_ede );};if _eef .AnchoryAttr !=ST_VerticalAnchorUnset {_accc ,_cdf :=_eef .AnchoryAttr .MarshalXMLAttr (_a .Name {Local :"\u0061n\u0063\u0068\u006f\u0072\u0079"});if _cdf !=nil {return _cdf ;
};start .Attr =append (start .Attr ,_accc );};e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// Validate validates the CT_Wrap and its children
func (_ccda *CT_Wrap )Validate ()error {return _ccda .ValidateWithPath ("\u0043T\u005f\u0057\u0072\u0061\u0070");};func (_cd *Bordertop )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064"});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0062o\u0072\u0064\u0065\u0072\u0074\u006fp";return _cd .CT_Border .MarshalXML (e ,start );};type CT_AnchorLock struct{};func (_cfb *ST_WrapSide )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_ggfb ,_fcf :=d .Token ();
if _fcf !=nil {return _fcf ;};if _ebd ,_cde :=_ggfb .(_a .EndElement );_cde &&_ebd .Name ==start .Name {*_cfb =1;return nil ;};if _aff ,_add :=_ggfb .(_a .CharData );!_add {return _f .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_ggfb );
}else {switch string (_aff ){case "":*_cfb =0;case "\u0062\u006f\u0074\u0068":*_cfb =1;case "\u006c\u0065\u0066\u0074":*_cfb =2;case "\u0072\u0069\u0067h\u0074":*_cfb =3;case "\u006ca\u0072\u0067\u0065\u0073\u0074":*_cfb =4;};};_ggfb ,_fcf =d .Token ();
if _fcf !=nil {return _fcf ;};if _afbc ,_eaed :=_ggfb .(_a .EndElement );_eaed &&_afbc .Name ==start .Name {return nil ;};return _f .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_ggfb );
};type CT_Border struct{

// Border Style
TypeAttr ST_BorderType ;

// Border Width
WidthAttr *uint32 ;

// Border shadow
ShadowAttr ST_BorderShadow ;};func (_dcbg ST_BorderShadow )MarshalXMLAttr (name _a .Name )(_a .Attr ,error ){_bcef :=_a .Attr {};_bcef .Name =name ;switch _dcbg {case ST_BorderShadowUnset :_bcef .Value ="";case ST_BorderShadowT :_bcef .Value ="\u0074";
case ST_BorderShadowTrue :_bcef .Value ="\u0074\u0072\u0075\u0065";case ST_BorderShadowF :_bcef .Value ="\u0066";case ST_BorderShadowFalse :_bcef .Value ="\u0066\u0061\u006cs\u0065";};return _bcef ,nil ;};func (_ggg ST_VerticalAnchor )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return e .EncodeElement (_ggg .String (),start );
};func (_ded *ST_HorizontalAnchor )UnmarshalXMLAttr (attr _a .Attr )error {switch attr .Value {case "":*_ded =0;case "\u006d\u0061\u0072\u0067\u0069\u006e":*_ded =1;case "\u0070\u0061\u0067\u0065":*_ded =2;case "\u0074\u0065\u0078\u0074":*_ded =3;case "\u0063\u0068\u0061\u0072":*_ded =4;
};return nil ;};

// Validate validates the Wrap and its children
func (_ggc *Wrap )Validate ()error {return _ggc .ValidateWithPath ("\u0057\u0072\u0061\u0070")};func (_gce *ST_HorizontalAnchor )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_fad ,_daaa :=d .Token ();if _daaa !=nil {return _daaa ;};if _gdfa ,_cdfb :=_fad .(_a .EndElement );
_cdfb &&_gdfa .Name ==start .Name {*_gce =1;return nil ;};if _gee ,_cab :=_fad .(_a .CharData );!_cab {return _f .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_fad );
}else {switch string (_gee ){case "":*_gce =0;case "\u006d\u0061\u0072\u0067\u0069\u006e":*_gce =1;case "\u0070\u0061\u0067\u0065":*_gce =2;case "\u0074\u0065\u0078\u0074":*_gce =3;case "\u0063\u0068\u0061\u0072":*_gce =4;};};_fad ,_daaa =d .Token ();if _daaa !=nil {return _daaa ;
};if _afag ,_dbc :=_fad .(_a .EndElement );_dbc &&_afag .Name ==start .Name {return nil ;};return _f .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_fad );
};func (_abd ST_VerticalAnchor )ValidateWithPath (path string )error {switch _abd {case 0,1,2,3,4:default:return _f .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_abd ));
};return nil ;};func (_abb *ST_VerticalAnchor )UnmarshalXMLAttr (attr _a .Attr )error {switch attr .Value {case "":*_abb =0;case "\u006d\u0061\u0072\u0067\u0069\u006e":*_abb =1;case "\u0070\u0061\u0067\u0065":*_abb =2;case "\u0074\u0065\u0078\u0074":*_abb =3;
case "\u006c\u0069\u006e\u0065":*_abb =4;};return nil ;};func (_ceg ST_HorizontalAnchor )String ()string {switch _ceg {case 0:return "";case 1:return "\u006d\u0061\u0072\u0067\u0069\u006e";case 2:return "\u0070\u0061\u0067\u0065";case 3:return "\u0074\u0065\u0078\u0074";
case 4:return "\u0063\u0068\u0061\u0072";};return "";};

// ValidateWithPath validates the Borderbottom and its children, prefixing error messages with path
func (_efe *Borderbottom )ValidateWithPath (path string )error {if _df :=_efe .CT_Border .ValidateWithPath (path );_df !=nil {return _df ;};return nil ;};const (ST_WrapSideUnset ST_WrapSide =0;ST_WrapSideBoth ST_WrapSide =1;ST_WrapSideLeft ST_WrapSide =2;
ST_WrapSideRight ST_WrapSide =3;ST_WrapSideLargest ST_WrapSide =4;);func (_cge *Borderbottom )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064"});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0062\u006f\u0072d\u0065\u0072\u0062\u006f\u0074\u0074\u006f\u006d";return _cge .CT_Border .MarshalXML (e ,start );};func (_ggb ST_WrapSide )Validate ()error {return _ggb .ValidateWithPath ("")};

// ValidateWithPath validates the Borderleft and its children, prefixing error messages with path
func (_gcg *Borderleft )ValidateWithPath (path string )error {if _ga :=_gcg .CT_Border .ValidateWithPath (path );_ga !=nil {return _ga ;};return nil ;};func (_aa *Anchorlock )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064"});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0061\u006e\u0063\u0068\u006f\u0072\u006c\u006f\u0063\u006b";return _aa .CT_AnchorLock .MarshalXML (e ,start );};func (_adc ST_WrapSide )MarshalXMLAttr (name _a .Name )(_a .Attr ,error ){_afb :=_a .Attr {};_afb .Name =name ;switch _adc {case ST_WrapSideUnset :_afb .Value ="";
case ST_WrapSideBoth :_afb .Value ="\u0062\u006f\u0074\u0068";case ST_WrapSideLeft :_afb .Value ="\u006c\u0065\u0066\u0074";case ST_WrapSideRight :_afb .Value ="\u0072\u0069\u0067h\u0074";case ST_WrapSideLargest :_afb .Value ="\u006ca\u0072\u0067\u0065\u0073\u0074";
};return _afb ,nil ;};

// Validate validates the Anchorlock and its children
func (_fd *Anchorlock )Validate ()error {return _fd .ValidateWithPath ("\u0041\u006e\u0063\u0068\u006f\u0072\u006c\u006f\u0063\u006b");};func (_egf ST_WrapType )MarshalXMLAttr (name _a .Name )(_a .Attr ,error ){_daf :=_a .Attr {};_daf .Name =name ;switch _egf {case ST_WrapTypeUnset :_daf .Value ="";
case ST_WrapTypeTopAndBottom :_daf .Value ="\u0074\u006f\u0070A\u006e\u0064\u0042\u006f\u0074\u0074\u006f\u006d";case ST_WrapTypeSquare :_daf .Value ="\u0073\u0071\u0075\u0061\u0072\u0065";case ST_WrapTypeNone :_daf .Value ="\u006e\u006f\u006e\u0065";case ST_WrapTypeTight :_daf .Value ="\u0074\u0069\u0067h\u0074";
case ST_WrapTypeThrough :_daf .Value ="\u0074h\u0072\u006f\u0075\u0067\u0068";};return _daf ,nil ;};func (_eda *Wrap )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064"});
start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0077\u0072\u0061\u0070";return _eda .CT_Wrap .MarshalXML (e ,start );};func NewBorderleft ()*Borderleft {_cb :=&Borderleft {};_cb .CT_Border =*NewCT_Border ();return _cb };func (_fbd ST_WrapSide )String ()string {switch _fbd {case 0:return "";
case 1:return "\u0062\u006f\u0074\u0068";case 2:return "\u006c\u0065\u0066\u0074";case 3:return "\u0072\u0069\u0067h\u0074";case 4:return "\u006ca\u0072\u0067\u0065\u0073\u0074";};return "";};type CT_Wrap struct{

// Wrapping type
TypeAttr ST_WrapType ;

// Wrapping side
SideAttr ST_WrapSide ;

// Horizontal Positioning Base
AnchorxAttr ST_HorizontalAnchor ;

// Vertical Positioning Base
AnchoryAttr ST_VerticalAnchor ;};const (ST_VerticalAnchorUnset ST_VerticalAnchor =0;ST_VerticalAnchorMargin ST_VerticalAnchor =1;ST_VerticalAnchorPage ST_VerticalAnchor =2;ST_VerticalAnchorText ST_VerticalAnchor =3;ST_VerticalAnchorLine ST_VerticalAnchor =4;
);type Anchorlock struct{CT_AnchorLock };type ST_HorizontalAnchor byte ;func (_dbf *Borderleft )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_dbf .CT_Border =*NewCT_Border ();for _ ,_ag :=range start .Attr {if _ag .Name .Local =="\u0074\u0079\u0070\u0065"{_dbf .TypeAttr .UnmarshalXMLAttr (_ag );
continue ;};if _ag .Name .Local =="\u0077\u0069\u0064t\u0068"{_bc ,_bd :=_e .ParseUint (_ag .Value ,10,32);if _bd !=nil {return _bd ;};_gcd :=uint32 (_bc );_dbf .WidthAttr =&_gcd ;continue ;};if _ag .Name .Local =="\u0073\u0068\u0061\u0064\u006f\u0077"{_dbf .ShadowAttr .UnmarshalXMLAttr (_ag );
continue ;};};for {_adg ,_dfe :=d .Token ();if _dfe !=nil {return _f .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0042\u006f\u0072\u0064\u0065\u0072\u006c\u0065\u0066\u0074\u003a\u0020%\u0073",_dfe );};if _fba ,_cbe :=_adg .(_a .EndElement );_cbe &&_fba .Name ==start .Name {break ;
};};return nil ;};

// Validate validates the CT_Border and its children
func (_cgc *CT_Border )Validate ()error {return _cgc .ValidateWithPath ("\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r");};func (_dac ST_HorizontalAnchor )ValidateWithPath (path string )error {switch _dac {case 0,1,2,3,4:default:return _f .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_dac ));
};return nil ;};const (ST_BorderTypeUnset ST_BorderType =0;ST_BorderTypeNone ST_BorderType =1;ST_BorderTypeSingle ST_BorderType =2;ST_BorderTypeThick ST_BorderType =3;ST_BorderTypeDouble ST_BorderType =4;ST_BorderTypeHairline ST_BorderType =5;ST_BorderTypeDot ST_BorderType =6;
ST_BorderTypeDash ST_BorderType =7;ST_BorderTypeDotDash ST_BorderType =8;ST_BorderTypeDashDotDot ST_BorderType =9;ST_BorderTypeTriple ST_BorderType =10;ST_BorderTypeThinThickSmall ST_BorderType =11;ST_BorderTypeThickThinSmall ST_BorderType =12;ST_BorderTypeThickBetweenThinSmall ST_BorderType =13;
ST_BorderTypeThinThick ST_BorderType =14;ST_BorderTypeThickThin ST_BorderType =15;ST_BorderTypeThickBetweenThin ST_BorderType =16;ST_BorderTypeThinThickLarge ST_BorderType =17;ST_BorderTypeThickThinLarge ST_BorderType =18;ST_BorderTypeThickBetweenThinLarge ST_BorderType =19;
ST_BorderTypeWave ST_BorderType =20;ST_BorderTypeDoubleWave ST_BorderType =21;ST_BorderTypeDashedSmall ST_BorderType =22;ST_BorderTypeDashDotStroked ST_BorderType =23;ST_BorderTypeThreeDEmboss ST_BorderType =24;ST_BorderTypeThreeDEngrave ST_BorderType =25;
ST_BorderTypeHTMLOutset ST_BorderType =26;ST_BorderTypeHTMLInset ST_BorderType =27;);func NewCT_AnchorLock ()*CT_AnchorLock {_aeg :=&CT_AnchorLock {};return _aeg };func (_cgeb ST_BorderShadow )String ()string {switch _cgeb {case 0:return "";case 1:return "\u0074";
case 2:return "\u0074\u0072\u0075\u0065";case 3:return "\u0066";case 4:return "\u0066\u0061\u006cs\u0065";};return "";};func (_abba ST_VerticalAnchor )Validate ()error {return _abba .ValidateWithPath ("")};

// ValidateWithPath validates the CT_Wrap and its children, prefixing error messages with path
func (_fed *CT_Wrap )ValidateWithPath (path string )error {if _bbf :=_fed .TypeAttr .ValidateWithPath (path +"\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r");_bbf !=nil {return _bbf ;};if _aed :=_fed .SideAttr .ValidateWithPath (path +"\u002fS\u0069\u0064\u0065\u0041\u0074\u0074r");
_aed !=nil {return _aed ;};if _gfb :=_fed .AnchorxAttr .ValidateWithPath (path +"\u002f\u0041\u006ec\u0068\u006f\u0072\u0078\u0041\u0074\u0074\u0072");_gfb !=nil {return _gfb ;};if _gaf :=_fed .AnchoryAttr .ValidateWithPath (path +"\u002f\u0041\u006ec\u0068\u006f\u0072\u0079\u0041\u0074\u0074\u0072");
_gaf !=nil {return _gaf ;};return nil ;};func (_ea *Borderright )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_ea .CT_Border =*NewCT_Border ();for _ ,_cbb :=range start .Attr {if _cbb .Name .Local =="\u0074\u0079\u0070\u0065"{_ea .TypeAttr .UnmarshalXMLAttr (_cbb );
continue ;};if _cbb .Name .Local =="\u0077\u0069\u0064t\u0068"{_cc ,_ccd :=_e .ParseUint (_cbb .Value ,10,32);if _ccd !=nil {return _ccd ;};_gd :=uint32 (_cc );_ea .WidthAttr =&_gd ;continue ;};if _cbb .Name .Local =="\u0073\u0068\u0061\u0064\u006f\u0077"{_ea .ShadowAttr .UnmarshalXMLAttr (_cbb );
continue ;};};for {_dg ,_agd :=d .Token ();if _agd !=nil {return _f .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0042\u006f\u0072\u0064\u0065\u0072\u0072\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0073",_agd );};if _ge ,_ac :=_dg .(_a .EndElement );
_ac &&_ge .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Anchorlock and its children, prefixing error messages with path
func (_fda *Anchorlock )ValidateWithPath (path string )error {if _ae :=_fda .CT_AnchorLock .ValidateWithPath (path );_ae !=nil {return _ae ;};return nil ;};func (_eee ST_HorizontalAnchor )Validate ()error {return _eee .ValidateWithPath ("")};func (_daa ST_BorderType )MarshalXMLAttr (name _a .Name )(_a .Attr ,error ){_gbb :=_a .Attr {};
_gbb .Name =name ;switch _daa {case ST_BorderTypeUnset :_gbb .Value ="";case ST_BorderTypeNone :_gbb .Value ="\u006e\u006f\u006e\u0065";case ST_BorderTypeSingle :_gbb .Value ="\u0073\u0069\u006e\u0067\u006c\u0065";case ST_BorderTypeThick :_gbb .Value ="\u0074\u0068\u0069c\u006b";
case ST_BorderTypeDouble :_gbb .Value ="\u0064\u006f\u0075\u0062\u006c\u0065";case ST_BorderTypeHairline :_gbb .Value ="\u0068\u0061\u0069\u0072\u006c\u0069\u006e\u0065";case ST_BorderTypeDot :_gbb .Value ="\u0064\u006f\u0074";case ST_BorderTypeDash :_gbb .Value ="\u0064\u0061\u0073\u0068";
case ST_BorderTypeDotDash :_gbb .Value ="\u0064o\u0074\u0044\u0061\u0073\u0068";case ST_BorderTypeDashDotDot :_gbb .Value ="\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074";case ST_BorderTypeTriple :_gbb .Value ="\u0074\u0072\u0069\u0070\u006c\u0065";
case ST_BorderTypeThinThickSmall :_gbb .Value ="\u0074\u0068\u0069\u006e\u0054\u0068\u0069\u0063\u006bS\u006d\u0061\u006c\u006c";case ST_BorderTypeThickThinSmall :_gbb .Value ="\u0074\u0068\u0069\u0063\u006b\u0054\u0068\u0069\u006eS\u006d\u0061\u006c\u006c";
case ST_BorderTypeThickBetweenThinSmall :_gbb .Value ="t\u0068\u0069\u0063\u006bBe\u0074w\u0065\u0065\u006e\u0054\u0068i\u006e\u0053\u006d\u0061\u006c\u006c";case ST_BorderTypeThinThick :_gbb .Value ="\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k";case ST_BorderTypeThickThin :_gbb .Value ="\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n";
case ST_BorderTypeThickBetweenThin :_gbb .Value ="\u0074\u0068i\u0063\u006b\u0042e\u0074\u0077\u0065\u0065\u006e\u0054\u0068\u0069\u006e";case ST_BorderTypeThinThickLarge :_gbb .Value ="\u0074\u0068\u0069\u006e\u0054\u0068\u0069\u0063\u006bL\u0061\u0072\u0067\u0065";
case ST_BorderTypeThickThinLarge :_gbb .Value ="\u0074\u0068\u0069\u0063\u006b\u0054\u0068\u0069\u006eL\u0061\u0072\u0067\u0065";case ST_BorderTypeThickBetweenThinLarge :_gbb .Value ="t\u0068\u0069\u0063\u006bBe\u0074w\u0065\u0065\u006e\u0054\u0068i\u006e\u004c\u0061\u0072\u0067\u0065";
case ST_BorderTypeWave :_gbb .Value ="\u0077\u0061\u0076\u0065";case ST_BorderTypeDoubleWave :_gbb .Value ="\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065";case ST_BorderTypeDashedSmall :_gbb .Value ="d\u0061\u0073\u0068\u0065\u0064\u0053\u006d\u0061\u006c\u006c";
case ST_BorderTypeDashDotStroked :_gbb .Value ="\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0053\u0074r\u006f\u006b\u0065\u0064";case ST_BorderTypeThreeDEmboss :_gbb .Value ="\u0074\u0068\u0072e\u0065\u0044\u0045\u006d\u0062\u006f\u0073\u0073";case ST_BorderTypeThreeDEngrave :_gbb .Value ="\u0074\u0068\u0072\u0065\u0065\u0044\u0045\u006e\u0067\u0072\u0061\u0076\u0065";
case ST_BorderTypeHTMLOutset :_gbb .Value ="\u0048\u0054\u004d\u004c\u004f\u0075\u0074\u0073\u0065\u0074";case ST_BorderTypeHTMLInset :_gbb .Value ="\u0048T\u004d\u004c\u0049\u006e\u0073\u0065t";};return _gbb ,nil ;};func NewWrap ()*Wrap {_ce :=&Wrap {};
_ce .CT_Wrap =*NewCT_Wrap ();return _ce };func (_acd ST_BorderType )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return e .EncodeElement (_acd .String (),start );};type ST_WrapSide byte ;func (_edc ST_WrapType )ValidateWithPath (path string )error {switch _edc {case 0,1,2,3,4,5:default:return _f .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_edc ));
};return nil ;};func (_bg ST_BorderShadow )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return e .EncodeElement (_bg .String (),start );};func NewCT_Border ()*CT_Border {_bce :=&CT_Border {};return _bce };type ST_VerticalAnchor byte ;func (_ffg ST_VerticalAnchor )String ()string {switch _ffg {case 0:return "";
case 1:return "\u006d\u0061\u0072\u0067\u0069\u006e";case 2:return "\u0070\u0061\u0067\u0065";case 3:return "\u0074\u0065\u0078\u0074";case 4:return "\u006c\u0069\u006e\u0065";};return "";};func (_bec ST_WrapType )String ()string {switch _bec {case 0:return "";
case 1:return "\u0074\u006f\u0070A\u006e\u0064\u0042\u006f\u0074\u0074\u006f\u006d";case 2:return "\u0073\u0071\u0075\u0061\u0072\u0065";case 3:return "\u006e\u006f\u006e\u0065";case 4:return "\u0074\u0069\u0067h\u0074";case 5:return "\u0074h\u0072\u006f\u0075\u0067\u0068";
};return "";};func (_ecc ST_WrapSide )ValidateWithPath (path string )error {switch _ecc {case 0,1,2,3,4:default:return _f .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_ecc ));
};return nil ;};func init (){_c .RegisterConstructor ("\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064","\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r",NewCT_Border );
_c .RegisterConstructor ("\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064","\u0043T\u005f\u0057\u0072\u0061\u0070",NewCT_Wrap );
_c .RegisterConstructor ("\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064","\u0043\u0054\u005f\u0041\u006e\u0063\u0068\u006f\u0072\u004c\u006f\u0063\u006b",NewCT_AnchorLock );
_c .RegisterConstructor ("\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064","\u0062o\u0072\u0064\u0065\u0072\u0074\u006fp",NewBordertop );
_c .RegisterConstructor ("\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064","\u0062\u006f\u0072\u0064\u0065\u0072\u006c\u0065\u0066\u0074",NewBorderleft );
_c .RegisterConstructor ("\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064","b\u006f\u0072\u0064\u0065\u0072\u0072\u0069\u0067\u0068\u0074",NewBorderright );
_c .RegisterConstructor ("\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064","\u0062\u006f\u0072d\u0065\u0072\u0062\u006f\u0074\u0074\u006f\u006d",NewBorderbottom );
_c .RegisterConstructor ("\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064","\u0077\u0072\u0061\u0070",NewWrap );
_c .RegisterConstructor ("\u0075\u0072n\u003a\u0073\u0063\u0068e\u006d\u0061s\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006ff\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065:\u0077\u006f\u0072\u0064","\u0061\u006e\u0063\u0068\u006f\u0072\u006c\u006f\u0063\u006b",NewAnchorlock );
};