//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wildcard ;func Match (pattern ,name string )(_ff bool ){if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_cd :=make ([]rune ,0,len (name ));_gb :=make ([]rune ,0,len (pattern ));for _ ,_cb :=range name {_cd =append (_cd ,_cb );
};for _ ,_e :=range pattern {_gb =append (_gb ,_e );};_ge :=false ;return _ee (_cd ,_gb ,_ge );};func _ad (_fd ,_cab []rune ,_db int )int {for len (_cab )> 0{switch _cab [0]{default:if len (_fd )==0{return -1;};if _fd [0]!=_cab [0]{return _ad (_fd [1:],_cab ,_db +1);
};case '?':if len (_fd )==0{return -1;};case '*':if len (_fd )==0{return -1;};_cba :=_ad (_fd ,_cab [1:],_db );if _cba !=-1{return _db ;}else {_cba =_ad (_fd [1:],_cab ,_db );if _cba !=-1{return _db ;}else {return -1;};};};_fd =_fd [1:];_cab =_cab [1:];
};return _db ;};func MatchSimple (pattern ,name string )bool {if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_f :=make ([]rune ,0,len (name ));_c :=make ([]rune ,0,len (pattern ));for _ ,_a :=range name {_f =append (_f ,_a );
};for _ ,_gd :=range pattern {_c =append (_c ,_gd );};_df :=true ;return _ee (_f ,_c ,_df );};func Index (pattern ,name string )(_fg int ){if pattern ==""||pattern =="\u002a"{return 0;};_ec :=make ([]rune ,0,len (name ));_gdg :=make ([]rune ,0,len (pattern ));
for _ ,_cc :=range name {_ec =append (_ec ,_cc );};for _ ,_bg :=range pattern {_gdg =append (_gdg ,_bg );};return _ad (_ec ,_gdg ,0);};func _ee (_ae ,_fa []rune ,_cg bool )bool {for len (_fa )> 0{switch _fa [0]{default:if len (_ae )==0||_ae [0]!=_fa [0]{return false ;
};case '?':if len (_ae )==0&&!_cg {return false ;};case '*':return _ee (_ae ,_fa [1:],_cg )||(len (_ae )> 0&&_ee (_ae [1:],_fa ,_cg ));};_ae =_ae [1:];_fa =_fa [1:];};return len (_ae )==0&&len (_fa )==0;};