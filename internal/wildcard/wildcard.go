//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wildcard ;func Match (pattern ,name string )(_ag bool ){if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_ad :=make ([]rune ,0,len (name ));_af :=make ([]rune ,0,len (pattern ));for _ ,_ba :=range name {_ad =append (_ad ,_ba );
};for _ ,_adg :=range pattern {_af =append (_af ,_adg );};_gf :=false ;return _gd (_ad ,_af ,_gf );};func MatchSimple (pattern ,name string )bool {if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_d :=make ([]rune ,0,len (name ));
_bb :=make ([]rune ,0,len (pattern ));for _ ,_f :=range name {_d =append (_d ,_f );};for _ ,_bf :=range pattern {_bb =append (_bb ,_bf );};_c :=true ;return _gd (_d ,_bb ,_c );};func Index (pattern ,name string )(_fb int ){if pattern ==""||pattern =="\u002a"{return 0;
};_dd :=make ([]rune ,0,len (name ));_de :=make ([]rune ,0,len (pattern ));for _ ,_cf :=range name {_dd =append (_dd ,_cf );};for _ ,_cg :=range pattern {_de =append (_de ,_cg );};return _gfb (_dd ,_de ,0);};func _gfb (_cgb ,_gg []rune ,_ddg int )int {for len (_gg )> 0{switch _gg [0]{default:if len (_cgb )==0{return -1;
};if _cgb [0]!=_gg [0]{return _gfb (_cgb [1:],_gg ,_ddg +1);};case '?':if len (_cgb )==0{return -1;};case '*':if len (_cgb )==0{return -1;};_db :=_gfb (_cgb ,_gg [1:],_ddg );if _db !=-1{return _ddg ;}else {_db =_gfb (_cgb [1:],_gg ,_ddg );if _db !=-1{return _ddg ;
}else {return -1;};};};_cgb =_cgb [1:];_gg =_gg [1:];};return _ddg ;};func _gd (_e ,_ca []rune ,_fd bool )bool {for len (_ca )> 0{switch _ca [0]{default:if len (_e )==0||_e [0]!=_ca [0]{return false ;};case '?':if len (_e )==0&&!_fd {return false ;};case '*':return _gd (_e ,_ca [1:],_fd )||(len (_e )> 0&&_gd (_e [1:],_ca ,_fd ));
};_e =_e [1:];_ca =_ca [1:];};return len (_e )==0&&len (_ca )==0;};