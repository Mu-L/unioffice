//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package formatutils ;import (_g "fmt";_f "github.com/unidoc/unioffice/v2/schema/soo/wml";_e "strconv";_a "strings";);func Initials (text string )string {if text ==""{return "";};_aae :=_a .Split (text ,"\u0020");_acb :=_a .Builder {};for _ ,_dgd :=range _aae {_acb .WriteByte (_dgd [0]);
};return _acb .String ();};func _gd (_gda string )(_fe []string ){for _fc :=0;_fc < len (_gda )-2;_fc ++{if string (_gda [_fc ])=="\u0025"{if !_a .Contains (string (_gda [_fc +2:]),"\u0025"){if _fc ==0{_fe =append (_fe ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_gda [_fc ]),string (_gda [_fc +1]),string (_gda [_fc +2:])));
}else {_fe =append (_fe ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073\u0025\u0073",string (_gda [_fc -1]),string (_gda [_fc ]),string (_gda [_fc +1]),string (_gda [_fc +2:])));};}else {_fe =append (_fe ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_gda [_fc ]),string (_gda [_fc +1]),string (_gda [_fc +2])));
};};};return ;};func FormatNumberingText (currentNumber int64 ,ilvl int64 ,lvlText string ,numFmt *_f .CT_NumFmt ,levelNumbers map[int64 ]int64 )string {_gb :=_gd (lvlText );_fd :=_dg (currentNumber ,numFmt );_b :=int64 (0);for _gbb ,_be :=range _gb {_gf :=_g .Sprintf ("\u0025\u0025\u0025\u0064",_gbb +1);
if len (_gb )==1{_gf =_g .Sprintf ("\u0025\u0025\u0025\u0064",ilvl +1);_gb [_gbb ]=_a .Replace (_be ,_gf ,_fd ,1);break ;};if ilvl > 0&&ilvl > _b &&_gbb < (len (_gb )-1){_aa :=_dg (levelNumbers [_b ],numFmt );_gb [_gbb ]=_a .Replace (_be ,_gf ,_aa ,1);
_b ++;}else {_gb [_gbb ]=_a .Replace (_be ,_gf ,_fd ,1);};};return _a .Join (_gb ,"");};var (_d =[]string {"","\u0049","\u0049\u0049","\u0049\u0049\u0049","\u0049\u0056","\u0056","\u0056\u0049","\u0056\u0049\u0049","\u0056\u0049\u0049\u0049","\u0049\u0058"};
_af =[]string {"","\u0058","\u0058\u0058","\u0058\u0058\u0058","\u0058\u004c","\u004c","\u004c\u0058","\u004c\u0058\u0058","\u004c\u0058\u0058\u0058","\u0058\u0043"};_bf =[]string {"","\u0043","\u0043\u0043","\u0043\u0043\u0043","\u0043\u0044","\u0044","\u0044\u0043","\u0044\u0043\u0043","\u0044\u0043\u0043\u0043","\u0043\u004d","\u004d"};
_ea =[]string {"","\u004d","\u004d\u004d","\u004d\u004d\u004d","\u004d\u004d\u004d\u004d","\u004d\u004d\u004dM\u004d","\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d\u004dM","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d"};
_eg =[]string {"\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0074\u0065\u006e","\u0065\u006c\u0065\u0076\u0065\u006e","\u0074\u0077\u0065\u006c\u0076\u0065","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e","\u0066i\u0066\u0074\u0065\u0065\u006e","\u0073i\u0078\u0074\u0065\u0065\u006e","\u0073e\u0076\u0065\u006e\u0074\u0065\u0065n","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e"};
_ee =[]string {"\u0074\u0065\u006e","\u0074\u0077\u0065\u006e\u0074\u0079","\u0074\u0068\u0069\u0072\u0074\u0079","\u0066\u006f\u0072t\u0079","\u0066\u0069\u0066t\u0079","\u0073\u0069\u0078t\u0079","\u0073e\u0076\u0065\u006e\u0074\u0079","\u0065\u0069\u0067\u0068\u0074\u0079","\u006e\u0069\u006e\u0065\u0074\u0079"};
_dc =[]string {"\u0066\u0069\u0072s\u0074","\u0073\u0065\u0063\u006f\u006e\u0064","\u0074\u0068\u0069r\u0064","\u0066\u006f\u0075\u0072\u0074\u0068","\u0066\u0069\u0066t\u0068","\u0073\u0069\u0078t\u0068","\u0073e\u0076\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0068","\u006e\u0069\u006et\u0068","\u0074\u0065\u006et\u0068","\u0065\u006c\u0065\u0076\u0065\u006e\u0074\u0068","\u0074w\u0065\u006c\u0066\u0074\u0068","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066i\u0066\u0074\u0065\u0065\u006e\u0074h","\u0073i\u0078\u0074\u0065\u0065\u006e\u0074h","s\u0065\u0076\u0065\u006e\u0074\u0065\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e\u0074\u0068","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e\u0074\u0068"};
_aab =[]string {"\u0074\u0065\u006et\u0068","\u0074w\u0065\u006e\u0074\u0069\u0065\u0074h","\u0074h\u0069\u0072\u0074\u0069\u0065\u0074h","\u0066\u006f\u0072\u0074\u0069\u0065\u0074\u0068","\u0066\u0069\u0066\u0074\u0069\u0065\u0074\u0068","\u0073\u0069\u0078\u0074\u0069\u0065\u0074\u0068","\u0073\u0065\u0076\u0065\u006e\u0074\u0069\u0065\u0074\u0068","\u0065i\u0067\u0068\u0074\u0069\u0065\u0074h","\u006ei\u006e\u0065\u0074\u0069\u0065\u0074h"};
_dcd ="\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049\u004a\u004bL\u004d\u004e\u004f\u0050\u0051\u0052\u0053\u0054\u0055\u0056W\u0058\u0059\u005a";);func _dg (_cd int64 ,_cc *_f .CT_NumFmt )(_eee string ){if _cc ==nil {return ;};_dgb :=_cc .ValAttr ;
switch _dgb {case _f .ST_NumberFormatNone :_eee ="";case _f .ST_NumberFormatDecimal :_eee =_e .Itoa (int (_cd ));case _f .ST_NumberFormatDecimalZero :_eee =_e .Itoa (int (_cd ));if _cd < 10{_eee ="\u0030"+_eee ;};case _f .ST_NumberFormatUpperRoman :var (_db =_cd %10;
_afd =(_cd %100)/10;_de =(_cd %1000)/100;_fed =_cd /1000;);_eee =_ea [_fed ]+_bf [_de ]+_af [_afd ]+_d [_db ];case _f .ST_NumberFormatLowerRoman :var (_fg =_cd %10;_dd =(_cd %100)/10;_bd =(_cd %1000)/100;_bb =_cd /1000;);_eee =_ea [_bb ]+_bf [_bd ]+_af [_dd ]+_d [_fg ];
_eee =_a .ToLower (_eee );case _f .ST_NumberFormatUpperLetter :_bed :=_cd %780;if _bed ==0{_bed =780;};_eb :=(_bed -1)/26;_bg :=(_bed -1)%26;_ed :=_dcd [_eb +_bg ];_eee =string (_ed );case _f .ST_NumberFormatLowerLetter :_ge :=_cd %780;if _ge ==0{_ge =780;
};_ff :=(_ge -1)/26;_gbe :=(_ge -1)%26;_gec :=_dcd [_ff +_gbe ];_eee =_a .ToLower (string (_gec ));default:_eee ="";};return ;};func StringToNumbers (str string )(int ,bool ){_dgc :=0;_aaf :=false ;for _ ,_ac :=range []byte (str ){_ac -='0';if _ac > 9{continue ;
};_dgc =_dgc *10+int (_ac );_aaf =true ;};return _dgc ,_aaf ;};