//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package formatutils ;import (_g "fmt";_b "github.com/unidoc/unioffice/v2/schema/soo/wml";_c "strconv";_e "strings";);func FormatNumberingText (currentNumber int64 ,ilvl int64 ,lvlText string ,numFmt *_b .CT_NumFmt ,levelNumbers map[int64 ]int64 )string {_ee :=_ge (lvlText );
_eb :=_fea (currentNumber ,numFmt );_dd :=int64 (0);for _f ,_eee :=range _ee {_eg :=_g .Sprintf ("\u0025\u0025\u0025\u0064",_f +1);if len (_ee )==1{_eg =_g .Sprintf ("\u0025\u0025\u0025\u0064",ilvl +1);_ee [_f ]=_e .Replace (_eee ,_eg ,_eb ,1);break ;};
if ilvl > 0&&ilvl > _dd &&_f < (len (_ee )-1){_ebe :=_fea (levelNumbers [_dd ],numFmt );_ee [_f ]=_e .Replace (_eee ,_eg ,_ebe ,1);_dd ++;}else {_ee [_f ]=_e .Replace (_eee ,_eg ,_eb ,1);};};return _e .Join (_ee ,"");};var (_ed =[]string {"","\u0049","\u0049\u0049","\u0049\u0049\u0049","\u0049\u0056","\u0056","\u0056\u0049","\u0056\u0049\u0049","\u0056\u0049\u0049\u0049","\u0049\u0058"};
_gb =[]string {"","\u0058","\u0058\u0058","\u0058\u0058\u0058","\u0058\u004c","\u004c","\u004c\u0058","\u004c\u0058\u0058","\u004c\u0058\u0058\u0058","\u0058\u0043"};_fe =[]string {"","\u0043","\u0043\u0043","\u0043\u0043\u0043","\u0043\u0044","\u0044","\u0044\u0043","\u0044\u0043\u0043","\u0044\u0043\u0043\u0043","\u0043\u004d","\u004d"};
_ef =[]string {"","\u004d","\u004d\u004d","\u004d\u004d\u004d","\u004d\u004d\u004d\u004d","\u004d\u004d\u004dM\u004d","\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d\u004dM","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d"};
_cf =[]string {"\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0074\u0065\u006e","\u0065\u006c\u0065\u0076\u0065\u006e","\u0074\u0077\u0065\u006c\u0076\u0065","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e","\u0066i\u0066\u0074\u0065\u0065\u006e","\u0073i\u0078\u0074\u0065\u0065\u006e","\u0073e\u0076\u0065\u006e\u0074\u0065\u0065n","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e"};
_fa =[]string {"\u0074\u0065\u006e","\u0074\u0077\u0065\u006e\u0074\u0079","\u0074\u0068\u0069\u0072\u0074\u0079","\u0066\u006f\u0072t\u0079","\u0066\u0069\u0066t\u0079","\u0073\u0069\u0078t\u0079","\u0073e\u0076\u0065\u006e\u0074\u0079","\u0065\u0069\u0067\u0068\u0074\u0079","\u006e\u0069\u006e\u0065\u0074\u0079"};
_egd =[]string {"\u0066\u0069\u0072s\u0074","\u0073\u0065\u0063\u006f\u006e\u0064","\u0074\u0068\u0069r\u0064","\u0066\u006f\u0075\u0072\u0074\u0068","\u0066\u0069\u0066t\u0068","\u0073\u0069\u0078t\u0068","\u0073e\u0076\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0068","\u006e\u0069\u006et\u0068","\u0074\u0065\u006et\u0068","\u0065\u006c\u0065\u0076\u0065\u006e\u0074\u0068","\u0074w\u0065\u006c\u0066\u0074\u0068","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066i\u0066\u0074\u0065\u0065\u006e\u0074h","\u0073i\u0078\u0074\u0065\u0065\u006e\u0074h","s\u0065\u0076\u0065\u006e\u0074\u0065\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e\u0074\u0068","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e\u0074\u0068"};
_db =[]string {"\u0074\u0065\u006et\u0068","\u0074w\u0065\u006e\u0074\u0069\u0065\u0074h","\u0074h\u0069\u0072\u0074\u0069\u0065\u0074h","\u0066\u006f\u0072\u0074\u0069\u0065\u0074\u0068","\u0066\u0069\u0066\u0074\u0069\u0065\u0074\u0068","\u0073\u0069\u0078\u0074\u0069\u0065\u0074\u0068","\u0073\u0065\u0076\u0065\u006e\u0074\u0069\u0065\u0074\u0068","\u0065i\u0067\u0068\u0074\u0069\u0065\u0074h","\u006ei\u006e\u0065\u0074\u0069\u0065\u0074h"};
_ebb ="\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049\u004a\u004bL\u004d\u004e\u004f\u0050\u0051\u0052\u0053\u0054\u0055\u0056W\u0058\u0059\u005a";);func _fea (_bg int64 ,_fg *_b .CT_NumFmt )(_ebbg string ){if _fg ==nil {return ;};_ege :=_fg .ValAttr ;
switch _ege {case _b .ST_NumberFormatNone :_ebbg ="";case _b .ST_NumberFormatDecimal :_ebbg =_c .Itoa (int (_bg ));case _b .ST_NumberFormatDecimalZero :_ebbg =_c .Itoa (int (_bg ));if _bg < 10{_ebbg ="\u0030"+_ebbg ;};case _b .ST_NumberFormatUpperRoman :var (_cd =_bg %10;
_eba =(_bg %100)/10;_bgg =(_bg %1000)/100;_dg =_bg /1000;);_ebbg =_ef [_dg ]+_fe [_bgg ]+_gb [_eba ]+_ed [_cd ];case _b .ST_NumberFormatLowerRoman :var (_dc =_bg %10;_fgc =(_bg %100)/10;_a =(_bg %1000)/100;_ec =_bg /1000;);_ebbg =_ef [_ec ]+_fe [_a ]+_gb [_fgc ]+_ed [_dc ];
_ebbg =_e .ToLower (_ebbg );case _b .ST_NumberFormatUpperLetter :_gg :=_bg %780;if _gg ==0{_gg =780;};_af :=(_gg -1)/26;_cda :=(_gg -1)%26;_cb :=_ebb [_af +_cda ];_ebbg =string (_cb );case _b .ST_NumberFormatLowerLetter :_bea :=_bg %780;if _bea ==0{_bea =780;
};_bf :=(_bea -1)/26;_ga :=(_bea -1)%26;_cdg :=_ebb [_bf +_ga ];_ebbg =_e .ToLower (string (_cdg ));default:_ebbg ="";};return ;};func StringToNumbers (str string )(int ,bool ){_cbe :=0;_gcc :=false ;for _ ,_ae :=range []byte (str ){_ae -='0';if _ae > 9{continue ;
};_cbe =_cbe *10+int (_ae );_gcc =true ;};return _cbe ,_gcc ;};func Initials (text string )string {if text ==""{return "";};_da :=_e .Split (text ,"\u0020");_bgc :=_e .Builder {};for _ ,_gbc :=range _da {_bgc .WriteByte (_gbc [0]);};return _bgc .String ();
};func _ge (_gc string )(_be []string ){for _cg :=0;_cg < len (_gc )-2;_cg ++{if string (_gc [_cg ])=="\u0025"{if !_e .Contains (string (_gc [_cg +2:]),"\u0025"){if _cg ==0{_be =append (_be ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_gc [_cg ]),string (_gc [_cg +1]),string (_gc [_cg +2:])));
}else {_be =append (_be ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073\u0025\u0073",string (_gc [_cg -1]),string (_gc [_cg ]),string (_gc [_cg +1]),string (_gc [_cg +2:])));};}else {_be =append (_be ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_gc [_cg ]),string (_gc [_cg +1]),string (_gc [_cg +2])));
};};};return ;};