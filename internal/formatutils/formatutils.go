//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package formatutils ;import (_c "fmt";_ca "github.com/unidoc/unioffice/schema/soo/wml";_f "strconv";_e "strings";);func _ef (_dg int64 ,_dc *_ca .CT_NumFmt )(_cb string ){if _dc ==nil {return ;};_ge :=_dc .ValAttr ;switch _ge {case _ca .ST_NumberFormatNone :_cb ="";
case _ca .ST_NumberFormatDecimal :_cb =_f .Itoa (int (_dg ));case _ca .ST_NumberFormatDecimalZero :_cb =_f .Itoa (int (_dg ));if _dg < 10{_cb ="\u0030"+_cb ;};case _ca .ST_NumberFormatUpperRoman :var (_de =_dg %10;_eb =(_dg %100)/10;_gcc =(_dg %1000)/100;
_eff =_dg /1000;);_cb =_cfc [_eff ]+_ab [_gcc ]+_cac [_eb ]+_eg [_de ];case _ca .ST_NumberFormatLowerRoman :var (_efg =_dg %10;_abf =(_dg %100)/10;_ba =(_dg %1000)/100;_ebg =_dg /1000;);_cb =_cfc [_ebg ]+_ab [_ba ]+_cac [_abf ]+_eg [_efg ];_cb =_e .ToLower (_cb );
case _ca .ST_NumberFormatUpperLetter :_af :=_dg %780;if _af ==0{_af =780;};_abd :=(_af -1)/26;_cbf :=(_af -1)%26;_ag :=_aa [_abd +_cbf ];_cb =string (_ag );case _ca .ST_NumberFormatLowerLetter :_db :=_dg %780;if _db ==0{_db =780;};_be :=(_db -1)/26;_gbf :=(_db -1)%26;
_ged :=_aa [_be +_gbf ];_cb =_e .ToLower (string (_ged ));default:_cb ="";};return ;};func StringToNumbers (str string )(int ,bool ){_adg :=0;_df :=false ;for _ ,_dgg :=range []byte (str ){_dgg -='0';if _dgg > 9{continue ;};_adg =_adg *10+int (_dgg );_df =true ;
};return _adg ,_df ;};var (_eg =[]string {"","\u0049","\u0049\u0049","\u0049\u0049\u0049","\u0049\u0056","\u0056","\u0056\u0049","\u0056\u0049\u0049","\u0056\u0049\u0049\u0049","\u0049\u0058"};_cac =[]string {"","\u0058","\u0058\u0058","\u0058\u0058\u0058","\u0058\u004c","\u004c","\u004c\u0058","\u004c\u0058\u0058","\u004c\u0058\u0058\u0058","\u0058\u0043"};
_ab =[]string {"","\u0043","\u0043\u0043","\u0043\u0043\u0043","\u0043\u0044","\u0044","\u0044\u0043","\u0044\u0043\u0043","\u0044\u0043\u0043\u0043","\u0043\u004d","\u004d"};_cfc =[]string {"","\u004d","\u004d\u004d","\u004d\u004d\u004d","\u004d\u004d\u004d\u004d","\u004d\u004d\u004dM\u004d","\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d\u004dM","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d"};
_ga =[]string {"\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0074\u0065\u006e","\u0065\u006c\u0065\u0076\u0065\u006e","\u0074\u0077\u0065\u006c\u0076\u0065","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e","\u0066i\u0066\u0074\u0065\u0065\u006e","\u0073i\u0078\u0074\u0065\u0065\u006e","\u0073e\u0076\u0065\u006e\u0074\u0065\u0065n","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e"};
_ee =[]string {"\u0074\u0065\u006e","\u0074\u0077\u0065\u006e\u0074\u0079","\u0074\u0068\u0069\u0072\u0074\u0079","\u0066\u006f\u0072t\u0079","\u0066\u0069\u0066t\u0079","\u0073\u0069\u0078t\u0079","\u0073e\u0076\u0065\u006e\u0074\u0079","\u0065\u0069\u0067\u0068\u0074\u0079","\u006e\u0069\u006e\u0065\u0074\u0079"};
_ec =[]string {"\u0066\u0069\u0072s\u0074","\u0073\u0065\u0063\u006f\u006e\u0064","\u0074\u0068\u0069r\u0064","\u0066\u006f\u0075\u0072\u0074\u0068","\u0066\u0069\u0066t\u0068","\u0073\u0069\u0078t\u0068","\u0073e\u0076\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0068","\u006e\u0069\u006et\u0068","\u0074\u0065\u006et\u0068","\u0065\u006c\u0065\u0076\u0065\u006e\u0074\u0068","\u0074w\u0065\u006c\u0066\u0074\u0068","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066i\u0066\u0074\u0065\u0065\u006e\u0074h","\u0073i\u0078\u0074\u0065\u0065\u006e\u0074h","s\u0065\u0076\u0065\u006e\u0074\u0065\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e\u0074\u0068","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e\u0074\u0068"};
_fc =[]string {"\u0074\u0065\u006et\u0068","\u0074w\u0065\u006e\u0074\u0069\u0065\u0074h","\u0074h\u0069\u0072\u0074\u0069\u0065\u0074h","\u0066\u006f\u0072\u0074\u0069\u0065\u0074\u0068","\u0066\u0069\u0066\u0074\u0069\u0065\u0074\u0068","\u0073\u0069\u0078\u0074\u0069\u0065\u0074\u0068","\u0073\u0065\u0076\u0065\u006e\u0074\u0069\u0065\u0074\u0068","\u0065i\u0067\u0068\u0074\u0069\u0065\u0074h","\u006ei\u006e\u0065\u0074\u0069\u0065\u0074h"};
_aa ="\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049\u004a\u004bL\u004d\u004e\u004f\u0050\u0051\u0052\u0053\u0054\u0055\u0056W\u0058\u0059\u005a";);func _gg (_bdd string )(_gb []string ){for _ad :=0;_ad < len (_bdd )-2;_ad ++{if string (_bdd [_ad ])=="\u0025"{if !_e .Contains (string (_bdd [_ad +2:]),"\u0025"){if _ad ==0{_gb =append (_gb ,_c .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_bdd [_ad ]),string (_bdd [_ad +1]),string (_bdd [_ad +2:])));
}else {_gb =append (_gb ,_c .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073\u0025\u0073",string (_bdd [_ad -1]),string (_bdd [_ad ]),string (_bdd [_ad +1]),string (_bdd [_ad +2:])));};}else {_gb =append (_gb ,_c .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_bdd [_ad ]),string (_bdd [_ad +1]),string (_bdd [_ad +2])));
};};};return ;};func FormatNumberingText (currentNumber int64 ,ilvl int64 ,lvlText string ,numFmt *_ca .CT_NumFmt ,levelNumbers map[int64 ]int64 )string {_g :=_gg (lvlText );_cf :=_ef (currentNumber ,numFmt );_cc :=int64 (0);for _gc ,_a :=range _g {_bd :=_c .Sprintf ("\u0025\u0025\u0025\u0064",_gc +1);
if len (_g )==1{_bd =_c .Sprintf ("\u0025\u0025\u0025\u0064",ilvl +1);_g [_gc ]=_e .Replace (_a ,_bd ,_cf ,1);break ;};if ilvl > 0&&ilvl > _cc &&_gc < (len (_g )-1){_d :=_ef (levelNumbers [_cc ],numFmt );_g [_gc ]=_e .Replace (_a ,_bd ,_d ,1);_cc ++;}else {_g [_gc ]=_e .Replace (_a ,_bd ,_cf ,1);
};};return _e .Join (_g ,"");};