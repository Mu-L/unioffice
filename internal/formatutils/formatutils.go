//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package formatutils ;import (_c "fmt";_f "github.com/unidoc/unioffice/schema/soo/wml";_ae "strconv";_e "strings";);func StringToNumbers (str string )(int ,bool ){_dd :=0;_fde :=false ;for _ ,_adc :=range []byte (str ){_adc -='0';if _adc > 9{continue ;};
_dd =_dd *10+int (_adc );_fde =true ;};return _dd ,_fde ;};func FormatNumberingText (currentNumber int64 ,ilvl int64 ,lvlText string ,numFmt *_f .CT_NumFmt ,levelNumbers map[int64 ]int64 )string {_b :=_ad (lvlText );_d :=_acd (currentNumber ,numFmt );_fd :=int64 (0);
for _ab ,_g :=range _b {_ac :=_c .Sprintf ("\u0025\u0025\u0025\u0064",_ab +1);if len (_b )==1{_ac =_c .Sprintf ("\u0025\u0025\u0025\u0064",ilvl +1);_b [_ab ]=_e .Replace (_g ,_ac ,_d ,1);break ;};if ilvl > 0&&ilvl > _fd &&_ab < (len (_b )-1){_ga :=_acd (levelNumbers [_fd ],numFmt );
_b [_ab ]=_e .Replace (_g ,_ac ,_ga ,1);_fd ++;}else {_b [_ab ]=_e .Replace (_g ,_ac ,_d ,1);};};return _e .Join (_b ,"");};var (_bf =[]string {"","\u0049","\u0049\u0049","\u0049\u0049\u0049","\u0049\u0056","\u0056","\u0056\u0049","\u0056\u0049\u0049","\u0056\u0049\u0049\u0049","\u0049\u0058"};
_ace =[]string {"","\u0058","\u0058\u0058","\u0058\u0058\u0058","\u0058\u004c","\u004c","\u004c\u0058","\u004c\u0058\u0058","\u004c\u0058\u0058\u0058","\u0058\u0043"};_da =[]string {"","\u0043","\u0043\u0043","\u0043\u0043\u0043","\u0043\u0044","\u0044","\u0044\u0043","\u0044\u0043\u0043","\u0044\u0043\u0043\u0043","\u0043\u004d","\u004d"};
_bfe =[]string {"","\u004d","\u004d\u004d","\u004d\u004d\u004d","\u004d\u004d\u004d\u004d","\u004d\u004d\u004dM\u004d","\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d\u004dM","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d"};
_gf =[]string {"\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0074\u0065\u006e","\u0065\u006c\u0065\u0076\u0065\u006e","\u0074\u0077\u0065\u006c\u0076\u0065","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e","\u0066i\u0066\u0074\u0065\u0065\u006e","\u0073i\u0078\u0074\u0065\u0065\u006e","\u0073e\u0076\u0065\u006e\u0074\u0065\u0065n","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e"};
_aee =[]string {"\u0074\u0065\u006e","\u0074\u0077\u0065\u006e\u0074\u0079","\u0074\u0068\u0069\u0072\u0074\u0079","\u0066\u006f\u0072t\u0079","\u0066\u0069\u0066t\u0079","\u0073\u0069\u0078t\u0079","\u0073e\u0076\u0065\u006e\u0074\u0079","\u0065\u0069\u0067\u0068\u0074\u0079","\u006e\u0069\u006e\u0065\u0074\u0079"};
_gd =[]string {"\u0066\u0069\u0072s\u0074","\u0073\u0065\u0063\u006f\u006e\u0064","\u0074\u0068\u0069r\u0064","\u0066\u006f\u0075\u0072\u0074\u0068","\u0066\u0069\u0066t\u0068","\u0073\u0069\u0078t\u0068","\u0073e\u0076\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0068","\u006e\u0069\u006et\u0068","\u0074\u0065\u006et\u0068","\u0065\u006c\u0065\u0076\u0065\u006e\u0074\u0068","\u0074w\u0065\u006c\u0066\u0074\u0068","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066i\u0066\u0074\u0065\u0065\u006e\u0074h","\u0073i\u0078\u0074\u0065\u0065\u006e\u0074h","s\u0065\u0076\u0065\u006e\u0074\u0065\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e\u0074\u0068","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e\u0074\u0068"};
_aa =[]string {"\u0074\u0065\u006et\u0068","\u0074w\u0065\u006e\u0074\u0069\u0065\u0074h","\u0074h\u0069\u0072\u0074\u0069\u0065\u0074h","\u0066\u006f\u0072\u0074\u0069\u0065\u0074\u0068","\u0066\u0069\u0066\u0074\u0069\u0065\u0074\u0068","\u0073\u0069\u0078\u0074\u0069\u0065\u0074\u0068","\u0073\u0065\u0076\u0065\u006e\u0074\u0069\u0065\u0074\u0068","\u0065i\u0067\u0068\u0074\u0069\u0065\u0074h","\u006ei\u006e\u0065\u0074\u0069\u0065\u0074h"};
_gfa ="\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049\u004a\u004bL\u004d\u004e\u004f\u0050\u0051\u0052\u0053\u0054\u0055\u0056W\u0058\u0059\u005a";);func _acd (_fdc int64 ,_gec *_f .CT_NumFmt )(_ce string ){if _gec ==nil {return ;};_dg :=_gec .ValAttr ;
switch _dg {case _f .ST_NumberFormatNone :_ce ="";case _f .ST_NumberFormatDecimal :_ce =_ae .Itoa (int (_fdc ));case _f .ST_NumberFormatDecimalZero :_ce =_ae .Itoa (int (_fdc ));if _fdc < 10{_ce ="\u0030"+_ce ;};case _f .ST_NumberFormatUpperRoman :var (_gb =_fdc %10;
_cd =(_fdc %100)/10;_gg =(_fdc %1000)/100;_db =_fdc /1000;);_ce =_bfe [_db ]+_da [_gg ]+_ace [_cd ]+_bf [_gb ];case _f .ST_NumberFormatLowerRoman :var (_dad =_fdc %10;_de =(_fdc %100)/10;_bc =(_fdc %1000)/100;_ggb =_fdc /1000;);_ce =_bfe [_ggb ]+_da [_bc ]+_ace [_de ]+_bf [_dad ];
_ce =_e .ToLower (_ce );case _f .ST_NumberFormatUpperLetter :_fa :=_fdc %780;if _fa ==0{_fa =780;};_af :=(_fa -1)/26;_ee :=(_fa -1)%26;_fb :=_gfa [_af +_ee ];_ce =string (_fb );case _f .ST_NumberFormatLowerLetter :_ff :=_fdc %780;if _ff ==0{_ff =780;};
_gca :=(_ff -1)/26;_abf :=(_ff -1)%26;_add :=_gfa [_gca +_abf ];_ce =_e .ToLower (string (_add ));default:_ce ="";};return ;};func _ad (_ge string )(_gc []string ){for _fdf :=0;_fdf < len (_ge )-2;_fdf ++{if string (_ge [_fdf ])=="\u0025"{if !_e .Contains (string (_ge [_fdf +2:]),"\u0025"){if _fdf ==0{_gc =append (_gc ,_c .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_ge [_fdf ]),string (_ge [_fdf +1]),string (_ge [_fdf +2:])));
}else {_gc =append (_gc ,_c .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073\u0025\u0073",string (_ge [_fdf -1]),string (_ge [_fdf ]),string (_ge [_fdf +1]),string (_ge [_fdf +2:])));};}else {_gc =append (_gc ,_c .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_ge [_fdf ]),string (_ge [_fdf +1]),string (_ge [_fdf +2])));
};};};return ;};