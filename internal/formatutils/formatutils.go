//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package formatutils ;import (_g "fmt";_e "github.com/unidoc/unioffice/schema/soo/wml";_d "strconv";_c "strings";);func _b (_bf string )(_cb []string ){for _bd :=0;_bd < len (_bf )-2;_bd ++{if string (_bf [_bd ])=="\u0025"{if !_c .Contains (string (_bf [_bd +2:]),"\u0025"){if _bd ==0{_cb =append (_cb ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_bf [_bd ]),string (_bf [_bd +1]),string (_bf [_bd +2:])));
}else {_cb =append (_cb ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073\u0025\u0073",string (_bf [_bd -1]),string (_bf [_bd ]),string (_bf [_bd +1]),string (_bf [_bd +2:])));};}else {_cb =append (_cb ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_bf [_bd ]),string (_bf [_bd +1]),string (_bf [_bd +2])));
};};};return ;};func FormatNumberingText (currentNumber int64 ,ilvl int64 ,lvlText string ,numFmt *_e .CT_NumFmt ,levelNumbers map[int64 ]int64 )string {_a :=_b (lvlText );_ee :=_ff (currentNumber ,numFmt );_gd :=int64 (0);for _fa ,_ec :=range _a {_af :=_g .Sprintf ("\u0025\u0025\u0025\u0064",_fa +1);
if len (_a )==1{_af =_g .Sprintf ("\u0025\u0025\u0025\u0064",ilvl +1);_a [_fa ]=_c .Replace (_ec ,_af ,_ee ,1);break ;};if ilvl > 0&&ilvl > _gd &&_fa < (len (_a )-1){_cc :=_ff (levelNumbers [_gd ],numFmt );_a [_fa ]=_c .Replace (_ec ,_af ,_cc ,1);_gd ++;
}else {_a [_fa ]=_c .Replace (_ec ,_af ,_ee ,1);};};return _c .Join (_a ,"");};func StringToNumbers (str string )(int ,bool ){_gfb :=0;_cdg :=false ;for _ ,_fc :=range []byte (str ){_fc -='0';if _fc > 9{continue ;};_gfb =_gfb *10+int (_fc );_cdg =true ;
};return _gfb ,_cdg ;};var (_be =[]string {"","\u0049","\u0049\u0049","\u0049\u0049\u0049","\u0049\u0056","\u0056","\u0056\u0049","\u0056\u0049\u0049","\u0056\u0049\u0049\u0049","\u0049\u0058"};_ga =[]string {"","\u0058","\u0058\u0058","\u0058\u0058\u0058","\u0058\u004c","\u004c","\u004c\u0058","\u004c\u0058\u0058","\u004c\u0058\u0058\u0058","\u0058\u0043"};
_db =[]string {"","\u0043","\u0043\u0043","\u0043\u0043\u0043","\u0043\u0044","\u0044","\u0044\u0043","\u0044\u0043\u0043","\u0044\u0043\u0043\u0043","\u0043\u004d","\u004d"};_ae =[]string {"","\u004d","\u004d\u004d","\u004d\u004d\u004d","\u004d\u004d\u004d\u004d","\u004d\u004d\u004dM\u004d","\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d\u004dM","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d"};
_aee =[]string {"\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0074\u0065\u006e","\u0065\u006c\u0065\u0076\u0065\u006e","\u0074\u0077\u0065\u006c\u0076\u0065","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e","\u0066i\u0066\u0074\u0065\u0065\u006e","\u0073i\u0078\u0074\u0065\u0065\u006e","\u0073e\u0076\u0065\u006e\u0074\u0065\u0065n","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e"};
_ad =[]string {"\u0074\u0065\u006e","\u0074\u0077\u0065\u006e\u0074\u0079","\u0074\u0068\u0069\u0072\u0074\u0079","\u0066\u006f\u0072t\u0079","\u0066\u0069\u0066t\u0079","\u0073\u0069\u0078t\u0079","\u0073e\u0076\u0065\u006e\u0074\u0079","\u0065\u0069\u0067\u0068\u0074\u0079","\u006e\u0069\u006e\u0065\u0074\u0079"};
_eb =[]string {"\u0066\u0069\u0072s\u0074","\u0073\u0065\u0063\u006f\u006e\u0064","\u0074\u0068\u0069r\u0064","\u0066\u006f\u0075\u0072\u0074\u0068","\u0066\u0069\u0066t\u0068","\u0073\u0069\u0078t\u0068","\u0073e\u0076\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0068","\u006e\u0069\u006et\u0068","\u0074\u0065\u006et\u0068","\u0065\u006c\u0065\u0076\u0065\u006e\u0074\u0068","\u0074w\u0065\u006c\u0066\u0074\u0068","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066i\u0066\u0074\u0065\u0065\u006e\u0074h","\u0073i\u0078\u0074\u0065\u0065\u006e\u0074h","s\u0065\u0076\u0065\u006e\u0074\u0065\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e\u0074\u0068","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e\u0074\u0068"};
_gb =[]string {"\u0074\u0065\u006et\u0068","\u0074w\u0065\u006e\u0074\u0069\u0065\u0074h","\u0074h\u0069\u0072\u0074\u0069\u0065\u0074h","\u0066\u006f\u0072\u0074\u0069\u0065\u0074\u0068","\u0066\u0069\u0066\u0074\u0069\u0065\u0074\u0068","\u0073\u0069\u0078\u0074\u0069\u0065\u0074\u0068","\u0073\u0065\u0076\u0065\u006e\u0074\u0069\u0065\u0074\u0068","\u0065i\u0067\u0068\u0074\u0069\u0065\u0074h","\u006ei\u006e\u0065\u0074\u0069\u0065\u0074h"};
_ebg ="\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049\u004a\u004bL\u004d\u004e\u004f\u0050\u0051\u0052\u0053\u0054\u0055\u0056W\u0058\u0059\u005a";);func _ff (_bg int64 ,_ba *_e .CT_NumFmt )(_ebb string ){if _ba ==nil {return ;};_df :=_ba .ValAttr ;
switch _df {case _e .ST_NumberFormatNone :_ebb ="";case _e .ST_NumberFormatDecimal :_ebb =_d .Itoa (int (_bg ));case _e .ST_NumberFormatDecimalZero :_ebb =_d .Itoa (int (_bg ));if _bg < 10{_ebb ="\u0030"+_ebb ;};case _e .ST_NumberFormatUpperRoman :var (_cd =_bg %10;
_fd =(_bg %100)/10;_fae =(_bg %1000)/100;_gda =_bg /1000;);_ebb =_ae [_gda ]+_db [_fae ]+_ga [_fd ]+_be [_cd ];case _e .ST_NumberFormatLowerRoman :var (_bda =_bg %10;_cf =(_bg %100)/10;_gf =(_bg %1000)/100;_dbc =_bg /1000;);_ebb =_ae [_dbc ]+_db [_gf ]+_ga [_cf ]+_be [_bda ];
_ebb =_c .ToLower (_ebb );case _e .ST_NumberFormatUpperLetter :_ccd :=_bg %780;if _ccd ==0{_ccd =780;};_dc :=(_ccd -1)/26;_gdd :=(_ccd -1)%26;_gddb :=_ebg [_dc +_gdd ];_ebb =string (_gddb );case _e .ST_NumberFormatLowerLetter :_ac :=_bg %780;if _ac ==0{_ac =780;
};_dca :=(_ac -1)/26;_dg :=(_ac -1)%26;_aeg :=_ebg [_dca +_dg ];_ebb =_c .ToLower (string (_aeg ));default:_ebb ="";};return ;};