//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package formatutils ;import (_ab "fmt";_e "github.com/unidoc/unioffice/v2/schema/soo/wml";_ac "strconv";_d "strings";);var (_da =[]string {"","\u0049","\u0049\u0049","\u0049\u0049\u0049","\u0049\u0056","\u0056","\u0056\u0049","\u0056\u0049\u0049","\u0056\u0049\u0049\u0049","\u0049\u0058"};
_ec =[]string {"","\u0058","\u0058\u0058","\u0058\u0058\u0058","\u0058\u004c","\u004c","\u004c\u0058","\u004c\u0058\u0058","\u004c\u0058\u0058\u0058","\u0058\u0043"};_aag =[]string {"","\u0043","\u0043\u0043","\u0043\u0043\u0043","\u0043\u0044","\u0044","\u0044\u0043","\u0044\u0043\u0043","\u0044\u0043\u0043\u0043","\u0043\u004d","\u004d"};
_bd =[]string {"","\u004d","\u004d\u004d","\u004d\u004d\u004d","\u004d\u004d\u004d\u004d","\u004d\u004d\u004dM\u004d","\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d\u004dM","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d"};
_ae =[]string {"\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0074\u0065\u006e","\u0065\u006c\u0065\u0076\u0065\u006e","\u0074\u0077\u0065\u006c\u0076\u0065","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e","\u0066i\u0066\u0074\u0065\u0065\u006e","\u0073i\u0078\u0074\u0065\u0065\u006e","\u0073e\u0076\u0065\u006e\u0074\u0065\u0065n","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e"};
_ga =[]string {"\u0074\u0065\u006e","\u0074\u0077\u0065\u006e\u0074\u0079","\u0074\u0068\u0069\u0072\u0074\u0079","\u0066\u006f\u0072t\u0079","\u0066\u0069\u0066t\u0079","\u0073\u0069\u0078t\u0079","\u0073e\u0076\u0065\u006e\u0074\u0079","\u0065\u0069\u0067\u0068\u0074\u0079","\u006e\u0069\u006e\u0065\u0074\u0079"};
_eg =[]string {"\u0066\u0069\u0072s\u0074","\u0073\u0065\u0063\u006f\u006e\u0064","\u0074\u0068\u0069r\u0064","\u0066\u006f\u0075\u0072\u0074\u0068","\u0066\u0069\u0066t\u0068","\u0073\u0069\u0078t\u0068","\u0073e\u0076\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0068","\u006e\u0069\u006et\u0068","\u0074\u0065\u006et\u0068","\u0065\u006c\u0065\u0076\u0065\u006e\u0074\u0068","\u0074w\u0065\u006c\u0066\u0074\u0068","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066i\u0066\u0074\u0065\u0065\u006e\u0074h","\u0073i\u0078\u0074\u0065\u0065\u006e\u0074h","s\u0065\u0076\u0065\u006e\u0074\u0065\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e\u0074\u0068","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e\u0074\u0068"};
_bdf =[]string {"\u0074\u0065\u006et\u0068","\u0074w\u0065\u006e\u0074\u0069\u0065\u0074h","\u0074h\u0069\u0072\u0074\u0069\u0065\u0074h","\u0066\u006f\u0072\u0074\u0069\u0065\u0074\u0068","\u0066\u0069\u0066\u0074\u0069\u0065\u0074\u0068","\u0073\u0069\u0078\u0074\u0069\u0065\u0074\u0068","\u0073\u0065\u0076\u0065\u006e\u0074\u0069\u0065\u0074\u0068","\u0065i\u0067\u0068\u0074\u0069\u0065\u0074h","\u006ei\u006e\u0065\u0074\u0069\u0065\u0074h"};
_bdd ="\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049\u004a\u004bL\u004d\u004e\u004f\u0050\u0051\u0052\u0053\u0054\u0055\u0056W\u0058\u0059\u005a";);func _g (_abe string )(_c []string ){for _dc :=0;_dc < len (_abe )-2;_dc ++{if string (_abe [_dc ])=="\u0025"{if !_d .Contains (string (_abe [_dc +2:]),"\u0025"){if _dc ==0{_c =append (_c ,_ab .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_abe [_dc ]),string (_abe [_dc +1]),string (_abe [_dc +2:])));
}else {_c =append (_c ,_ab .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073\u0025\u0073",string (_abe [_dc -1]),string (_abe [_dc ]),string (_abe [_dc +1]),string (_abe [_dc +2:])));};}else {_c =append (_c ,_ab .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_abe [_dc ]),string (_abe [_dc +1]),string (_abe [_dc +2])));
};};};return ;};func FormatNumberingText (currentNumber int64 ,ilvl int64 ,lvlText string ,numFmt *_e .CT_NumFmt ,levelNumbers map[int64 ]int64 )string {_b :=_g (lvlText );_ef :=_f (currentNumber ,numFmt );_aa :=int64 (0);for _bg ,_bc :=range _b {_bcg :=_ab .Sprintf ("\u0025\u0025\u0025\u0064",_bg +1);
if len (_b )==1{_bcg =_ab .Sprintf ("\u0025\u0025\u0025\u0064",ilvl +1);_b [_bg ]=_d .Replace (_bc ,_bcg ,_ef ,1);break ;};if ilvl > 0&&ilvl > _aa &&_bg < (len (_b )-1){_ad :=_f (levelNumbers [_aa ],numFmt );_b [_bg ]=_d .Replace (_bc ,_bcg ,_ad ,1);_aa ++;
}else {_b [_bg ]=_d .Replace (_bc ,_bcg ,_ef ,1);};};return _d .Join (_b ,"");};func StringToNumbers (str string )(int ,bool ){_fg :=0;_fgb :=false ;for _ ,_dd :=range []byte (str ){_dd -='0';if _dd > 9{continue ;};_fg =_fg *10+int (_dd );_fgb =true ;};
return _fg ,_fgb ;};func Initials (text string )string {if text ==""{return "";};_fee :=_d .Split (text ,"\u0020");_gc :=_d .Builder {};for _ ,_ff :=range _fee {_gc .WriteByte (_ff [0]);};return _gc .String ();};func _f (_aae int64 ,_cd *_e .CT_NumFmt )(_fe string ){if _cd ==nil {return ;
};_gf :=_cd .ValAttr ;switch _gf {case _e .ST_NumberFormatNone :_fe ="";case _e .ST_NumberFormatDecimal :_fe =_ac .Itoa (int (_aae ));case _e .ST_NumberFormatDecimalZero :_fe =_ac .Itoa (int (_aae ));if _aae < 10{_fe ="\u0030"+_fe ;};case _e .ST_NumberFormatUpperRoman :var (_efe =_aae %10;
_cc =(_aae %100)/10;_aeb =(_aae %1000)/100;_be =_aae /1000;);_fe =_bd [_be ]+_aag [_aeb ]+_ec [_cc ]+_da [_efe ];case _e .ST_NumberFormatLowerRoman :var (_ca =_aae %10;_bgc =(_aae %100)/10;_cde =(_aae %1000)/100;_gad =_aae /1000;);_fe =_bd [_gad ]+_aag [_cde ]+_ec [_bgc ]+_da [_ca ];
_fe =_d .ToLower (_fe );case _e .ST_NumberFormatUpperLetter :_gb :=_aae %780;if _gb ==0{_gb =780;};_ag :=(_gb -1)/26;_daa :=(_gb -1)%26;_ee :=_bdd [_ag +_daa ];_fe =string (_ee );case _e .ST_NumberFormatLowerLetter :_gfg :=_aae %780;if _gfg ==0{_gfg =780;
};_bb :=(_gfg -1)/26;_ba :=(_gfg -1)%26;_eeg :=_bdd [_bb +_ba ];_fe =_d .ToLower (string (_eeg ));default:_fe ="";};return ;};