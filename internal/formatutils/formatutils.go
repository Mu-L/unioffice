//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package formatutils ;import (_g "fmt";_fc "github.com/unidoc/unioffice/v2/schema/soo/wml";_gd "strconv";_fd "strings";);func Initials (text string )string {if text ==""{return "";};_fdd :=_fd .Split (text ,"\u0020");_ef :=_fd .Builder {};for _ ,_ab :=range _fdd {_ef .WriteByte (_ab [0]);
};return _ef .String ();};func _bd (_ec int64 ,_ea *_fc .CT_NumFmt )(_ca string ){if _ea ==nil {return ;};_eca :=_ea .ValAttr ;switch _eca {case _fc .ST_NumberFormatNone :_ca ="";case _fc .ST_NumberFormatDecimal :_ca =_gd .Itoa (int (_ec ));case _fc .ST_NumberFormatDecimalZero :_ca =_gd .Itoa (int (_ec ));
if _ec < 10{_ca ="\u0030"+_ca ;};case _fc .ST_NumberFormatUpperRoman :var (_gde =_ec %10;_eab =(_ec %100)/10;_cbe =(_ec %1000)/100;_d =_ec /1000;);_ca =_cb [_d ]+_cee [_cbe ]+_gbd [_eab ]+_ce [_gde ];case _fc .ST_NumberFormatLowerRoman :var (_af =_ec %10;
_dd =(_ec %100)/10;_gdea =(_ec %1000)/100;_ba =_ec /1000;);_ca =_cb [_ba ]+_cee [_gdea ]+_gbd [_dd ]+_ce [_af ];_ca =_fd .ToLower (_ca );case _fc .ST_NumberFormatUpperLetter :_ced :=_ec %780;if _ced ==0{_ced =780;};_bbe :=(_ced -1)/26;_gg :=(_ced -1)%26;
_ead :=_ccd [_bbe +_gg ];_ca =string (_ead );case _fc .ST_NumberFormatLowerLetter :_bc :=_ec %780;if _bc ==0{_bc =780;};_ge :=(_bc -1)/26;_de :=(_bc -1)%26;_ff :=_ccd [_ge +_de ];_ca =_fd .ToLower (string (_ff ));default:_ca ="";};return ;};func StringToNumbers (str string )(int ,bool ){_gfd :=0;
_cd :=false ;for _ ,_gdd :=range []byte (str ){_gdd -='0';if _gdd > 9{continue ;};_gfd =_gfd *10+int (_gdd );_cd =true ;};return _gfd ,_cd ;};func FormatNumberingText (currentNumber int64 ,ilvl int64 ,lvlText string ,numFmt *_fc .CT_NumFmt ,levelNumbers map[int64 ]int64 )string {_b :=_gf (lvlText );
_bb :=_bd (currentNumber ,numFmt );_bbg :=int64 (0);for _c ,_fdg :=range _b {_e :=_g .Sprintf ("\u0025\u0025\u0025\u0064",_c +1);if len (_b )==1{_e =_g .Sprintf ("\u0025\u0025\u0025\u0064",ilvl +1);_b [_c ]=_fd .Replace (_fdg ,_e ,_bb ,1);break ;};if ilvl > 0&&ilvl > _bbg &&_c < (len (_b )-1){_cc :=_bd (levelNumbers [_bbg ],numFmt );
_b [_c ]=_fd .Replace (_fdg ,_e ,_cc ,1);_bbg ++;}else {_b [_c ]=_fd .Replace (_fdg ,_e ,_bb ,1);};};return _fd .Join (_b ,"");};var (_ce =[]string {"","\u0049","\u0049\u0049","\u0049\u0049\u0049","\u0049\u0056","\u0056","\u0056\u0049","\u0056\u0049\u0049","\u0056\u0049\u0049\u0049","\u0049\u0058"};
_gbd =[]string {"","\u0058","\u0058\u0058","\u0058\u0058\u0058","\u0058\u004c","\u004c","\u004c\u0058","\u004c\u0058\u0058","\u004c\u0058\u0058\u0058","\u0058\u0043"};_cee =[]string {"","\u0043","\u0043\u0043","\u0043\u0043\u0043","\u0043\u0044","\u0044","\u0044\u0043","\u0044\u0043\u0043","\u0044\u0043\u0043\u0043","\u0043\u004d","\u004d"};
_cb =[]string {"","\u004d","\u004d\u004d","\u004d\u004d\u004d","\u004d\u004d\u004d\u004d","\u004d\u004d\u004dM\u004d","\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d\u004dM","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d"};
_a =[]string {"\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0074\u0065\u006e","\u0065\u006c\u0065\u0076\u0065\u006e","\u0074\u0077\u0065\u006c\u0076\u0065","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e","\u0066i\u0066\u0074\u0065\u0065\u006e","\u0073i\u0078\u0074\u0065\u0065\u006e","\u0073e\u0076\u0065\u006e\u0074\u0065\u0065n","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e"};
_ga =[]string {"\u0074\u0065\u006e","\u0074\u0077\u0065\u006e\u0074\u0079","\u0074\u0068\u0069\u0072\u0074\u0079","\u0066\u006f\u0072t\u0079","\u0066\u0069\u0066t\u0079","\u0073\u0069\u0078t\u0079","\u0073e\u0076\u0065\u006e\u0074\u0079","\u0065\u0069\u0067\u0068\u0074\u0079","\u006e\u0069\u006e\u0065\u0074\u0079"};
_aa =[]string {"\u0066\u0069\u0072s\u0074","\u0073\u0065\u0063\u006f\u006e\u0064","\u0074\u0068\u0069r\u0064","\u0066\u006f\u0075\u0072\u0074\u0068","\u0066\u0069\u0066t\u0068","\u0073\u0069\u0078t\u0068","\u0073e\u0076\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0068","\u006e\u0069\u006et\u0068","\u0074\u0065\u006et\u0068","\u0065\u006c\u0065\u0076\u0065\u006e\u0074\u0068","\u0074w\u0065\u006c\u0066\u0074\u0068","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066i\u0066\u0074\u0065\u0065\u006e\u0074h","\u0073i\u0078\u0074\u0065\u0065\u006e\u0074h","s\u0065\u0076\u0065\u006e\u0074\u0065\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e\u0074\u0068","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e\u0074\u0068"};
_ee =[]string {"\u0074\u0065\u006et\u0068","\u0074w\u0065\u006e\u0074\u0069\u0065\u0074h","\u0074h\u0069\u0072\u0074\u0069\u0065\u0074h","\u0066\u006f\u0072\u0074\u0069\u0065\u0074\u0068","\u0066\u0069\u0066\u0074\u0069\u0065\u0074\u0068","\u0073\u0069\u0078\u0074\u0069\u0065\u0074\u0068","\u0073\u0065\u0076\u0065\u006e\u0074\u0069\u0065\u0074\u0068","\u0065i\u0067\u0068\u0074\u0069\u0065\u0074h","\u006ei\u006e\u0065\u0074\u0069\u0065\u0074h"};
_ccd ="\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049\u004a\u004bL\u004d\u004e\u004f\u0050\u0051\u0052\u0053\u0054\u0055\u0056W\u0058\u0059\u005a";);func _gf (_gb string )(_eb []string ){for _cca :=0;_cca < len (_gb )-2;_cca ++{if string (_gb [_cca ])=="\u0025"{if !_fd .Contains (string (_gb [_cca +2:]),"\u0025"){if _cca ==0{_eb =append (_eb ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_gb [_cca ]),string (_gb [_cca +1]),string (_gb [_cca +2:])));
}else {_eb =append (_eb ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073\u0025\u0073",string (_gb [_cca -1]),string (_gb [_cca ]),string (_gb [_cca +1]),string (_gb [_cca +2:])));};}else {_eb =append (_eb ,_g .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_gb [_cca ]),string (_gb [_cca +1]),string (_gb [_cca +2])));
};};};return ;};