//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package sort ;import (_c "regexp";_d "sort";_g "strconv";);func NaturalCompare (a ,b string )bool {_ea :=_ac (a );_acf :=_ac (b );_bg :=len (_ea );_gd :=len (_acf );for _aaa :=range _ea {if _aaa >=_gd {return false ;};_ga ,_gca :=_g .Atoi (_ea [_aaa ]);
_acd ,_ff :=_g .Atoi (_acf [_aaa ]);if _gca ==nil &&_ff ==nil {if _ga ==_acd {if _aaa ==_bg -1{return true ;}else if _aaa ==_gd -1{return false ;};continue ;};return _ga < _acd ;};if _ea [_aaa ]==_acf [_aaa ]{if _aaa ==_bg -1{return true ;}else if _aaa ==_gd -1{return false ;
};continue ;};return _ea [_aaa ]< _acf [_aaa ];};return false ;};func _ac (_aa string )[]string {return _bf .FindAllString (_aa ,-1)};func NaturalSort (l []string ){_d .Sort (stringSlice (l ))};func MergeSort (array []float64 )[]float64 {if len (array )<=1{_e :=make ([]float64 ,len (array ));
copy (_e ,array );return _e ;};_eg :=len (array )/2;_cb :=MergeSort (array [:_eg ]);_ge :=MergeSort (array [_eg :]);_gc :=make ([]float64 ,len (array ));_ef :=0;_a :=0;_ec :=0;for _a < len (_cb )&&_ec < len (_ge ){if _cb [_a ]<=_ge [_ec ]{_gc [_ef ]=_cb [_a ];
_a ++;}else {_gc [_ef ]=_ge [_ec ];_ec ++;};_ef ++;};for _a < len (_cb ){_gc [_ef ]=_cb [_a ];_a ++;_ef ++;};for _ec < len (_ge ){_gc [_ef ]=_ge [_ec ];_ec ++;_ef ++;};return _gc ;};func (_gg stringSlice )Less (a ,b int )bool {return NaturalCompare (_gg [a ],_gg [b ])};
func (_gb stringSlice )Len ()int {return len (_gb )};type stringSlice []string ;func (_f stringSlice )Swap (a ,b int ){_f [a ],_f [b ]=_f [b ],_f [a ]};var _bf =_c .MustCompile ("\u0028\\\u0064\u002b\u007c\u005c\u0044\u002b)");