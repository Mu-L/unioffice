//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package sort ;import (_c "regexp";_d "sort";_e "strconv";);var _a =_c .MustCompile ("\u0028\\\u0064\u002b\u007c\u005c\u0044\u002b)");func (_dgb stringSlice )Len ()int {return len (_dgb )};func MergeSort (array []float64 )[]float64 {if len (array )<=1{_ef :=make ([]float64 ,len (array ));
copy (_ef ,array );return _ef ;};_ec :=len (array )/2;_f :=MergeSort (array [:_ec ]);_ed :=MergeSort (array [_ec :]);_dg :=make ([]float64 ,len (array ));_g :=0;_gb :=0;_gg :=0;for _gb < len (_f )&&_gg < len (_ed ){if _f [_gb ]<=_ed [_gg ]{_dg [_g ]=_f [_gb ];
_gb ++;}else {_dg [_g ]=_ed [_gg ];_gg ++;};_g ++;};for _gb < len (_f ){_dg [_g ]=_f [_gb ];_gb ++;_g ++;};for _gg < len (_ed ){_dg [_g ]=_ed [_gg ];_gg ++;_g ++;};return _dg ;};func (_df stringSlice )Swap (a ,b int ){_df [a ],_df [b ]=_df [b ],_df [a ]};
func (_be stringSlice )Less (a ,b int )bool {return NaturalCompare (_be [a ],_be [b ])};func NaturalCompare (a ,b string )bool {_bee :=_bef (a );_gba :=_bef (b );_fe :=len (_bee );_ba :=len (_gba );for _ac :=range _bee {if _ac >=_ba {return false ;};_aa ,_edg :=_e .Atoi (_bee [_ac ]);
_fa ,_bg :=_e .Atoi (_gba [_ac ]);if _edg ==nil &&_bg ==nil {if _aa ==_fa {if _ac ==_fe -1{return true ;}else if _ac ==_ba -1{return false ;};continue ;};return _aa < _fa ;};if _bee [_ac ]==_gba [_ac ]{if _ac ==_fe -1{return true ;}else if _ac ==_ba -1{return false ;
};continue ;};return _bee [_ac ]< _gba [_ac ];};return false ;};func _bef (_ag string )[]string {return _a .FindAllString (_ag ,-1)};func NaturalSort (l []string ){_d .Sort (stringSlice (l ))};type stringSlice []string ;