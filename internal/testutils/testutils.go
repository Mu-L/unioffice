//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_b "archive/zip";_cgg "bufio";_cgc "bytes";_ae "crypto/md5";_bc "encoding/hex";_gb "encoding/json";_df "encoding/xml";_cd "errors";_ag "flag";_aa "fmt";_ff "github.com/stretchr/testify/require";_cgf "github.com/unidoc/unioffice/v2";
_cc "github.com/unidoc/unipdf/v4/common";_ga "golang.org/x/image/font";_bed "golang.org/x/image/font/opentype";_eb "golang.org/x/image/math/fixed";_a "image";_f "image/color";_dd "image/draw";_fe "image/png";_bec "io";_gd "io/ioutil";_cg "log";_g "math";
_ca "os";_cb "os/exec";_cdc "path/filepath";_c "strings";_e "sync";_cf "testing";_be "time";);func CreatePNGDiff (src ,dst string )(bool ,string ,float64 ,float64 ,error ){_abc ,_cad :=ReadPNG (src );if _cad !=nil {return false ,"",0,0,_cad ;};_adc ,_cad :=ReadPNG (dst );
if _cad !=nil {return false ,"",0,0,_cad ;};_dddg :=_abc .Bounds ();_cee :=_adc .Bounds ();if !_caaf (_dddg ,_cee ){if _g .Abs (float64 (_dddg .Max .X )-float64 (_cee .Max .X ))> 1{_cg .Printf ("S\u006f\u0075\u0072\u0063\u0065\u0020b\u006f\u0075\u006e\u0064\u0073\u003a \u0025\u0076\u003b\u0020\u0044\u0065\u0073t\u0020\u0062\u006f\u0075\u006e\u0064\u0073\u003a\u0020\u0025v\u000a",_dddg ,_cee );
return false ,"",0,0,ErrImageSizeNotMatch ;};};_bag :=_a .NewRGBA (_a .Rect (0,0,_dddg .Max .X ,_dddg .Max .Y ));var (_efda float64 ;_afcb float64 ;);for _aea :=_dddg .Min .Y ;_aea < _dddg .Max .Y ;_aea ++{for _cef :=_dddg .Min .X ;_cef < _dddg .Max .X ;
_cef ++{_ead ,_gfg ,_cfg ,_dca :=_abc .At (_cef ,_aea ).RGBA ();_ed ,_gdf ,_efg ,_eee :=_adc .At (_cef ,_aea ).RGBA ();_bag .Set (_cef ,_aea ,_f .RGBA {uint8 (_ed ),uint8 (_gdf ),uint8 (_efg ),64});_dfc :=_dca ==0x00&&_ead ==0x00&&_gfg ==0x00&&_cfg ==0x00&&_ed ==0xFFFF&&_gdf ==0xFFFF&&_efg ==0xFFFF;
if !_dfc &&!_begc (_abc .At (_cef ,_aea ),_adc .At (_cef ,_aea )){_bag .Set (_cef ,_aea ,_f .RGBA {uint8 (_ead ),uint8 (_gfg ),uint8 (_cfg ),uint8 (_dca )});_afe :=float64 (_ead )+float64 (_gfg )+float64 (_cfg )+float64 (_dca )-float64 (_ed )+float64 (_gdf )+float64 (_efg )+float64 (_eee );
_dfd :=_g .Sqrt (_g .Pow (_afe /float64 (_dddg .Dx ()*_dddg .Dy ()),2));_afcb +=_dfd ;_efda ++;};};};_eadf :=_efda /float64 (_dddg .Dx ()*_dddg .Dy ())*100;_dfcc :=_cdc .Dir (src );_gdg :=_c .TrimSuffix (_cdc .Base (src ),_cdc .Ext (src ));_dfdf ,_cad :=_ca .Create (_dfcc +"\u002f"+_gdg +"\u002dd\u0069\u0066\u0066\u002e\u0070\u006eg");
if _cad !=nil {return false ,"",0,0,_cad ;};defer _dfdf .Close ();_aga :=_c .Replace (_dfcc ,"\u0072\u0065\u006e\u0064\u0065\u0072","\u0066\u006f\u006et\u0073",1)+"\u002f\u0043\u0061l\u0069\u0062\u0072\u0069\u002e\u0074\u0074\u0066";_gaea :=_aa .Sprintf ("\u0044\u0069f\u0066\u0065\u0072e\u006e\u0063\u0065\u003a\u0020\u0025\u0066\u0025\u0025",_eadf );
_cad =_aad (_bag ,_aga ,_gaea ,15,22);if _cad !=nil {return false ,"",0,0,_cad ;};_gaea =_aa .Sprintf ("T\u006ft\u0061\u006c\u0020\u0044\u0069\u0066\u0066\u0065r\u0065\u006e\u0063\u0065: \u0025\u0066",_afcb );_cad =_aad (_bag ,_aga ,_gaea ,15,44);if _cad !=nil {return false ,"",0,0,_cad ;
};if _agb :=_fe .Encode (_dfdf ,_bag );_agb !=nil {return false ,"",0,0,_agb ;};return true ,_dfdf .Name (),_eadf ,_afcb ,nil ;};func RunRenderOfficeTest (t *_cf .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ,postfix string ){_efc :=_c .TrimSuffix (_cdc .Base (pdfPath ),_cdc .Ext (pdfPath ));
t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_fcc *_cf .T ){_egc :=_cdc .Join (outputDir ,_efc );_gbcc :=_egc +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _dfaf :=RenderPDFToPNGs (pdfPath ,0,_gbcc );_dfaf !=nil {_fcc .Skip (_dfaf );};_fgcd :=_efc +postfix ;
_bedf :=_cdc .Join (outputDir ,_fgcd );_bfcg :=_bedf +"\u002d%\u0064\u002e\u0070\u006e\u0067";_bca :=false ;if saveBaseline {_fgbd :=_cdc .Dir (pdfPath );_cfd :=_cdc .Join (_fgbd ,_fgcd +"\u002e\u0070\u0064\u0066");if _ ,_daf :=_ca .Stat (_cfd );_daf ==nil {_fcc .Logf ("\u0052e\u006e\u0064\u0065\u0072\u0020\u004d\u0053\u0020\u004f\u0066\u0066i\u0063\u0065\u0020\u0050\u0044\u0046\u003a\u0020\u0025\u0076",_cfd );
if _bdb :=RenderPDFToPNGs (_cfd ,0,_bfcg );_bdb !=nil {_fcc .Skip (_bdb );};_bca =true ;};};for _beb :=1;true ;_beb ++{_dadc :=_aa .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_egc ,_beb );_fgdc :=_cdc .Join (baselineRenderPath ,_aa .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_efc ,_beb ));
if _ ,_fef :=_ca .Stat (_dadc );_fef !=nil {break ;};_fcc .Logf ("\u0025\u0073",_fgdc );if saveBaseline {_fcc .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_dadc ,_fgdc );_fccc :=CopyFile (_dadc ,_fgdc );
if _fccc !=nil {_fcc .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fgdc ,_fccc );};if _bca {_dec :=_aa .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_bedf ,_beb );
_gbe :=_cdc .Join (baselineRenderPath ,_aa .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_fgcd ,_beb ));_fcc .Logf ("\u0043\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u004d\u0053\u0020\u0057\u006f\u0072\u0064 \u0072e\u0073\u0075\u006c\u0074\u0073\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_dec ,_gbe );
_bce :=CopyFile (_dec ,_gbe );if _bce !=nil {_fcc .Logf ("\u0045\u0052\u0052\u004f\u0052\u0020\u0063\u006f\u0070\u0079\u0069\u006eg\u0020\u0074\u006f \u0025\u0073\u003a\u0020\u0025\u0076\u002c\u0020\u0068\u0061\u0076i\u006e\u0067\u0020d\u0069\u0066\u0066\u0065r\u0065\u006e\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u002c\u0020\u0072\u0065\u0070\u006c\u0061\u0063\u0069\u006eg\u0020\u0069\u0074\u0020\u0077\u0069\u0074\u0068\u0020\u0062\u006ca\u006e\u006b\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064",_gbe ,_bce );
if _aac :=_aafa (_fgdc ,_gbe );_aac !=nil {_fcc .Fatalf ("\u0045\u0052\u0052\u004f\u0052\u0020c\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0065\u006d\u0070\u0074\u0079 \u0069\u006d\u0061\u0067\u0065\u0020\u0025s\u003a\u0020\u0025\u0076",_gbe ,_aac );
};};_fcc .Logf ("\u0043\u006fm\u0062\u0069\u006e\u0069\u006eg\u0020\u0055\u006e\u0069\u004ff\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_fgdc ,_gbe );
_egdg ,_bce :=CombinePNGFiles (_fgdc ,_gbe );if _ca .IsNotExist (_bce ){_fcc .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_egdg {_fcc .Fatal ("\u0055n\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0063\u006f\u006db\u0069\u006e\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0073");
};_fcc .Logf ("\u0043\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0064\u0069\u0066f \u0055n\u0069\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075l\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065 \u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_fgdc ,_gbe );
_egdg ,_cgd ,_efe ,_ece ,_bce :=CreatePNGDiff (_fgdc ,_gbe );if _bce !=nil &&_cd .Is (_bce ,ErrImageSizeNotMatch ){_fcc .Fatalf ("\u0045\u0072\u0072\u006fr\u0020\u006f\u006e\u0020\u0063\u0072\u0065\u0061\u0074\u0065 \u0050N\u0047\u0020\u0044\u0069\u0066\u0066\u003a \u0025\u0076",_bce );
};if _egdg {_fcc .Logf ("\u0049\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073\u000a",_cgd );_fcc .Logf ("D\u0069\u0066\u0066\u0020Pe\u0072c\u0065\u006e\u0074\u003a\u0020%\u0032\u002e\u0066\u0025\u0025\u000a",_efe );_fcc .Logf ("\u0044i\u0066f\u0020\u0054\u006f\u0074\u0061\u006c\u003a\u0020\u0025\u0066\u000a",_ece );
_agab :=_cdc .Base (_cgd );_bge ,_adda :=currentHashMap .Read (_agab );if _adda &&(_bge .DiffPercent < _efe ||_bge .DiffTotal < _ece ){_fcc .Logf ("\u004e\u0065\u0077\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0068\u0061\u0076\u0069\u006e\u0067 h\u0069g\u0068\u0065\u0072\u0020\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u003a\u0020\u0025\u0066\u0020\u0061\u006e\u0064 \u0074\u006f\u0074\u0061\u006c\u0020\u0025\u0066\u000a",_efe ,_ece );
};_bfeb ,_dbb :=HashFile (_cgd );_ff .NoError (_fcc ,_dbb );_cdg :=_feg (_fcc ,_cgd );if !_adda ||_bge .Value !=_bfeb ||_bge .ResultSize !=_cdg ||_bge .DiffPercent !=_efe ||_bge .DiffTotal !=_ece {_fccf :=ReferenceEntry {Timestamp :_be .Now ().UTC ().Unix (),Value :_bfeb ,ResultSize :_cdg ,DiffPercent :_efe ,DiffTotal :_ece };
currentHashMap .Write (_agab ,_fccf );if _dbb =refFile .Update (currentHashMap );_dbb !=nil {_fcc .Logf ("\u0055\u0070\u0064\u0061\u0074\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0020f\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dbb );
};};};};continue ;};_fcc .Run (_aa .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_beb ),func (_def *_cf .T ){_def .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_dadc ,_fgdc );_bbe ,_fcb :=ComparePNGFiles (_dadc ,_fgdc );
if _ca .IsNotExist (_fcb ){_def .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_bbe {_def .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");
};});};});};func CompareImages (img1 ,img2 _a .Image )(bool ,error ){_cab :=img1 .Bounds ();_dgg :=0;for _ccb :=0;_ccb < _cab .Size ().X ;_ccb ++{for _fce :=0;_fce < _cab .Size ().Y ;_fce ++{_fee ,_feda ,_bfeg ,_ :=img1 .At (_ccb ,_fce ).RGBA ();_bac ,_dfa ,_dad ,_ :=img2 .At (_ccb ,_fce ).RGBA ();
if _fee !=_bac ||_feda !=_dfa ||_bfeg !=_dad {_dgg ++;};};};_bgfa :=float64 (_dgg )/float64 (_cab .Dx ()*_cab .Dy ());if _bgfa > 0.0001{_aa .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_bgfa ,_dgg );
return false ,nil ;};return true ,nil ;};func (_fc *ReferenceMap )Write (key string ,entry ReferenceEntry ){_fc .Lock ();defer _fc .Unlock ();if _fc ._egg ==nil {_fc ._egg =map[string ]ReferenceEntry {};};_fc ._egg [key ]=entry ;};func CompareGoldenXML (t *_cf .T ,expectedFn string ,got []byte ){_beg :=_cdc .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );
if *_ffa {if _de :=_ca .WriteFile (_beg ,got ,0644);_de !=nil {t .Fatal (_de );};};_cdb ,_da :=_ca .ReadFile (_beg );if _da !=nil {t .Fatalf ("\u0075\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0069\u006e\u0070\u0075t\u003a\u0020\u0025\u0073",_da );
};_dae (t ,_cdb ,got );};func _aad (_gdd *_a .RGBA ,_fecb string ,_dgbg string ,_faf ,_ffad int )error {_egd ,_feea :=_gd .ReadFile (_fecb );if _feea !=nil {return _feea ;};_adg ,_feea :=_bed .Parse (_egd );if _feea !=nil {return _feea ;};_baba ,_feea :=_bed .NewFace (_adg ,&_bed .FaceOptions {Size :18,DPI :72,Hinting :_ga .HintingNone });
if _feea !=nil {return _feea ;};_dcce :=&_ga .Drawer {Dst :_gdd ,Src :_a .NewUniform (_f .RGBA {200,100,0,255}),Face :_baba ,Dot :_eb .P (_faf ,_ffad )};_dcce .DrawString (_dgbg );return nil ;};func RunRenderTest (t *_cf .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ){RunRenderOfficeTest (t ,pdfPath ,outputDir ,baselineRenderPath ,saveBaseline ,currentHashMap ,refFile ,"\u002em\u0073\u0077\u006f\u0072\u0064");
};func _fd (_ad ,_agd *_b .Reader ,_afa bool )func (_ef *_cf .T ){return func (_ccf *_cf .T ){_adf :=make ([]*_b .File ,len (_ad .File ));copy (_adf ,_ad .File );_eg :=make ([]*_b .File ,len (_agd .File ));copy (_eg ,_agd .File );if len (_adf )!=len (_eg ){_ccf .Errorf ("\u0065x\u0070\u0065\u0063\u0074e\u0064\u0020\u0025\u0064\u0020f\u0069l\u0065s\u002c\u0020\u0067\u006f\u0074\u0020\u0025d",len (_ad .File ),len (_agd .File ));
};for _dg ,_ded :=range _adf {for _gg ,_cbb :=range _eg {if _cbb ==nil {continue ;};if _ded .Name ==_cbb .Name {if _afa {_ccf .Run (_ded .Name ,_agc (_ded ,_cbb ));};_adf [_dg ]=nil ;_eg [_gg ]=nil ;};};};for _ ,_gae :=range _adf {if _gae !=nil {_ccf .Errorf ("\u0064\u0069\u0064\u006e\u0027\u0074\u0020\u0066\u0069\u006ed\u0020\u0065\u0078\u0070\u0065\u0063\u0074e\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0027\u0025\u0073\u0027",_gae .Name );
};};for _ ,_ebf :=range _eg {if _ebf !=nil {_ccf .Errorf ("\u0066\u006f\u0075\u006e\u0064\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020'\u0025\u0073\u0027",_ebf .Name );};};};};func _dae (_egb *_cf .T ,_baa ,_fgb []byte ){_bg :=_fdb ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064");
_ca .WriteFile (_bg ,_baa ,0644);_ge :=_fdb ("\u0067\u006f\u0074");_ca .WriteFile (_ge ,_fgb ,0644);defer func (){_ca .Remove (_bg );_ca .Remove (_ge )}();_aed (_bg );_aed (_ge );_aaa :=_cb .Command ("\u0064\u0069\u0066\u0066","\u002d\u0075",_bg ,_ge );
_fga ,_gba :=_aaa .StdoutPipe ();if _gba !=nil {_egb .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0072u\u006e\u006e\u0069\u006e\u0067\u0020\u0078\u006d\u006ci\u006e\u0064\u0065n\u0074:\u0020\u0025\u0073",_gba );};defer _fga .Close ();_bee ,_gba :=_aaa .StderrPipe ();
if _gba !=nil {_egb .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0072u\u006e\u006e\u0069\u006e\u0067\u0020\u0078\u006d\u006ci\u006e\u0064\u0065n\u0074:\u0020\u0025\u0073",_gba );};defer _bee .Close ();if _feb :=_aaa .Start ();_feb !=nil {_egb .Fatalf ("\u0065\u0072\u0072\u006f\u0072\u0020\u0073\u0074\u0072\u0069\u006eg\u0020\u0078\u006d\u006c\u0069\u006e\u0064\u0065\u006e\u0074:\u0020\u0025\u0073",_feb );
};_cgac :=_cgg .NewScanner (_fga );for _cgac .Scan (){_cg .Println (_cgac .Text ());};if _ffb :=_aaa .Wait ();_ffb !=nil {_ebg ,_ :=_bec .ReadAll (_bee );_egb .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0077a\u0069\u0074\u0069\u006e\u0067\u0020o\u006e\u0020\u0078\u006d\u006c\u0069\u006ed\u0065\u006e\u0074\u003a\u0020\u0025\u0073\u0020\u005b\u0025s\u005d",string (_ebg ),_ffb );
};};func ReadPNG (file string )(_a .Image ,error ){_becb ,_eag :=_ca .Open (file );if _eag !=nil {return nil ,_eag ;};defer _becb .Close ();return _fe .Decode (_becb );};func (_gfc *ReferenceMap )Copy ()*ReferenceMap {_dgb :=ReferenceMap {_egg :make (map[string ]ReferenceEntry ,len (_gfc ._egg ))};
for _bgf ,_dacc :=range _gfc ._egg {_dgb ._egg [_bgf ]=_dacc ;};return &_dgb ;};func (_fedg *ReferenceMap )UnmarshalJSON (data []byte )error {return _gb .Unmarshal (data ,&_fedg ._egg )};type ValidationResult struct{File string `json:"file"`;Result bool `json:"result"`;
Note string `json:"note"`;};func _begc (_eccf ,_bab _f .Color )bool {_fbe ,_fgaa ,_dge ,_gaeaf :=_eccf .RGBA ();_age ,_agba ,_ggf ,_dcf :=_bab .RGBA ();return _fbe ==_age &&_fgaa ==_agba &&_dge ==_ggf &&_gaeaf ==_dcf ;};func CompareZip (t *_cf .T ,expectedFn string ,got []byte ,cmpFileContents bool ){_fg :=_cdc .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );
_dc ,_ec :=_b .NewReader (_cgc .NewReader (got ),int64 (len (got )));if _ec !=nil {t .Fatalf ("\u0075\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0074\u0065\u0073\u0074\u0020\u0069\u006e\u0070\u0075\u0074: \u0025\u0073",_ec );
};_agg ,_ec :=_ca .Open (_fg );if _ec !=nil {t .Fatalf ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020r\u0065\u0061\u0064\u0020\u0067\u006f\u006cd\u0065\u006e\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ec );};defer _agg .Close ();
_bf ,_ec :=_ca .Stat (_fg );if _ec !=nil {t .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ec );};_cga ,_ec :=_b .NewReader (_agg ,_bf .Size ());if _ec !=nil {t .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ec );
};t .Run (expectedFn ,_fd (_cga ,_dc ,cmpFileContents ));};type ReferenceMap struct{_e .Mutex ;_egg map[string ]ReferenceEntry ;};func HashFile (file string )(string ,error ){_eaag ,_ab :=_ca .Open (file );if _ab !=nil {return "",_ab ;};defer _eaag .Close ();
_cde :=_ae .New ();if _ ,_ab =_bec .Copy (_cde ,_eaag );_ab !=nil {return "",_ab ;};return _bc .EncodeToString (_cde .Sum (nil )),nil ;};func (_dcb *ReferenceMap )Len ()int {return len (_dcb ._egg )};func CompareGoldenZip (t *_cf .T ,expectedFn string ,got []byte ){_ac :=_cdc .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );
if *_ffa {if _af :=_ca .WriteFile (_ac ,got ,0644);_af !=nil {t .Fatal (_af );};};CompareZip (t ,expectedFn ,got ,true );};func (_bcf *ReferenceMap )Keys ()(_dcc []string ){_dcc =make ([]string ,len (_bcf ._egg ));var _eaa int ;for _efd :=range _bcf ._egg {_dcc [_eaa ]=_efd ;
_eaa ++;};return _dcc ;};func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_ddb ,_bcb :=HashFile (file1 );if _bcb !=nil {return false ,_bcb ;};_ceg ,_bcb :=HashFile (file2 );if _bcb !=nil {return false ,_bcb ;};if _ddb ==_ceg {return true ,nil ;
};_fgc ,_bcb :=ReadPNG (file1 );if _bcb !=nil {return false ,_bcb ;};_gbgf ,_bcb :=ReadPNG (file2 );if _bcb !=nil {return false ,_bcb ;};if _fgc .Bounds ()!=_gbgf .Bounds (){return false ,nil ;};return CompareImages (_fgc ,_gbgf );};func (_aggf *ReferenceFile )updateMap (_cbe *ReferenceMap )int {var _aaf int ;
if _aggf .Map ._egg ==nil {_aggf .Map ._egg =map[string ]ReferenceEntry {};};for _bfe ,_fgd :=range _cbe ._egg {_ea ,_bd :=_aggf .Map ._egg [_bfe ];if !_bd {_aggf .Map ._egg [_bfe ]=_fgd ;_aaf ++;continue ;};if string (_ea .Value )!=string (_fgd .Value ){_aggf .Map ._egg [_bfe ]=_fgd ;
_aaf ++;};};for _afc :=range _aggf .Map ._egg {if _ ,_dac :=_cbe ._egg [_afc ];!_dac {delete (_aggf .Map ._egg ,_afc );_aaf ++;};};return _aaf ;};func _aed (_fgg string )error {_fa :=_cgf .XSDAny {};_afb ,_agdg :=_ca .Open (_fgg );if _agdg !=nil {return _agdg ;
};_ce :=_df .NewDecoder (_afb );if _agdg =_ce .Decode (&_fa );_agdg !=nil {return _agdg ;};_afb .Close ();_afb ,_agdg =_ca .Create (_fgg );if _agdg !=nil {return _agdg ;};defer _afb .Close ();_fgf :=_df .NewEncoder (_afb );_fgf .Indent ("","\u0020\u0020");
return _fgf .Encode (&_fa );};func _caaf (_bgg ,_fceg _a .Rectangle )bool {return _bgg .Min .X ==_fceg .Min .X &&_bgg .Min .Y ==_fceg .Min .Y &&_bgg .Max .X ==_fceg .Max .X &&_bgg .Max .Y ==_fceg .Max .Y ;};var (ErrRenderNotSupported =_cd .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");
ErrImageSizeNotMatch =_cd .New ("\u0069\u006d\u0061ge\u0020\u0073\u0069\u007a\u0065\u0073\u0020\u0064\u006f\u006e\u0027\u0074\u0020\u006d\u0061\u0074\u0063\u0068"););func CompareGoldenZipFilesOnly (t *_cf .T ,expectedFn string ,got []byte ){_gf :=_cdc .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );
if *_ffa {if _gc :=_ca .WriteFile (_gf ,got ,0644);_gc !=nil {t .Fatal (_gc );};};CompareZip (t ,expectedFn ,got ,false );};func ValidateDocument (file string )(bool ,error ){var (_eca string =_ca .Getenv ("\u0050\u0052\u004fJ\u0045\u0043\u0054\u005f\u0052\u004f\u004f\u0054");
_cdeg string =_ca .Getenv ("\u0048\u004f\u004d\u0045")+"\u002f\u0064\u006f\u0074\u006e\u0065\u0074\u002f\u0064o\u0074\u006e\u0065\u0074";_ega string =_eca +"\u002f\u002e\u0063\u0069\u002f\u006f\u0070\u0065\u006e\u0078\u006dl\u002d\u0076\u0061\u006c\u0069\u0064\u0061\u0074o\u0072/\u0062\u0069\u006e\u002f\u0052\u0065\u006c\u0065\u0061\u0073\u0065\u002f\u006e\u0065\u0074\u0038\u002e\u0030/\u0050\u0072\u006f\u0067\u0072\u0061\u006d\u002e\u0064\u006c\u006c";
_ffe string =_eca +"\u002f\u0069\u006et\u0065\u0072\u006e\u0061\u006c\u002f\u0074\u0065\u0073\u0074\u0075\u0074\u0069\u006c\u0073\u002f\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u005f\u0072\u0065s\u0075\u006c\u0074\u002e\u006a\u0073\u006f\u006e";
_bgcf _cgc .Buffer ;_adcc string ;_bfed bool =true ;);if _ ,_gab :=_ca .Stat (_cdeg );_gab !=nil {_cc .Log .Debug ("\u0064\u006f\u0074\u006e\u0065\u0074 \u0065\u0078\u0065\u0063\u0075\u0074\u0061\u0062\u006c\u0065\u0020\u006e\u006ft\u0020\u0066\u006f\u0075\u006e\u0064\u0020i\u006e\u0020\u0025\u0073",_cdeg );
return true ,nil ;};if _ ,_eeg :=_ca .Stat (_ega );_eeg !=nil {_cc .Log .Debug ("\u006f\u0070\u0065\u006e\u0078\u006dl\u002d\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u006f\u0072\u0020\u006e\u006ft\u0020\u0066\u006f\u0075\u006e\u0064\u0020i\u006e\u0020\u0025\u0073",_ega );
return true ,nil ;};var (_cae map[string ]map[string ]*ValidationResult ;_aggg *ValidationResult ;);_bfcc ,_abd :=_ca .ReadFile (_ffe );if _abd !=nil {return false ,_abd ;};if _fgdf :=_gb .Unmarshal (_bfcc ,&_cae );_fgdf !=nil {return false ,_fgdf ;};if _cae ==nil {_cae =make (map[string ]map[string ]*ValidationResult );
};_decc :=_cdc .Ext (file );_decc =_decc [1:];if _decc !="\u0064\u006f\u0063\u0078"&&_decc !="\u0078\u006c\u0073\u0078"&&_decc !="\u0070\u0070\u0074\u0078"{return false ,_aa .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u0069\u006c\u0065\u0020\u0065x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_decc );
};_gad :=_cdc .Base (file );if _gbb ,_dadb :=_cae [_decc ];_dadb {if _eaba ,_ada :=_gbb [_gad ];_ada {_aggg =_eaba ;};};_fbd :=_cb .Command (_cdeg ,_ega ,"\u002d\u002d"+_decc ,file );_fbd .Stderr =&_bgcf ;_aafb ,_abd :=_fbd .Output ();if _abd !=nil {_adcc =_bgcf .String ();
};_bgef :=string (_aafb );_bgef =_c .TrimSpace (_bgef [_c .Index (_bgef ,"\u000a")+1:]);if _c .Contains (_bgef ,"\u0045x\u0063\u0065\u0070\u0074\u0069\u006fn")||_c .Contains (_bgef ,"\u0069\u0073\u0020n\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064"){_bfed =false ;
if _c .Contains (_bgef ,"\u006da\u0069\u006e\u003a\u0073\u007a")||_c .Contains (_bgef ,"m\u0061\u0069\u006e\u003a\u0066\u0061\u006d\u0069\u006c\u0079")||_c .Contains (_bgef ,"\u0063h\u0061\u0072\u0074\u003a\u0065\u0078t"){_adcc ="\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0076\u0061\u006ci\u0064\u0061\u0074\u0069\u006f\u006e\u0020i\u0073\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u003a\u0020"+_bgef ;
_bfed =true ;};};if _adcc ==""{_adcc =_bgef ;};if _aggg ==nil {_aggg =&ValidationResult {File :_gad ,Result :_bfed ,Note :_adcc };};_aggg .Result =_bfed ;_aggg .Note =_adcc ;if _cae [_decc ]==nil {_cae [_decc ]=make (map[string ]*ValidationResult );};if _gfd ,_dddd :=_cae [_decc ][_gad ];
_dddd {if _gfd .Result &&!_bfed {return false ,_aa .Errorf ("V\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e \u0072\u0065\u0073\u0075\u006c\u0074\u0020ch\u0061\u006e\u0067\u0065d\u0020\u0066\u006f\u0072\u0020\u0025\u0073\u003a\u0020%v\u0020\u002d>\u0020\u0025\u0076\u0020\u0028\u0025\u0073\u0029",file ,_gfd .Result ,_bfed ,_adcc );
};};_cae [_decc ][_gad ]=_aggg ;_bfcc ,_abd =_gb .MarshalIndent (_cae ,"","\u0020\u0020");if _abd !=nil {return false ,_abd ;};if _cbed :=_ca .WriteFile (_ffe ,_bfcc ,0644);_cbed !=nil {return false ,_cbed ;};return true ,nil ;};func _fdb (_ccfg string )string {_ba ,_ :=_ca .CreateTemp ("",_ccfg );
defer _ba .Close ();return _ba .Name ();};func CopyFile (src ,dst string )error {_dga ,_aca :=_ca .Open (src );if _aca !=nil {return _aca ;};defer _dga .Close ();_gggg ,_aca :=_ca .Create (dst );if _aca !=nil {return _aca ;};defer _gggg .Close ();_ ,_aca =_bec .Copy (_gggg ,_dga );
return _aca ;};type ReferenceEntry struct{Timestamp int64 `json:"timestamp"`;Value string `json:"value"`;ResultSize int64 `json:"resultSize,omitempty"`;DiffPercent float64 `json:"diffPercent,omitempty"`;DiffTotal float64 `json:"diffValue,omitempty"`;Invalid bool `json:"markedInvalid,omitempty"`;
};type ReferenceFile struct{Timestamp _be .Time `json:"timestamp"`;Map *ReferenceMap `json:"map,omitempty"`;_aedg string ;};func _aafa (_cbd ,_bdf string )error {_gef ,_cdcc :=_ca .Open (_cbd );if _cdcc !=nil {return _cdcc ;};defer _gef .Close ();_aedd ,_ ,_cdcc :=_a .DecodeConfig (_gef );
if _cdcc !=nil {panic (_cdcc );};_gcb :=_a .NewRGBA (_a .Rect (0,0,_aedd .Width ,_aedd .Height ));_bba ,_cdcc :=_ca .Create (_bdf );if _cdcc !=nil {return _cdcc ;};defer _bba .Close ();_cdcc =_fe .Encode (_bba ,_gcb );if _cdcc !=nil {return _cdcc ;};return nil ;
};func ReadFile (dirPath ,testName string ,createEmpty bool )(*ReferenceFile ,error ){if dirPath ==""&&createEmpty {return &ReferenceFile {Map :&ReferenceMap {}},nil ;};if dirPath ==""{return nil ,_ca .ErrNotExist ;};_cbec :=_cdc .Join (dirPath ,testName +"\u005fr\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u002e\u006a\u0073\u006f\u006e");
_ddd :=&ReferenceFile {_aedg :_cbec };_ee ,_cac :=_ca .Open (_cbec );if _cd .Is (_cac ,_ca .ErrNotExist )&&createEmpty {_ddd .Timestamp =_be .Now ().UTC ();_ddd .Map =&ReferenceMap {};return _ddd ,nil ;};if _cac !=nil {return nil ,_cac ;};defer _ee .Close ();
if _dda :=_gb .NewDecoder (_ee ).Decode (_ddd );_dda !=nil {if _dda .Error ()=="i\u006c\u006c\u0065\u0067\u0061\u006c \u0062\u0061\u0073\u0065\u0036\u0034 \u0064\u0061\u0074\u0061\u0020\u0061\u0074 \u0069\u006e\u0070\u0075\u0074\u0020\u0062\u0079\u0074\u0065 \u0030"&&createEmpty {return _ddd ,nil ;
};return nil ,_dda ;};return _ddd ,nil ;};func (_cba *ReferenceMap )Read (key string )(ReferenceEntry ,bool ){_cba .Lock ();defer _cba .Unlock ();if _cba ._egg ==nil {return ReferenceEntry {},false ;};_gce ,_dcd :=_cba ._egg [key ];return _gce ,_dcd ;};
func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;};if _ ,_eec :=_cb .LookPath ("\u0067\u0073");_eec !=nil {return ErrRenderNotSupported ;};return _cb .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_aa .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();
};func _agc (_fec ,_ggg *_b .File )func (_gbg *_cf .T ){return func (_fdd *_cf .T ){_bfc ,_cbbg :=_fec .Open ();if _cbbg !=nil {_fdd .Errorf ("\u0065\u0072r\u006f\u0072\u0020o\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0025\u0073",_fec .Name );};defer _bfc .Close ();
_bcd ,_cbbg :=_ggg .Open ();if _cbbg !=nil {_fdd .Errorf ("\u0065\u0072r\u006f\u0072\u0020o\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0025\u0073",_ggg .Name );};defer _bcd .Close ();_bea ,_ :=_bec .ReadAll (_bfc );_aab ,_ :=_bec .ReadAll (_bcd );if !_cgc .Equal (_bea ,_aab ){_dae (_fdd ,_bea ,_aab );
_aa .Println (string (_bea ));_aa .Println (string (_aab ));_fdd .Errorf ("\u006d\u0069\u0073\u006da\u0074\u0063\u0068\u0065\u0064\u0020\u0063\u006f\u006e\u0074e\u006et\u0073\u0020\u0025\u0064\u0020\u0076\u0073 \u0025\u0064",len (_bea ),len (_aab ));};
};};func (_gbf *ReferenceMap )MarshalJSON ()([]byte ,error ){return _gb .Marshal (_gbf ._egg )};func _feg (_efcd *_cf .T ,_edd string )int64 {_babg ,_bde :=_ca .Stat (_edd );_ff .NoError (_efcd ,_bde );return _babg .Size ();};func (_gbc *ReferenceFile )Update (currentMap *ReferenceMap )error {if _gbc ._aedg ==""{return nil ;
};_ffd :=_gbc .updateMap (currentMap );if _ffd ==0{return nil ;};_faa ,_ecg :=_ca .OpenFile (_gbc ._aedg ,_ca .O_CREATE |_ca .O_TRUNC |_ca .O_WRONLY ,0664);if _ecg !=nil {return _ecg ;};defer _faa .Close ();_gbc .Timestamp =_be .Now ().UTC ();_fbf :=_gb .NewEncoder (_faa );
_fbf .SetIndent ("","\u0009");return _fbf .Encode (_gbc );};var _ffa =_ag .Bool ("t\u0065\u0073\u0074\u002e\u0075\u0070\u0064\u0061\u0074\u0065",false ,"\u0075p\u0064a\u0074\u0065\u0020\u0067\u006fl\u0064\u0065n\u0020\u0066\u0069\u006c\u0065");func CombinePNGFiles (file1 ,file2 string )(bool ,error ){_abg ,_beag :=ReadPNG (file1 );
if _beag !=nil {return false ,_beag ;};_fac ,_beag :=ReadPNG (file2 );if _beag !=nil {return false ,_beag ;};_ecc :=_a .Point {_abg .Bounds ().Dx (),0};_bb :=_a .Rectangle {_ecc ,_ecc .Add (_fac .Bounds ().Size ())};_add :=_a .Rectangle {_a .Point {0,0},_bb .Max };
_fbb :=_a .NewRGBA (_add );_dd .Draw (_fbb ,_abg .Bounds (),_abg ,_a .Point {0,0},_dd .Src );_dd .Draw (_fbb ,_bb ,_fac ,_a .Point {0,0},_dd .Src );_eab :=_cdc .Dir (file1 );_fede :=_c .TrimSuffix (_cdc .Base (file1 ),_cdc .Ext (file1 ));_bgc ,_beag :=_ca .Create (_eab +"\u002f"+_fede +"\u002d\u0063\u006f\u006d\u0062\u0069\u006e\u0065\u0064\u002e\u0070\u006e\u0067");
if _beag !=nil {return false ,_beag ;};defer _bgc .Close ();if _bff :=_fe .Encode (_bgc ,_fbb );_bff !=nil {return false ,_bff ;};return true ,nil ;};