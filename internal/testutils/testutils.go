//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_f "archive/zip";_cgc "bufio";_ace "bytes";_ac "crypto/md5";_dc "encoding/hex";_fd "encoding/json";_eb "encoding/xml";_e "errors";_bc "flag";_faa "fmt";_gb "github.com/stretchr/testify/require";_dgfg "github.com/unidoc/unioffice/v2";
_ef "github.com/unidoc/unipdf/v4/common";_g "golang.org/x/image/font";_ba "golang.org/x/image/font/opentype";_ag "golang.org/x/image/math/fixed";_bd "image";_dd "image/color";_cb "image/draw";_dg "image/png";_fa "io";_c "io/ioutil";_bdf "log";_d "math";
_cg "os";_df "os/exec";_ff "path/filepath";_a "strings";_cf "sync";_dgf "testing";_cbd "time";);func (_be *ReferenceFile )updateMap (_eeg *ReferenceMap )int {var _bec int ;if _be .Map ._eab ==nil {_be .Map ._eab =map[string ]ReferenceEntry {};};for _gda ,_ddg :=range _eeg ._eab {_ed ,_ecg :=_be .Map ._eab [_gda ];
if !_ecg {_be .Map ._eab [_gda ]=_ddg ;_bec ++;continue ;};if string (_ed .Value )!=string (_ddg .Value ){_be .Map ._eab [_gda ]=_ddg ;_bec ++;};};for _aeb :=range _be .Map ._eab {if _ ,_ggf :=_eeg ._eab [_aeb ];!_ggf {delete (_be .Map ._eab ,_aeb );_bec ++;
};};return _bec ;};func RunRenderTest (t *_dgf .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ){RunRenderOfficeTest (t ,pdfPath ,outputDir ,baselineRenderPath ,saveBaseline ,currentHashMap ,refFile ,"\u002em\u0073\u0077\u006f\u0072\u0064");
};func CompareGoldenXML (t *_dgf .T ,expectedFn string ,got []byte ){_da :=_ff .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );if *_cgb {if _cd :=_cg .WriteFile (_da ,got ,0644);_cd !=nil {t .Fatal (_cd );};};_acb ,_cc :=_cg .ReadFile (_da );
if _cc !=nil {t .Fatalf ("\u0075\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0069\u006e\u0070\u0075t\u003a\u0020\u0025\u0073",_cc );};_aac (t ,_acb ,got );};func (_aggb *ReferenceFile )Update (currentMap *ReferenceMap )error {if _aggb ._ee ==""{return nil ;
};_gbg :=_aggb .updateMap (currentMap );if _gbg ==0{return nil ;};_acf ,_fe :=_cg .OpenFile (_aggb ._ee ,_cg .O_CREATE |_cg .O_TRUNC |_cg .O_WRONLY ,0664);if _fe !=nil {return _fe ;};defer _acf .Close ();_aggb .Timestamp =_cbd .Now ().UTC ();_gac :=_fd .NewEncoder (_acf );
_gac .SetIndent ("","\u0009");return _gac .Encode (_aggb );};func ReadFile (dirPath ,testName string ,createEmpty bool )(*ReferenceFile ,error ){if dirPath ==""&&createEmpty {return &ReferenceFile {Map :&ReferenceMap {}},nil ;};if dirPath ==""{return nil ,_cg .ErrNotExist ;
};_faed :=_ff .Join (dirPath ,testName +"\u005fr\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u002e\u006a\u0073\u006f\u006e");_dea :=&ReferenceFile {_ee :_faed };_egg ,_fee :=_cg .Open (_faed );if _e .Is (_fee ,_cg .ErrNotExist )&&createEmpty {_dea .Timestamp =_cbd .Now ().UTC ();
_dea .Map =&ReferenceMap {};return _dea ,nil ;};if _fee !=nil {return nil ,_fee ;};defer _egg .Close ();if _bfe :=_fd .NewDecoder (_egg ).Decode (_dea );_bfe !=nil {if _bfe .Error ()=="i\u006c\u006c\u0065\u0067\u0061\u006c \u0062\u0061\u0073\u0065\u0036\u0034 \u0064\u0061\u0074\u0061\u0020\u0061\u0074 \u0069\u006e\u0070\u0075\u0074\u0020\u0062\u0079\u0074\u0065 \u0030"&&createEmpty {return _dea ,nil ;
};return nil ,_bfe ;};return _dea ,nil ;};func (_edc *ReferenceMap )Copy ()*ReferenceMap {_cge :=ReferenceMap {_eab :make (map[string ]ReferenceEntry ,len (_edc ._eab ))};for _cdfa ,_dcf :=range _edc ._eab {_cge ._eab [_cdfa ]=_dcf ;};return &_cge ;};func _cdfd (_ddfg ,_dcd _bd .Rectangle )bool {return _ddfg .Min .X ==_dcd .Min .X &&_ddfg .Min .Y ==_dcd .Min .Y &&_ddfg .Max .X ==_dcd .Max .X &&_ddfg .Max .Y ==_dcd .Max .Y ;
};var (ErrRenderNotSupported =_e .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");
ErrImageSizeNotMatch =_e .New ("\u0069\u006d\u0061ge\u0020\u0073\u0069\u007a\u0065\u0073\u0020\u0064\u006f\u006e\u0027\u0074\u0020\u006d\u0061\u0074\u0063\u0068"););func CompareImages (img1 ,img2 _bd .Image )(bool ,error ){_ge :=img1 .Bounds ();_aee :=0;
for _gaba :=0;_gaba < _ge .Size ().X ;_gaba ++{for _gfa :=0;_gfa < _ge .Size ().Y ;_gfa ++{_fgdf ,_cbdc ,_aae ,_ :=img1 .At (_gaba ,_gfa ).RGBA ();_cbb ,_fab ,_feed ,_ :=img2 .At (_gaba ,_gfa ).RGBA ();if _fgdf !=_cbb ||_cbdc !=_fab ||_aae !=_feed {_aee ++;
};};};_efcc :=float64 (_aee )/float64 (_ge .Dx ()*_ge .Dy ());if _efcc > 0.0001{_faa .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_efcc ,_aee );return false ,nil ;
};return true ,nil ;};func _ae (_dcae string )error {_efc :=_dgfg .XSDAny {};_cac ,_egd :=_cg .Open (_dcae );if _egd !=nil {return _egd ;};_gg :=_eb .NewDecoder (_cac );if _egd =_gg .Decode (&_efc );_egd !=nil {return _egd ;};_cac .Close ();_cac ,_egd =_cg .Create (_dcae );
if _egd !=nil {return _egd ;};defer _cac .Close ();_gbc :=_eb .NewEncoder (_cac );_gbc .Indent ("","\u0020\u0020");return _gbc .Encode (&_efc );};func ReadPNG (file string )(_bd .Image ,error ){_ggbc ,_eegg :=_cg .Open (file );if _eegg !=nil {return nil ,_eegg ;
};defer _ggbc .Close ();return _dg .Decode (_ggbc );};type ReferenceFile struct{Timestamp _cbd .Time `json:"timestamp"`;Map *ReferenceMap `json:"map,omitempty"`;_ee string ;};func (_gafc *ReferenceMap )Len ()int {return len (_gafc ._eab )};func _efef (_bbb ,_afaf string )error {_agc ,_aab :=_cg .Open (_bbb );
if _aab !=nil {return _aab ;};defer _agc .Close ();_dgg ,_ ,_aab :=_bd .DecodeConfig (_agc );if _aab !=nil {panic (_aab );};_fag :=_bd .NewRGBA (_bd .Rect (0,0,_dgg .Width ,_dgg .Height ));_gfb ,_aab :=_cg .Create (_afaf );if _aab !=nil {return _aab ;};
defer _gfb .Close ();_aab =_dg .Encode (_gfb ,_fag );if _aab !=nil {return _aab ;};return nil ;};func HashFile (file string )(string ,error ){_aec ,_gafe :=_cg .Open (file );if _gafe !=nil {return "",_gafe ;};defer _aec .Close ();_afe :=_ac .New ();if _ ,_gafe =_fa .Copy (_afe ,_aec );
_gafe !=nil {return "",_gafe ;};return _dc .EncodeToString (_afe .Sum (nil )),nil ;};func CopyFile (src ,dst string )error {_eafg ,_cfc :=_cg .Open (src );if _cfc !=nil {return _cfc ;};defer _eafg .Close ();_facc ,_cfc :=_cg .Create (dst );if _cfc !=nil {return _cfc ;
};defer _facc .Close ();_ ,_cfc =_fa .Copy (_facc ,_eafg );return _cfc ;};func CombinePNGFiles (file1 ,file2 string )(bool ,error ){_efe ,_eag :=ReadPNG (file1 );if _eag !=nil {return false ,_eag ;};_gfag ,_eag :=ReadPNG (file2 );if _eag !=nil {return false ,_eag ;
};_acbf :=_bd .Point {_efe .Bounds ().Dx (),0};_efda :=_bd .Rectangle {_acbf ,_acbf .Add (_gfag .Bounds ().Size ())};_bee :=_bd .Rectangle {_bd .Point {0,0},_efda .Max };_caad :=_bd .NewRGBA (_bee );_cb .Draw (_caad ,_efe .Bounds (),_efe ,_bd .Point {0,0},_cb .Src );
_cb .Draw (_caad ,_efda ,_gfag ,_bd .Point {0,0},_cb .Src );_cfaf :=_ff .Dir (file1 );_gff :=_a .TrimSuffix (_ff .Base (file1 ),_ff .Ext (file1 ));_eda ,_eag :=_cg .Create (_cfaf +"\u002f"+_gff +"\u002d\u0063\u006f\u006d\u0062\u0069\u006e\u0065\u0064\u002e\u0070\u006e\u0067");
if _eag !=nil {return false ,_eag ;};defer _eda .Close ();if _gbd :=_dg .Encode (_eda ,_caad );_gbd !=nil {return false ,_gbd ;};return true ,nil ;};func (_facf *ReferenceMap )Keys ()(_ggb []string ){_ggb =make ([]string ,len (_facf ._eab ));var _gf int ;
for _fc :=range _facf ._eab {_ggb [_gf ]=_fc ;_gf ++;};return _ggb ;};func _aac (_def *_dgf .T ,_bdfc ,_ad []byte ){_age :=_ddf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064");_cg .WriteFile (_age ,_bdfc ,0644);_ffa :=_ddf ("\u0067\u006f\u0074");_cg .WriteFile (_ffa ,_ad ,0644);
defer func (){_cg .Remove (_age );_cg .Remove (_ffa )}();_ae (_age );_ae (_ffa );_baf :=_df .Command ("\u0064\u0069\u0066\u0066","\u002d\u0075",_age ,_ffa );_bcg ,_ebc :=_baf .StdoutPipe ();if _ebc !=nil {_def .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0072u\u006e\u006e\u0069\u006e\u0067\u0020\u0078\u006d\u006ci\u006e\u0064\u0065n\u0074:\u0020\u0025\u0073",_ebc );
};defer _bcg .Close ();_fg ,_ebc :=_baf .StderrPipe ();if _ebc !=nil {_def .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0072u\u006e\u006e\u0069\u006e\u0067\u0020\u0078\u006d\u006ci\u006e\u0064\u0065n\u0074:\u0020\u0025\u0073",_ebc );};defer _fg .Close ();
if _fffe :=_baf .Start ();_fffe !=nil {_def .Fatalf ("\u0065\u0072\u0072\u006f\u0072\u0020\u0073\u0074\u0072\u0069\u006eg\u0020\u0078\u006d\u006c\u0069\u006e\u0064\u0065\u006e\u0074:\u0020\u0025\u0073",_fffe );};_gab :=_cgc .NewScanner (_bcg );for _gab .Scan (){_bdf .Println (_gab .Text ());
};if _caf :=_baf .Wait ();_caf !=nil {_aeg ,_ :=_fa .ReadAll (_fg );_def .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0077a\u0069\u0074\u0069\u006e\u0067\u0020o\u006e\u0020\u0078\u006d\u006c\u0069\u006ed\u0065\u006e\u0074\u003a\u0020\u0025\u0073\u0020\u005b\u0025s\u005d",string (_aeg ),_caf );
};};func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_gga ,_bag :=HashFile (file1 );if _bag !=nil {return false ,_bag ;};_eba ,_bag :=HashFile (file2 );if _bag !=nil {return false ,_bag ;};if _gga ==_eba {return true ,nil ;};_dae ,_bag :=ReadPNG (file1 );
if _bag !=nil {return false ,_bag ;};_ggg ,_bag :=ReadPNG (file2 );if _bag !=nil {return false ,_bag ;};if _dae .Bounds ()!=_ggg .Bounds (){return false ,nil ;};return CompareImages (_dae ,_ggg );};func ValidateDocument (file string )(bool ,error ){var (_cedd string =_cg .Getenv ("\u0050\u0052\u004fJ\u0045\u0043\u0054\u005f\u0052\u004f\u004f\u0054");
_ecd string =_cg .Getenv ("\u0048\u004f\u004d\u0045")+"\u002f\u0064\u006f\u0074\u006e\u0065\u0074\u002f\u0064o\u0074\u006e\u0065\u0074";_fde string =_cedd +"\u002f\u002e\u0063\u0069\u002f\u006f\u0070\u0065\u006e\u0078\u006dl\u002d\u0076\u0061\u006c\u0069\u0064\u0061\u0074o\u0072/\u0062\u0069\u006e\u002f\u0052\u0065\u006c\u0065\u0061\u0073\u0065\u002f\u006e\u0065\u0074\u0038\u002e\u0030/\u0050\u0072\u006f\u0067\u0072\u0061\u006d\u002e\u0064\u006c\u006c";
_efag string =_cedd +"\u002f\u0069\u006et\u0065\u0072\u006e\u0061\u006c\u002f\u0074\u0065\u0073\u0074\u0075\u0074\u0069\u006c\u0073\u002f\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u005f\u0072\u0065s\u0075\u006c\u0074\u002e\u006a\u0073\u006f\u006e";
_ccd _ace .Buffer ;_faee string ;_fcg bool =true ;);if _ ,_fbc :=_cg .Stat (_ecd );_fbc !=nil {_ef .Log .Debug ("\u0064\u006f\u0074\u006e\u0065\u0074 \u0065\u0078\u0065\u0063\u0075\u0074\u0061\u0062\u006c\u0065\u0020\u006e\u006ft\u0020\u0066\u006f\u0075\u006e\u0064\u0020i\u006e\u0020\u0025\u0073",_ecd );
return true ,nil ;};if _ ,_ggbb :=_cg .Stat (_fde );_ggbb !=nil {_ef .Log .Debug ("\u006f\u0070\u0065\u006e\u0078\u006dl\u002d\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u006f\u0072\u0020\u006e\u006ft\u0020\u0066\u006f\u0075\u006e\u0064\u0020i\u006e\u0020\u0025\u0073",_fde );
return true ,nil ;};var (_fdee map[string ]map[string ]*ValidationResult ;_defc *ValidationResult ;);_ead ,_fdff :=_cg .ReadFile (_efag );if _fdff !=nil {return false ,_fdff ;};if _edcg :=_fd .Unmarshal (_ead ,&_fdee );_edcg !=nil {return false ,_edcg ;
};if _fdee ==nil {_fdee =make (map[string ]map[string ]*ValidationResult );};_deed :=_ff .Ext (file );_deed =_deed [1:];if _deed !="\u0064\u006f\u0063\u0078"&&_deed !="\u0078\u006c\u0073\u0078"&&_deed !="\u0070\u0070\u0074\u0078"{return false ,_faa .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u0069\u006c\u0065\u0020\u0065x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_deed );
};_cfe :=_ff .Base (file );if _bed ,_efba :=_fdee [_deed ];_efba {if _aba ,_gfe :=_bed [_cfe ];_gfe {_defc =_aba ;};};_efaf :=_df .Command (_ecd ,_fde ,"\u002d\u002d"+_deed ,file );_efaf .Stderr =&_ccd ;_agf ,_fdff :=_efaf .Output ();if _fdff !=nil {_faee =_ccd .String ();
};_gggc :=string (_agf );_gggc =_a .TrimSpace (_gggc [_a .Index (_gggc ,"\u000a")+1:]);if _a .Contains (_gggc ,"\u0045x\u0063\u0065\u0070\u0074\u0069\u006fn")||_a .Contains (_gggc ,"\u0069\u0073\u0020n\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064"){_fcg =false ;
if _a .Contains (_gggc ,"\u006da\u0069\u006e\u003a\u0073\u007a")||_a .Contains (_gggc ,"m\u0061\u0069\u006e\u003a\u0066\u0061\u006d\u0069\u006c\u0079")||_a .Contains (_gggc ,"\u0063h\u0061\u0072\u0074\u003a\u0065\u0078t"){_faee ="\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0076\u0061\u006ci\u0064\u0061\u0074\u0069\u006f\u006e\u0020i\u0073\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u003a\u0020"+_gggc ;
_fcg =true ;};};if _faee ==""{_faee =_gggc ;};if _defc ==nil {_defc =&ValidationResult {File :_cfe ,Result :_fcg ,Note :_faee };};_defc .Result =_fcg ;_defc .Note =_faee ;if _fdee [_deed ]==nil {_fdee [_deed ]=make (map[string ]*ValidationResult );};if _ebcb ,_bca :=_fdee [_deed ][_cfe ];
_bca {if _ebcb .Result &&!_fcg {return false ,_faa .Errorf ("V\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e \u0072\u0065\u0073\u0075\u006c\u0074\u0020ch\u0061\u006e\u0067\u0065d\u0020\u0066\u006f\u0072\u0020\u0025\u0073\u003a\u0020%v\u0020\u002d>\u0020\u0025\u0076\u0020\u0028\u0025\u0073\u0029",file ,_ebcb .Result ,_fcg ,_faee );
};};_fdee [_deed ][_cfe ]=_defc ;_ead ,_fdff =_fd .MarshalIndent (_fdee ,"","\u0020\u0020");if _fdff !=nil {return false ,_fdff ;};if _feb :=_cg .WriteFile (_efag ,_ead ,0644);_feb !=nil {return false ,_feb ;};return true ,nil ;};func _ddf (_fae string )string {_efd ,_ :=_cg .CreateTemp ("",_fae );
defer _efd .Close ();return _efd .Name ();};func (_dfb *ReferenceMap )Read (key string )(ReferenceEntry ,bool ){_dfb .Lock ();defer _dfb .Unlock ();if _dfb ._eab ==nil {return ReferenceEntry {},false ;};_dfa ,_beg :=_dfb ._eab [key ];return _dfa ,_beg ;
};func _efec (_gce *_bd .RGBA ,_efa string ,_dee string ,_fdaf ,_cecg int )error {_dfba ,_bff :=_c .ReadFile (_efa );if _bff !=nil {return _bff ;};_ccbf ,_bff :=_ba .Parse (_dfba );if _bff !=nil {return _bff ;};_cae ,_bff :=_ba .NewFace (_ccbf ,&_ba .FaceOptions {Size :18,DPI :72,Hinting :_g .HintingNone });
if _bff !=nil {return _bff ;};_ede :=&_g .Drawer {Dst :_gce ,Src :_bd .NewUniform (_dd .RGBA {200,100,0,255}),Face :_cae ,Dot :_ag .P (_fdaf ,_cecg )};_ede .DrawString (_dee );return nil ;};type ValidationResult struct{File string `json:"file"`;Result bool `json:"result"`;
Note string `json:"note"`;};type ReferenceMap struct{_cf .Mutex ;_eab map[string ]ReferenceEntry ;};func (_fgd *ReferenceMap )MarshalJSON ()([]byte ,error ){return _fd .Marshal (_fgd ._eab )};type ReferenceEntry struct{Timestamp int64 `json:"timestamp"`;
Value string `json:"value"`;ResultSize int64 `json:"resultSize,omitempty"`;DiffPercent float64 `json:"diffPercent,omitempty"`;DiffTotal float64 `json:"diffValue,omitempty"`;Invalid bool `json:"markedInvalid,omitempty"`;};func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;
};if _ ,_fcd :=_df .LookPath ("\u0067\u0073");_fcd !=nil {return ErrRenderNotSupported ;};return _df .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_faa .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();
};func (_dfg *ReferenceMap )Write (key string ,entry ReferenceEntry ){_dfg .Lock ();defer _dfg .Unlock ();if _dfg ._eab ==nil {_dfg ._eab =map[string ]ReferenceEntry {};};_dfg ._eab [key ]=entry ;};func (_ebe *ReferenceMap )UnmarshalJSON (data []byte )error {return _fd .Unmarshal (data ,&_ebe ._eab )};
var _cgb =_bc .Bool ("t\u0065\u0073\u0074\u002e\u0075\u0070\u0064\u0061\u0074\u0065",false ,"\u0075p\u0064a\u0074\u0065\u0020\u0067\u006fl\u0064\u0065n\u0020\u0066\u0069\u006c\u0065");func _ffdb (_dcfg *_dgf .T ,_eec string )int64 {_cce ,_dgd :=_cg .Stat (_eec );
_gb .NoError (_dcfg ,_dgd );return _cce .Size ();};func RunRenderOfficeTest (t *_dgf .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ,postfix string ){_ceg :=_a .TrimSuffix (_ff .Base (pdfPath ),_ff .Ext (pdfPath ));
t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_dggd *_dgf .T ){_caef :=_ff .Join (outputDir ,_ceg );_fcab :=_caef +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _aabe :=RenderPDFToPNGs (pdfPath ,0,_fcab );_aabe !=nil {_dggd .Skip (_aabe );};_gdg :=_ceg +postfix ;
_dec :=_ff .Join (outputDir ,_gdg );_adb :=_dec +"\u002d%\u0064\u002e\u0070\u006e\u0067";_bad :=false ;if saveBaseline {_bga :=_ff .Dir (pdfPath );_cdc :=_ff .Join (_bga ,_gdg +"\u002e\u0070\u0064\u0066");if _ ,_ega :=_cg .Stat (_cdc );_ega ==nil {_dggd .Logf ("\u0052e\u006e\u0064\u0065\u0072\u0020\u004d\u0053\u0020\u004f\u0066\u0066i\u0063\u0065\u0020\u0050\u0044\u0046\u003a\u0020\u0025\u0076",_cdc );
if _edf :=RenderPDFToPNGs (_cdc ,0,_adb );_edf !=nil {_dggd .Skip (_edf );};_bad =true ;};};for _dacd :=1;true ;_dacd ++{_cfag :=_faa .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_caef ,_dacd );_cab :=_ff .Join (baselineRenderPath ,_faa .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_ceg ,_dacd ));
if _ ,_ced :=_cg .Stat (_cfag );_ced !=nil {break ;};_dggd .Logf ("\u0025\u0073",_cab );if saveBaseline {_dggd .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_cfag ,_cab );_eca :=CopyFile (_cfag ,_cab );
if _eca !=nil {_dggd .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cab ,_eca );};if _bad {_ccf :=_faa .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_dec ,_dacd );
_cegb :=_ff .Join (baselineRenderPath ,_faa .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_gdg ,_dacd ));_dggd .Logf ("\u0043\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u004d\u0053\u0020\u0057\u006f\u0072\u0064 \u0072e\u0073\u0075\u006c\u0074\u0073\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_ccf ,_cegb );
_cee :=CopyFile (_ccf ,_cegb );if _cee !=nil {_dggd .Logf ("\u0045\u0052\u0052\u004f\u0052\u0020\u0063\u006f\u0070\u0079\u0069\u006eg\u0020\u0074\u006f \u0025\u0073\u003a\u0020\u0025\u0076\u002c\u0020\u0068\u0061\u0076i\u006e\u0067\u0020d\u0069\u0066\u0066\u0065r\u0065\u006e\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u002c\u0020\u0072\u0065\u0070\u006c\u0061\u0063\u0069\u006eg\u0020\u0069\u0074\u0020\u0077\u0069\u0074\u0068\u0020\u0062\u006ca\u006e\u006b\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064",_cegb ,_cee );
if _gad :=_efef (_cab ,_cegb );_gad !=nil {_dggd .Fatalf ("\u0045\u0052\u0052\u004f\u0052\u0020c\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0065\u006d\u0070\u0074\u0079 \u0069\u006d\u0061\u0067\u0065\u0020\u0025s\u003a\u0020\u0025\u0076",_cegb ,_gad );
};};_dggd .Logf ("\u0043\u006fm\u0062\u0069\u006e\u0069\u006eg\u0020\u0055\u006e\u0069\u004ff\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_cab ,_cegb );
_eggb ,_cee :=CombinePNGFiles (_cab ,_cegb );if _cg .IsNotExist (_cee ){_dggd .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_eggb {_dggd .Fatal ("\u0055n\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0063\u006f\u006db\u0069\u006e\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0073");
};_dggd .Logf ("\u0043\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0064\u0069\u0066f \u0055n\u0069\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075l\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065 \u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_cab ,_cegb );
_eggb ,_ffe ,_cgcc ,_bbbc ,_cee :=CreatePNGDiff (_cab ,_cegb );if _cee !=nil &&_e .Is (_cee ,ErrImageSizeNotMatch ){_dggd .Fatalf ("\u0045\u0072\u0072\u006fr\u0020\u006f\u006e\u0020\u0063\u0072\u0065\u0061\u0074\u0065 \u0050N\u0047\u0020\u0044\u0069\u0066\u0066\u003a \u0025\u0076",_cee );
};if _eggb {_dggd .Logf ("\u0049\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073\u000a",_ffe );_dggd .Logf ("D\u0069\u0066\u0066\u0020Pe\u0072c\u0065\u006e\u0074\u003a\u0020%\u0032\u002e\u0066\u0025\u0025\u000a",_cgcc );_dggd .Logf ("\u0044i\u0066f\u0020\u0054\u006f\u0074\u0061\u006c\u003a\u0020\u0025\u0066\u000a",_bbbc );
_gcb :=_ff .Base (_ffe );_fcb ,_beb :=currentHashMap .Read (_gcb );if _beb &&(_fcb .DiffPercent < _cgcc ||_fcb .DiffTotal < _bbbc ){_dggd .Logf ("\u004e\u0065\u0077\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0068\u0061\u0076\u0069\u006e\u0067 h\u0069g\u0068\u0065\u0072\u0020\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u003a\u0020\u0025\u0066\u0020\u0061\u006e\u0064 \u0074\u006f\u0074\u0061\u006c\u0020\u0025\u0066\u000a",_cgcc ,_bbbc );
};_baa ,_afab :=HashFile (_ffe );_gb .NoError (_dggd ,_afab );_cedg :=_ffdb (_dggd ,_ffe );if !_beb ||_fcb .Value !=_baa ||_fcb .ResultSize !=_cedg ||_fcb .DiffPercent !=_cgcc ||_fcb .DiffTotal !=_bbbc {_ccgc :=ReferenceEntry {Timestamp :_cbd .Now ().UTC ().Unix (),Value :_baa ,ResultSize :_cedg ,DiffPercent :_cgcc ,DiffTotal :_bbbc };
currentHashMap .Write (_gcb ,_ccgc );if _afab =refFile .Update (currentHashMap );_afab !=nil {_dggd .Logf ("\u0055\u0070\u0064\u0061\u0074\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0020f\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_afab );
};};};};continue ;};_dggd .Run (_faa .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_dacd ),func (_ccbff *_dgf .T ){_ccbff .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_cfag ,_cab );_acdf ,_ffd :=ComparePNGFiles (_cfag ,_cab );
if _cg .IsNotExist (_ffd ){_ccbff .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_acdf {_ccbff .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");
};});};});};func _cdg (_ca ,_ec *_f .Reader ,_cbg bool )func (_acg *_dgf .T ){return func (_dca *_dgf .T ){_af :=make ([]*_f .File ,len (_ca .File ));copy (_af ,_ca .File );_gaf :=make ([]*_f .File ,len (_ec .File ));copy (_gaf ,_ec .File );if len (_af )!=len (_gaf ){_dca .Errorf ("\u0065x\u0070\u0065\u0063\u0074e\u0064\u0020\u0025\u0064\u0020f\u0069l\u0065s\u002c\u0020\u0067\u006f\u0074\u0020\u0025d",len (_ca .File ),len (_ec .File ));
};for _bdd ,_bf :=range _af {for _faf ,_gd :=range _gaf {if _gd ==nil {continue ;};if _bf .Name ==_gd .Name {if _cbg {_dca .Run (_bf .Name ,_caa (_bf ,_gd ));};_af [_bdd ]=nil ;_gaf [_faf ]=nil ;};};};for _ ,_fb :=range _af {if _fb !=nil {_dca .Errorf ("\u0064\u0069\u0064\u006e\u0027\u0074\u0020\u0066\u0069\u006ed\u0020\u0065\u0078\u0070\u0065\u0063\u0074e\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0027\u0025\u0073\u0027",_fb .Name );
};};for _ ,_gc :=range _gaf {if _gc !=nil {_dca .Errorf ("\u0066\u006f\u0075\u006e\u0064\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020'\u0025\u0073\u0027",_gc .Name );};};};};func CompareGoldenZip (t *_dgf .T ,expectedFn string ,got []byte ){_ea :=_ff .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );
if *_cgb {if _acc :=_cg .WriteFile (_ea ,got ,0644);_acc !=nil {t .Fatal (_acc );};};CompareZip (t ,expectedFn ,got ,true );};func CreatePNGDiff (src ,dst string )(bool ,string ,float64 ,float64 ,error ){_efbe ,_fed :=ReadPNG (src );if _fed !=nil {return false ,"",0,0,_fed ;
};_cbe ,_fed :=ReadPNG (dst );if _fed !=nil {return false ,"",0,0,_fed ;};_ccb :=_efbe .Bounds ();_cccg :=_cbe .Bounds ();if !_cdfd (_ccb ,_cccg ){if _d .Abs (float64 (_ccb .Max .X )-float64 (_cccg .Max .X ))> 1{_bdf .Printf ("S\u006f\u0075\u0072\u0063\u0065\u0020b\u006f\u0075\u006e\u0064\u0073\u003a \u0025\u0076\u003b\u0020\u0044\u0065\u0073t\u0020\u0062\u006f\u0075\u006e\u0064\u0073\u003a\u0020\u0025v\u000a",_ccb ,_cccg );
return false ,"",0,0,ErrImageSizeNotMatch ;};};_bbg :=_bd .NewRGBA (_bd .Rect (0,0,_ccb .Max .X ,_ccb .Max .Y ));var (_bege float64 ;_feda float64 ;);for _aga :=_ccb .Min .Y ;_aga < _ccb .Max .Y ;_aga ++{for _db :=_ccb .Min .X ;_db < _ccb .Max .X ;_db ++{_edaf ,_gbge ,_gde ,_cgd :=_efbe .At (_db ,_aga ).RGBA ();
_eed ,_daf ,_ggc ,_afd :=_cbe .At (_db ,_aga ).RGBA ();_bbg .Set (_db ,_aga ,_dd .RGBA {uint8 (_eed ),uint8 (_daf ),uint8 (_ggc ),64});_afa :=_cgd ==0x00&&_edaf ==0x00&&_gbge ==0x00&&_gde ==0x00&&_eed ==0xFFFF&&_daf ==0xFFFF&&_ggc ==0xFFFF;if !_afa &&!_geb (_efbe .At (_db ,_aga ),_cbe .At (_db ,_aga )){_bbg .Set (_db ,_aga ,_dd .RGBA {uint8 (_edaf ),uint8 (_gbge ),uint8 (_gde ),uint8 (_cgd )});
_dgc :=float64 (_edaf )+float64 (_gbge )+float64 (_gde )+float64 (_cgd )-float64 (_eed )+float64 (_daf )+float64 (_ggc )+float64 (_afd );_acd :=_d .Sqrt (_d .Pow (_dgc /float64 (_ccb .Dx ()*_ccb .Dy ()),2));_feda +=_acd ;_bege ++;};};};_faea :=_bege /float64 (_ccb .Dx ()*_ccb .Dy ())*100;
_bfg :=_ff .Dir (src );_ddb :=_a .TrimSuffix (_ff .Base (src ),_ff .Ext (src ));_fdf ,_fed :=_cg .Create (_bfg +"\u002f"+_ddb +"\u002dd\u0069\u0066\u0066\u002e\u0070\u006eg");if _fed !=nil {return false ,"",0,0,_fed ;};defer _fdf .Close ();_cec :=_a .Replace (_bfg ,"\u0072\u0065\u006e\u0064\u0065\u0072","\u0066\u006f\u006et\u0073",1)+"\u002f\u0043\u0061l\u0069\u0062\u0072\u0069\u002e\u0074\u0074\u0066";
_agd :=_faa .Sprintf ("\u0044\u0069f\u0066\u0065\u0072e\u006e\u0063\u0065\u003a\u0020\u0025\u0066\u0025\u0025",_faea );_fed =_efec (_bbg ,_cec ,_agd ,15,22);if _fed !=nil {return false ,"",0,0,_fed ;};_agd =_faa .Sprintf ("T\u006ft\u0061\u006c\u0020\u0044\u0069\u0066\u0066\u0065r\u0065\u006e\u0063\u0065: \u0025\u0066",_feda );
_fed =_efec (_bbg ,_cec ,_agd ,15,44);if _fed !=nil {return false ,"",0,0,_fed ;};if _dde :=_dg .Encode (_fdf ,_bbg );_dde !=nil {return false ,"",0,0,_dde ;};return true ,_fdf .Name (),_faea ,_feda ,nil ;};func _geb (_aaa ,_feg _dd .Color )bool {_bg ,_ccg ,_fda ,_ab :=_aaa .RGBA ();
_dac ,_gbgb ,_afg ,_gge :=_feg .RGBA ();return _bg ==_dac &&_ccg ==_gbgb &&_fda ==_afg &&_ab ==_gge ;};func CompareZip (t *_dgf .T ,expectedFn string ,got []byte ,cmpFileContents bool ){_ga :=_ff .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );
_aa ,_agg :=_f .NewReader (_ace .NewReader (got ),int64 (len (got )));if _agg !=nil {t .Fatalf ("\u0075\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0074\u0065\u0073\u0074\u0020\u0069\u006e\u0070\u0075\u0074: \u0025\u0073",_agg );
};_eg ,_agg :=_cg .Open (_ga );if _agg !=nil {t .Fatalf ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020r\u0065\u0061\u0064\u0020\u0067\u006f\u006cd\u0065\u006e\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_agg );};defer _eg .Close ();
_fff ,_agg :=_cg .Stat (_ga );if _agg !=nil {t .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_agg );};_ffb ,_agg :=_f .NewReader (_eg ,_fff .Size ());if _agg !=nil {t .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_agg );
};t .Run (expectedFn ,_cdg (_ffb ,_aa ,cmpFileContents ));};func CompareGoldenZipFilesOnly (t *_dgf .T ,expectedFn string ,got []byte ){_cfd :=_ff .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );if *_cgb {if _ce :=_cg .WriteFile (_cfd ,got ,0644);
_ce !=nil {t .Fatal (_ce );};};CompareZip (t ,expectedFn ,got ,false );};func _caa (_eaf ,_de *_f .File )func (_gcd *_dgf .T ){return func (_cdf *_dgf .T ){_cca ,_cfa :=_eaf .Open ();if _cfa !=nil {_cdf .Errorf ("\u0065\u0072r\u006f\u0072\u0020o\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0025\u0073",_eaf .Name );
};defer _cca .Close ();_fdg ,_cfa :=_de .Open ();if _cfa !=nil {_cdf .Errorf ("\u0065\u0072r\u006f\u0072\u0020o\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0025\u0073",_de .Name );};defer _fdg .Close ();_fbf ,_ :=_fa .ReadAll (_cca );_efb ,_ :=_fa .ReadAll (_fdg );
if !_ace .Equal (_fbf ,_efb ){_aac (_cdf ,_fbf ,_efb );_faa .Println (string (_fbf ));_faa .Println (string (_efb ));_cdf .Errorf ("\u006d\u0069\u0073\u006da\u0074\u0063\u0068\u0065\u0064\u0020\u0063\u006f\u006e\u0074e\u006et\u0073\u0020\u0025\u0064\u0020\u0076\u0073 \u0025\u0064",len (_fbf ),len (_efb ));
};};};