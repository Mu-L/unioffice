//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_da "crypto/md5";_fg "encoding/hex";_e "encoding/json";_daf "errors";_ef "fmt";_def "github.com/stretchr/testify/require";_g "golang.org/x/image/font";_dafb "golang.org/x/image/font/opentype";_ga "golang.org/x/image/math/fixed";
_be "image";_ea "image/color";_ee "image/draw";_ec "image/png";_dba "io";_db "io/ioutil";_f "log";_de "math";_eb "os";_dg "os/exec";_efd "path/filepath";_b "strings";_fc "sync";_d "testing";_cf "time";);func HashFile (file string )(string ,error ){_ed ,_bc :=_eb .Open (file );
if _bc !=nil {return "",_bc ;};defer _ed .Close ();_eec :=_da .New ();if _ ,_bc =_dba .Copy (_eec ,_ed );_bc !=nil {return "",_bc ;};return _fg .EncodeToString (_eec .Sum (nil )),nil ;};func (_ae *ReferenceMap )MarshalJSON ()([]byte ,error ){return _e .Marshal (_ae ._bd )};
func RunRenderOfficeTest (t *_d .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ,postfix string ){_ggf :=_b .TrimSuffix (_efd .Base (pdfPath ),_efd .Ext (pdfPath ));t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_cfd *_d .T ){_edb :=_efd .Join (outputDir ,_ggf );
_bfed :=_edb +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _feg :=RenderPDFToPNGs (pdfPath ,0,_bfed );_feg !=nil {_cfd .Skip (_feg );};_ddd :=_ggf +postfix ;_bag :=_efd .Join (outputDir ,_ddd );_acb :=_bag +"\u002d%\u0064\u002e\u0070\u006e\u0067";_fb :=false ;
if saveBaseline {_eef :=_efd .Dir (pdfPath );_edd :=_efd .Join (_eef ,_ddd +"\u002e\u0070\u0064\u0066");if _ ,_dgg :=_eb .Stat (_edd );_dgg ==nil {_cfd .Logf ("\u0052e\u006e\u0064\u0065\u0072\u0020\u004d\u0053\u0020\u004f\u0066\u0066i\u0063\u0065\u0020\u0050\u0044\u0046\u003a\u0020\u0025\u0076",_edd );
if _defb :=RenderPDFToPNGs (_edd ,0,_acb );_defb !=nil {_cfd .Skip (_defb );};_fb =true ;};};for _edg :=1;true ;_edg ++{_afgd :=_ef .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_edb ,_edg );_ccgf :=_efd .Join (baselineRenderPath ,_ef .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_ggf ,_edg ));
if _ ,_bfg :=_eb .Stat (_afgd );_bfg !=nil {break ;};_cfd .Logf ("\u0025\u0073",_ccgf );if saveBaseline {_cfd .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_afgd ,_ccgf );_gcg :=CopyFile (_afgd ,_ccgf );
if _gcg !=nil {_cfd .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ccgf ,_gcg );};if _fb {_dfcf :=_ef .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_bag ,_edg );
_eca :=_efd .Join (baselineRenderPath ,_ef .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_ddd ,_edg ));_cfd .Logf ("\u0043\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u004d\u0053\u0020\u0057\u006f\u0072\u0064 \u0072e\u0073\u0075\u006c\u0074\u0073\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_dfcf ,_eca );
_aga :=CopyFile (_dfcf ,_eca );if _aga !=nil {_cfd .Logf ("\u0045\u0052\u0052\u004f\u0052\u0020\u0063\u006f\u0070\u0079\u0069\u006eg\u0020\u0074\u006f \u0025\u0073\u003a\u0020\u0025\u0076\u002c\u0020\u0068\u0061\u0076i\u006e\u0067\u0020d\u0069\u0066\u0066\u0065r\u0065\u006e\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u002c\u0020\u0072\u0065\u0070\u006c\u0061\u0063\u0069\u006eg\u0020\u0069\u0074\u0020\u0077\u0069\u0074\u0068\u0020\u0062\u006ca\u006e\u006b\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064",_eca ,_aga );
if _eed :=_bec (_ccgf ,_eca );_eed !=nil {_cfd .Fatalf ("\u0045\u0052\u0052\u004f\u0052\u0020c\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0065\u006d\u0070\u0074\u0079 \u0069\u006d\u0061\u0067\u0065\u0020\u0025s\u003a\u0020\u0025\u0076",_eca ,_eed );
};};_cfd .Logf ("\u0043\u006fm\u0062\u0069\u006e\u0069\u006eg\u0020\u0055\u006e\u0069\u004ff\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_ccgf ,_eca );
_dbac ,_aga :=CombinePNGFiles (_ccgf ,_eca );if _eb .IsNotExist (_aga ){_cfd .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_dbac {_cfd .Fatal ("\u0055n\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0063\u006f\u006db\u0069\u006e\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0073");
};_cfd .Logf ("\u0043\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0064\u0069\u0066f \u0055n\u0069\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075l\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065 \u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_ccgf ,_eca );
_dbac ,_age ,_cd ,_cbg ,_aga :=CreatePNGDiff (_ccgf ,_eca );if _aga !=nil &&_daf .Is (_aga ,ErrImageSizeNotMatch ){_cfd .Fatalf ("\u0045\u0072\u0072\u006fr\u0020\u006f\u006e\u0020\u0063\u0072\u0065\u0061\u0074\u0065 \u0050N\u0047\u0020\u0044\u0069\u0066\u0066\u003a \u0025\u0076",_aga );
};if _dbac {_cfd .Logf ("\u0049\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073\u000a",_age );_cfd .Logf ("D\u0069\u0066\u0066\u0020Pe\u0072c\u0065\u006e\u0074\u003a\u0020%\u0032\u002e\u0066\u0025\u0025\u000a",_cd );_cfd .Logf ("\u0044i\u0066f\u0020\u0054\u006f\u0074\u0061\u006c\u003a\u0020\u0025\u0066\u000a",_cbg );
_gdfg :=_efd .Base (_age );_cee ,_acce :=currentHashMap .Read (_gdfg );if _acce &&(_cee .DiffPercent < _cd ||_cee .DiffTotal < _cbg ){_cfd .Logf ("\u004e\u0065\u0077\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0068\u0061\u0076\u0069\u006e\u0067 h\u0069g\u0068\u0065\u0072\u0020\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u003a\u0020\u0025\u0066\u0020\u0061\u006e\u0064 \u0074\u006f\u0074\u0061\u006c\u0020\u0025\u0066\u000a",_cd ,_cbg );
};_fdd ,_bcb :=HashFile (_age );_def .NoError (_cfd ,_bcb );_dddb :=_daba (_cfd ,_age );if !_acce ||_cee .Value !=_fdd ||_cee .ResultSize !=_dddb ||_cee .DiffPercent !=_cd ||_cee .DiffTotal !=_cbg {_bceg :=ReferenceEntry {Timestamp :_cf .Now ().UTC ().Unix (),Value :_fdd ,ResultSize :_dddb ,DiffPercent :_cd ,DiffTotal :_cbg };
currentHashMap .Write (_gdfg ,_bceg );if _bcb =refFile .Update (currentHashMap );_bcb !=nil {_cfd .Logf ("\u0055\u0070\u0064\u0061\u0074\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0020f\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bcb );
};};};};continue ;};_cfd .Run (_ef .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_edg ),func (_dbbb *_d .T ){_dbbb .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_afgd ,_ccgf );_gad ,_add :=ComparePNGFiles (_afgd ,_ccgf );
if _eb .IsNotExist (_add ){_dbbb .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_gad {_dbbb .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");
};});};});};func (_gc *ReferenceFile )Update (currentMap *ReferenceMap )error {if _gc ._ecb ==""{return nil ;};_a :=_gc .updateMap (currentMap );if _a ==0{return nil ;};_ca ,_dc :=_eb .OpenFile (_gc ._ecb ,_eb .O_CREATE |_eb .O_TRUNC |_eb .O_WRONLY ,0664);
if _dc !=nil {return _dc ;};defer _ca .Close ();_gc .Timestamp =_cf .Now ().UTC ();_ag :=_e .NewEncoder (_ca );_ag .SetIndent ("","\u0009");return _ag .Encode (_gc );};type ReferenceMap struct{_fc .Mutex ;_bd map[string ]ReferenceEntry ;};func _cab (_aec *_be .RGBA ,_ebc string ,_bba string ,_ede ,_dcf int )error {_abd ,_abb :=_db .ReadFile (_ebc );
if _abb !=nil {return _abb ;};_ced ,_abb :=_dafb .Parse (_abd );if _abb !=nil {return _abb ;};_bfd ,_abb :=_dafb .NewFace (_ced ,&_dafb .FaceOptions {Size :18,DPI :72,Hinting :_g .HintingNone });if _abb !=nil {return _abb ;};_fdf :=&_g .Drawer {Dst :_aec ,Src :_be .NewUniform (_ea .RGBA {200,100,0,255}),Face :_bfd ,Dot :_ga .P (_ede ,_dcf )};
_fdf .DrawString (_bba );return nil ;};func (_gag *ReferenceMap )UnmarshalJSON (data []byte )error {return _e .Unmarshal (data ,&_gag ._bd )};var (ErrRenderNotSupported =_daf .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");
ErrImageSizeNotMatch =_daf .New ("\u0069\u006d\u0061ge\u0020\u0073\u0069\u007a\u0065\u0073\u0020\u0064\u006f\u006e\u0027\u0074\u0020\u006d\u0061\u0074\u0063\u0068"););func (_ecbd *ReferenceMap )Read (key string )(ReferenceEntry ,bool ){_ecbd .Lock ();defer _ecbd .Unlock ();
if _ecbd ._bd ==nil {return ReferenceEntry {},false ;};_bda ,_fd :=_ecbd ._bd [key ];return _bda ,_fd ;};func ReadFile (dirPath ,testName string ,createEmpty bool )(*ReferenceFile ,error ){if dirPath ==""&&createEmpty {return &ReferenceFile {Map :&ReferenceMap {}},nil ;
};if dirPath ==""{return nil ,_eb .ErrNotExist ;};_cgg :=_efd .Join (dirPath ,testName +"\u005fr\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u002e\u006a\u0073\u006f\u006e");_ffd :=&ReferenceFile {_ecb :_cgg };_bad ,_afe :=_eb .Open (_cgg );if _daf .Is (_afe ,_eb .ErrNotExist )&&createEmpty {_ffd .Timestamp =_cf .Now ().UTC ();
_ffd .Map =&ReferenceMap {};return _ffd ,nil ;};if _afe !=nil {return nil ,_afe ;};defer _bad .Close ();if _caa :=_e .NewDecoder (_bad ).Decode (_ffd );_caa !=nil {if _caa .Error ()=="i\u006c\u006c\u0065\u0067\u0061\u006c \u0062\u0061\u0073\u0065\u0036\u0034 \u0064\u0061\u0074\u0061\u0020\u0061\u0074 \u0069\u006e\u0070\u0075\u0074\u0020\u0062\u0079\u0074\u0065 \u0030"&&createEmpty {return _ffd ,nil ;
};return nil ,_caa ;};return _ffd ,nil ;};func CombinePNGFiles (file1 ,file2 string )(bool ,error ){_gf ,_bf :=ReadPNG (file1 );if _bf !=nil {return false ,_bf ;};_dee ,_bf :=ReadPNG (file2 );if _bf !=nil {return false ,_bf ;};_acc :=_be .Point {_gf .Bounds ().Dx (),0};
_ffc :=_be .Rectangle {_acc ,_acc .Add (_dee .Bounds ().Size ())};_dga :=_be .Rectangle {_be .Point {0,0},_ffc .Max };_ead :=_be .NewRGBA (_dga );_ee .Draw (_ead ,_gf .Bounds (),_gf ,_be .Point {0,0},_ee .Src );_ee .Draw (_ead ,_ffc ,_dee ,_be .Point {0,0},_ee .Src );
_bce :=_efd .Dir (file1 );_egd :=_b .TrimSuffix (_efd .Base (file1 ),_efd .Ext (file1 ));_ebff ,_bf :=_eb .Create (_bce +"\u002f"+_egd +"\u002d\u0063\u006f\u006d\u0062\u0069\u006e\u0065\u0064\u002e\u0070\u006e\u0067");if _bf !=nil {return false ,_bf ;};
defer _ebff .Close ();if _dab :=_ec .Encode (_ebff ,_ead );_dab !=nil {return false ,_dab ;};return true ,nil ;};func _bec (_gea ,_dce string )error {_bcc ,_gfc :=_eb .Open (_gea );if _gfc !=nil {return _gfc ;};defer _bcc .Close ();_cce ,_ ,_gfc :=_be .DecodeConfig (_bcc );
if _gfc !=nil {panic (_gfc );};_becb :=_be .NewRGBA (_be .Rect (0,0,_cce .Width ,_cce .Height ));_aef ,_gfc :=_eb .Create (_dce );if _gfc !=nil {return _gfc ;};defer _aef .Close ();_gfc =_ec .Encode (_aef ,_becb );if _gfc !=nil {return _gfc ;};return nil ;
};func (_efb *ReferenceMap )Keys ()(_bdg []string ){_bdg =make ([]string ,len (_efb ._bd ));var _eab int ;for _fe :=range _efb ._bd {_bdg [_eab ]=_fe ;_eab ++;};return _bdg ;};func CompareImages (img1 ,img2 _be .Image )(bool ,error ){_ac :=img1 .Bounds ();
_acf :=0;for _geb :=0;_geb < _ac .Size ().X ;_geb ++{for _dfa :=0;_dfa < _ac .Size ().Y ;_dfa ++{_dbad ,_fga ,_ce ,_ :=img1 .At (_geb ,_dfa ).RGBA ();_eac ,_cff ,_gae ,_ :=img2 .At (_geb ,_dfa ).RGBA ();if _dbad !=_eac ||_fga !=_cff ||_ce !=_gae {_acf ++;
};};};_cgb :=float64 (_acf )/float64 (_ac .Dx ()*_ac .Dy ());if _cgb > 0.0001{_ef .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_cgb ,_acf );return false ,nil ;
};return true ,nil ;};func _aeb (_bfeg ,_bca _be .Rectangle )bool {return _bfeg .Min .X ==_bca .Min .X &&_bfeg .Min .Y ==_bca .Min .Y &&_bfeg .Max .X ==_bca .Max .X &&_bfeg .Max .Y ==_bca .Max .Y ;};func RunRenderTest (t *_d .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ){RunRenderOfficeTest (t ,pdfPath ,outputDir ,baselineRenderPath ,saveBaseline ,currentHashMap ,refFile ,"\u002em\u0073\u0077\u006f\u0072\u0064");
};func CreatePNGDiff (src ,dst string )(bool ,string ,float64 ,float64 ,error ){_efa ,_fde :=ReadPNG (src );if _fde !=nil {return false ,"",0,0,_fde ;};_bdgd ,_fde :=ReadPNG (dst );if _fde !=nil {return false ,"",0,0,_fde ;};_cc :=_efa .Bounds ();_afg :=_bdgd .Bounds ();
if !_aeb (_cc ,_afg ){if _de .Abs (float64 (_cc .Max .X )-float64 (_afg .Max .X ))> 1{_f .Printf ("S\u006f\u0075\u0072\u0063\u0065\u0020b\u006f\u0075\u006e\u0064\u0073\u003a \u0025\u0076\u003b\u0020\u0044\u0065\u0073t\u0020\u0062\u006f\u0075\u006e\u0064\u0073\u003a\u0020\u0025v\u000a",_cc ,_afg );
return false ,"",0,0,ErrImageSizeNotMatch ;};};_caaa :=_be .NewRGBA (_be .Rect (0,0,_cc .Max .X ,_cc .Max .Y ));var (_faf float64 ;_bfe float64 ;);for _bdd :=_cc .Min .Y ;_bdd < _cc .Max .Y ;_bdd ++{for _gdf :=_cc .Min .X ;_gdf < _cc .Max .X ;_gdf ++{_ccf ,_agc ,_gge ,_beg :=_efa .At (_gdf ,_bdd ).RGBA ();
_eea ,_abe ,_abc ,_fdec :=_bdgd .At (_gdf ,_bdd ).RGBA ();_caaa .Set (_gdf ,_bdd ,_ea .RGBA {uint8 (_eea ),uint8 (_abe ),uint8 (_abc ),64});_faa :=_beg ==0x00&&_ccf ==0x00&&_agc ==0x00&&_gge ==0x00&&_eea ==0xFFFF&&_abe ==0xFFFF&&_abc ==0xFFFF;if !_faa &&!_ggea (_efa .At (_gdf ,_bdd ),_bdgd .At (_gdf ,_bdd )){_caaa .Set (_gdf ,_bdd ,_ea .RGBA {uint8 (_ccf ),uint8 (_agc ),uint8 (_gge ),uint8 (_beg )});
_ceg :=float64 (_ccf )+float64 (_agc )+float64 (_gge )+float64 (_beg )-float64 (_eea )+float64 (_abe )+float64 (_abc )+float64 (_fdec );_bee :=_de .Sqrt (_de .Pow (_ceg /float64 (_cc .Dx ()*_cc .Dy ()),2));_bfe +=_bee ;_faf ++;};};};_gec :=_faf /float64 (_cc .Dx ()*_cc .Dy ())*100;
_fcb :=_efd .Dir (src );_dad :=_b .TrimSuffix (_efd .Base (src ),_efd .Ext (src ));_cfc ,_fde :=_eb .Create (_fcb +"\u002f"+_dad +"\u002dd\u0069\u0066\u0066\u002e\u0070\u006eg");if _fde !=nil {return false ,"",0,0,_fde ;};defer _cfc .Close ();_fad :=_b .Replace (_fcb ,"\u0072\u0065\u006e\u0064\u0065\u0072","\u0066\u006f\u006et\u0073",1)+"\u002f\u0043\u0061l\u0069\u0062\u0072\u0069\u002e\u0074\u0074\u0066";
_gbb :=_ef .Sprintf ("\u0044\u0069f\u0066\u0065\u0072e\u006e\u0063\u0065\u003a\u0020\u0025\u0066\u0025\u0025",_gec );_fde =_cab (_caaa ,_fad ,_gbb ,15,22);if _fde !=nil {return false ,"",0,0,_fde ;};_gbb =_ef .Sprintf ("T\u006ft\u0061\u006c\u0020\u0044\u0069\u0066\u0066\u0065r\u0065\u006e\u0063\u0065: \u0025\u0066",_bfe );
_fde =_cab (_caaa ,_fad ,_gbb ,15,44);if _fde !=nil {return false ,"",0,0,_fde ;};if _ddf :=_ec .Encode (_cfc ,_caaa );_ddf !=nil {return false ,"",0,0,_ddf ;};return true ,_cfc .Name (),_gec ,_bfe ,nil ;};func _ggea (_dbb ,_gbd _ea .Color )bool {_fef ,_ccg ,_abed ,_gbg :=_dbb .RGBA ();
_fec ,_dfc ,_agf ,_gagf :=_gbd .RGBA ();return _fef ==_fec &&_ccg ==_dfc &&_abed ==_agf &&_gbg ==_gagf ;};func (_deg *ReferenceMap )Len ()int {return len (_deg ._bd )};type ReferenceEntry struct{Timestamp int64 `json:"timestamp"`;Value string `json:"value"`;
ResultSize int64 `json:"resultSize,omitempty"`;DiffPercent float64 `json:"diffPercent,omitempty"`;DiffTotal float64 `json:"diffValue,omitempty"`;Invalid bool `json:"markedInvalid,omitempty"`;};func CopyFile (src ,dst string )error {_dd ,_ad :=_eb .Open (src );
if _ad !=nil {return _ad ;};defer _dd .Close ();_df ,_ad :=_eb .Create (dst );if _ad !=nil {return _ad ;};defer _df .Close ();_ ,_ad =_dba .Copy (_df ,_dd );return _ad ;};func (_cb *ReferenceFile )updateMap (_cae *ReferenceMap )int {var _ecbe int ;if _cb .Map ._bd ==nil {_cb .Map ._bd =map[string ]ReferenceEntry {};
};for _ba ,_ab :=range _cae ._bd {_cfb ,_ge :=_cb .Map ._bd [_ba ];if !_ge {_cb .Map ._bd [_ba ]=_ab ;_ecbe ++;continue ;};if string (_cfb .Value )!=string (_ab .Value ){_cb .Map ._bd [_ba ]=_ab ;_ecbe ++;};};for _bb :=range _cb .Map ._bd {if _ ,_ff :=_cae ._bd [_bb ];
!_ff {delete (_cb .Map ._bd ,_bb );_ecbe ++;};};return _ecbe ;};func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;};if _ ,_bg :=_dg .LookPath ("\u0067\u0073");_bg !=nil {return ErrRenderNotSupported ;};return _dg .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_ef .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();
};func ReadPNG (file string )(_be .Image ,error ){_gg ,_fed :=_eb .Open (file );if _fed !=nil {return nil ,_fed ;};defer _gg .Close ();return _ec .Decode (_gg );};func _daba (_gecg *_d .T ,_gdd string )int64 {_ebcd ,_aecb :=_eb .Stat (_gdd );_def .NoError (_gecg ,_aecb );
return _ebcd .Size ();};func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_gd ,_ebf :=HashFile (file1 );if _ebf !=nil {return false ,_ebf ;};_efbc ,_ebf :=HashFile (file2 );if _ebf !=nil {return false ,_ebf ;};if _gd ==_efbc {return true ,nil ;
};_gdg ,_ebf :=ReadPNG (file1 );if _ebf !=nil {return false ,_ebf ;};_dbf ,_ebf :=ReadPNG (file2 );if _ebf !=nil {return false ,_ebf ;};if _gdg .Bounds ()!=_dbf .Bounds (){return false ,nil ;};return CompareImages (_gdg ,_dbf );};type ReferenceFile struct{Timestamp _cf .Time `json:"timestamp"`;
Map *ReferenceMap `json:"map,omitempty"`;_ecb string ;};func (_af *ReferenceMap )Write (key string ,entry ReferenceEntry ){_af .Lock ();defer _af .Unlock ();if _af ._bd ==nil {_af ._bd =map[string ]ReferenceEntry {};};_af ._bd [key ]=entry ;};func (_fa *ReferenceMap )Copy ()*ReferenceMap {_bae :=ReferenceMap {_bd :make (map[string ]ReferenceEntry ,len (_fa ._bd ))};
for _gb ,_aa :=range _fa ._bd {_bae ._bd [_gb ]=_aa ;};return &_bae ;};