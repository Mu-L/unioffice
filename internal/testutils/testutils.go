//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_e "archive/zip";_fb "bufio";_gcd "bytes";_gg "crypto/md5";_bfg "encoding/hex";_egf "encoding/json";_cd "encoding/xml";_ac "errors";_cb "flag";_gb "fmt";_ee "github.com/stretchr/testify/require";_fbd "github.com/unidoc/unioffice/v2";
_ccb "github.com/unidoc/unipdf/v3/common";_ca "golang.org/x/image/font";_bd "golang.org/x/image/font/opentype";_fg "golang.org/x/image/math/fixed";_f "image";_ef "image/color";_efc "image/draw";_gc "image/png";_gd "io";_ec "io/ioutil";_fde "log";_c "math";
_eg "os";_bf "os/exec";_b "path/filepath";_g "strings";_fd "sync";_cc "testing";_fa "time";);func RunRenderOfficeTest (t *_cc .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ,postfix string ){_aga :=_g .TrimSuffix (_b .Base (pdfPath ),_b .Ext (pdfPath ));
t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_baa *_cc .T ){_aec :=_b .Join (outputDir ,_aga );_bcd :=_aec +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _dcc :=RenderPDFToPNGs (pdfPath ,0,_bcd );_dcc !=nil {_baa .Skip (_dcc );};_cdeg :=_aga +postfix ;
_gdd :=_b .Join (outputDir ,_cdeg );_cag :=_gdd +"\u002d%\u0064\u002e\u0070\u006e\u0067";_bdcf :=false ;if saveBaseline {_dde :=_b .Dir (pdfPath );_fag :=_b .Join (_dde ,_cdeg +"\u002e\u0070\u0064\u0066");if _ ,_dfa :=_eg .Stat (_fag );_dfa ==nil {_baa .Logf ("\u0052e\u006e\u0064\u0065\u0072\u0020\u004d\u0053\u0020\u004f\u0066\u0066i\u0063\u0065\u0020\u0050\u0044\u0046\u003a\u0020\u0025\u0076",_fag );
if _fcba :=RenderPDFToPNGs (_fag ,0,_cag );_fcba !=nil {_baa .Skip (_fcba );};_bdcf =true ;};};for _ddf :=1;true ;_ddf ++{_gdcf :=_gb .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_aec ,_ddf );_fabc :=_b .Join (baselineRenderPath ,_gb .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_aga ,_ddf ));
if _ ,_feg :=_eg .Stat (_gdcf );_feg !=nil {break ;};_baa .Logf ("\u0025\u0073",_fabc );if saveBaseline {_baa .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_gdcf ,_fabc );_gdgc :=CopyFile (_gdcf ,_fabc );
if _gdgc !=nil {_baa .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fabc ,_gdgc );};if _bdcf {_adf :=_gb .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_gdd ,_ddf );
_gfed :=_b .Join (baselineRenderPath ,_gb .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_cdeg ,_ddf ));_baa .Logf ("\u0043\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u004d\u0053\u0020\u0057\u006f\u0072\u0064 \u0072e\u0073\u0075\u006c\u0074\u0073\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_adf ,_gfed );
_bdb :=CopyFile (_adf ,_gfed );if _bdb !=nil {_baa .Logf ("\u0045\u0052\u0052\u004f\u0052\u0020\u0063\u006f\u0070\u0079\u0069\u006eg\u0020\u0074\u006f \u0025\u0073\u003a\u0020\u0025\u0076\u002c\u0020\u0068\u0061\u0076i\u006e\u0067\u0020d\u0069\u0066\u0066\u0065r\u0065\u006e\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u002c\u0020\u0072\u0065\u0070\u006c\u0061\u0063\u0069\u006eg\u0020\u0069\u0074\u0020\u0077\u0069\u0074\u0068\u0020\u0062\u006ca\u006e\u006b\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064",_gfed ,_bdb );
if _fege :=_cdf (_fabc ,_gfed );_fege !=nil {_baa .Fatalf ("\u0045\u0052\u0052\u004f\u0052\u0020c\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0065\u006d\u0070\u0074\u0079 \u0069\u006d\u0061\u0067\u0065\u0020\u0025s\u003a\u0020\u0025\u0076",_gfed ,_fege );
};};_baa .Logf ("\u0043\u006fm\u0062\u0069\u006e\u0069\u006eg\u0020\u0055\u006e\u0069\u004ff\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_fabc ,_gfed );
_ffd ,_bdb :=CombinePNGFiles (_fabc ,_gfed );if _eg .IsNotExist (_bdb ){_baa .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_ffd {_baa .Fatal ("\u0055n\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0063\u006f\u006db\u0069\u006e\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0073");
};_baa .Logf ("\u0043\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0064\u0069\u0066f \u0055n\u0069\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075l\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065 \u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_fabc ,_gfed );
_ffd ,_fed ,_bbee ,_abge ,_bdb :=CreatePNGDiff (_fabc ,_gfed );if _bdb !=nil &&_ac .Is (_bdb ,ErrImageSizeNotMatch ){_baa .Fatalf ("\u0045\u0072\u0072\u006fr\u0020\u006f\u006e\u0020\u0063\u0072\u0065\u0061\u0074\u0065 \u0050N\u0047\u0020\u0044\u0069\u0066\u0066\u003a \u0025\u0076",_bdb );
};if _ffd {_baa .Logf ("\u0049\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073\u000a",_fed );_baa .Logf ("D\u0069\u0066\u0066\u0020Pe\u0072c\u0065\u006e\u0074\u003a\u0020%\u0032\u002e\u0066\u0025\u0025\u000a",_bbee );_baa .Logf ("\u0044i\u0066f\u0020\u0054\u006f\u0074\u0061\u006c\u003a\u0020\u0025\u0066\u000a",_abge );
_fdca :=_b .Base (_fed );_abgf ,_fega :=currentHashMap .Read (_fdca );if _fega &&(_abgf .DiffPercent < _bbee ||_abgf .DiffTotal < _abge ){_baa .Logf ("\u004e\u0065\u0077\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0068\u0061\u0076\u0069\u006e\u0067 h\u0069g\u0068\u0065\u0072\u0020\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u003a\u0020\u0025\u0066\u0020\u0061\u006e\u0064 \u0074\u006f\u0074\u0061\u006c\u0020\u0025\u0066\u000a",_bbee ,_abge );
};_bgab ,_aaff :=HashFile (_fed );_ee .NoError (_baa ,_aaff );_bcg :=_cfa (_baa ,_fed );if !_fega ||_abgf .Value !=_bgab ||_abgf .ResultSize !=_bcg ||_abgf .DiffPercent !=_bbee ||_abgf .DiffTotal !=_abge {_dec :=ReferenceEntry {Timestamp :_fa .Now ().UTC ().Unix (),Value :_bgab ,ResultSize :_bcg ,DiffPercent :_bbee ,DiffTotal :_abge };
currentHashMap .Write (_fdca ,_dec );if _aaff =refFile .Update (currentHashMap );_aaff !=nil {_baa .Logf ("\u0055\u0070\u0064\u0061\u0074\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0020f\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_aaff );
};};};};continue ;};_baa .Run (_gb .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_ddf ),func (_gbee *_cc .T ){_gbee .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_gdcf ,_fabc );_edg ,_bgef :=ComparePNGFiles (_gdcf ,_fabc );
if _eg .IsNotExist (_bgef ){_gbee .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_edg {_gbee .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");
};});};});};func (_fdg *ReferenceMap )Write (key string ,entry ReferenceEntry ){_fdg .Lock ();defer _fdg .Unlock ();if _fdg ._fgb ==nil {_fdg ._fgb =map[string ]ReferenceEntry {};};_fdg ._fgb [key ]=entry ;};func (_adc *ReferenceMap )UnmarshalJSON (data []byte )error {return _egf .Unmarshal (data ,&_adc ._fgb )};
type ReferenceFile struct{Timestamp _fa .Time `json:"timestamp"`;Map *ReferenceMap `json:"map,omitempty"`;_dgf string ;};func (_cfe *ReferenceMap )Keys ()(_acc []string ){_acc =make ([]string ,len (_cfe ._fgb ));var _gea int ;for _edc :=range _cfe ._fgb {_acc [_gea ]=_edc ;
_gea ++;};return _acc ;};func CompareGoldenZip (t *_cc .T ,expectedFn string ,got []byte ){_cad :=_b .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );if *_d {if _abd :=_eg .WriteFile (_cad ,got ,0644);_abd !=nil {t .Fatal (_abd );
};};CompareZip (t ,expectedFn ,got ,true );};func (_bce *ReferenceMap )MarshalJSON ()([]byte ,error ){return _egf .Marshal (_bce ._fgb )};func (_gag *ReferenceMap )Len ()int {return len (_gag ._fgb )};func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_gcdd ,_gfe :=HashFile (file1 );
if _gfe !=nil {return false ,_gfe ;};_deg ,_gfe :=HashFile (file2 );if _gfe !=nil {return false ,_gfe ;};if _gcdd ==_deg {return true ,nil ;};_cga ,_gfe :=ReadPNG (file1 );if _gfe !=nil {return false ,_gfe ;};_edb ,_gfe :=ReadPNG (file2 );if _gfe !=nil {return false ,_gfe ;
};if _cga .Bounds ()!=_edb .Bounds (){return false ,nil ;};return CompareImages (_cga ,_edb );};func CompareZip (t *_cc .T ,expectedFn string ,got []byte ,cmpFileContents bool ){_gaf :=_b .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );
_fbg ,_ab :=_e .NewReader (_gcd .NewReader (got ),int64 (len (got )));if _ab !=nil {t .Fatalf ("\u0075\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0074\u0065\u0073\u0074\u0020\u0069\u006e\u0070\u0075\u0074: \u0025\u0073",_ab );
};_de ,_ab :=_eg .Open (_gaf );if _ab !=nil {t .Fatalf ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020r\u0065\u0061\u0064\u0020\u0067\u006f\u006cd\u0065\u006e\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ab );};defer _de .Close ();
_caf ,_ab :=_eg .Stat (_gaf );if _ab !=nil {t .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ab );};_cda ,_ab :=_e .NewReader (_de ,_caf .Size ());if _ab !=nil {t .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ab );
};t .Run (expectedFn ,_ad (_cda ,_fbg ,cmpFileContents ));};func ReadFile (dirPath ,testName string ,createEmpty bool )(*ReferenceFile ,error ){if dirPath ==""&&createEmpty {return &ReferenceFile {Map :&ReferenceMap {}},nil ;};if dirPath ==""{return nil ,_eg .ErrNotExist ;
};_ecg :=_b .Join (dirPath ,testName +"\u005fr\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u002e\u006a\u0073\u006f\u006e");_aed :=&ReferenceFile {_dgf :_ecg };_dbc ,_ag :=_eg .Open (_ecg );if _ac .Is (_ag ,_eg .ErrNotExist )&&createEmpty {_aed .Timestamp =_fa .Now ().UTC ();
_aed .Map =&ReferenceMap {};return _aed ,nil ;};if _ag !=nil {return nil ,_ag ;};defer _dbc .Close ();if _caee :=_egf .NewDecoder (_dbc ).Decode (_aed );_caee !=nil {if _caee .Error ()=="i\u006c\u006c\u0065\u0067\u0061\u006c \u0062\u0061\u0073\u0065\u0036\u0034 \u0064\u0061\u0074\u0061\u0020\u0061\u0074 \u0069\u006e\u0070\u0075\u0074\u0020\u0062\u0079\u0074\u0065 \u0030"&&createEmpty {return _aed ,nil ;
};return nil ,_caee ;};return _aed ,nil ;};func CompareGoldenZipFilesOnly (t *_cc .T ,expectedFn string ,got []byte ){_eef :=_b .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );if *_d {if _bg :=_eg .WriteFile (_eef ,got ,0644);_bg !=nil {t .Fatal (_bg );
};};CompareZip (t ,expectedFn ,got ,false );};func _egb (_gcfe string )error {_ebf :=_fbd .XSDAny {};_aba ,_cca :=_eg .Open (_gcfe );if _cca !=nil {return _cca ;};_bgg :=_cd .NewDecoder (_aba );if _cca =_bgg .Decode (&_ebf );_cca !=nil {return _cca ;};
_aba .Close ();_aba ,_cca =_eg .Create (_gcfe );if _cca !=nil {return _cca ;};defer _aba .Close ();_beb :=_cd .NewEncoder (_aba );_beb .Indent ("","\u0020\u0020");return _beb .Encode (&_ebf );};func _cea (_dd ,_gbed _f .Rectangle )bool {return _dd .Min .X ==_gbed .Min .X &&_dd .Min .Y ==_gbed .Min .Y &&_dd .Max .X ==_gbed .Max .X &&_dd .Max .Y ==_gbed .Max .Y ;
};func CompareGoldenXML (t *_cc .T ,expectedFn string ,got []byte ){_ece :=_b .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );if *_d {if _be :=_eg .WriteFile (_ece ,got ,0644);_be !=nil {t .Fatal (_be );};};_dg ,_ga :=_eg .ReadFile (_ece );
if _ga !=nil {t .Fatalf ("\u0075\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0069\u006e\u0070\u0075t\u003a\u0020\u0025\u0073",_ga );};_eaf (t ,_dg ,got );};func CopyFile (src ,dst string )error {_cafb ,_bde :=_eg .Open (src );
if _bde !=nil {return _bde ;};defer _cafb .Close ();_deb ,_bde :=_eg .Create (dst );if _bde !=nil {return _bde ;};defer _deb .Close ();_ ,_bde =_gd .Copy (_deb ,_cafb );return _bde ;};func (_fc *ReferenceFile )updateMap (_gbc *ReferenceMap )int {var _efg int ;
if _fc .Map ._fgb ==nil {_fc .Map ._fgb =map[string ]ReferenceEntry {};};for _dc ,_fge :=range _gbc ._fgb {_ccc ,_egbb :=_fc .Map ._fgb [_dc ];if !_egbb {_fc .Map ._fgb [_dc ]=_fge ;_efg ++;continue ;};if string (_ccc .Value )!=string (_fge .Value ){_fc .Map ._fgb [_dc ]=_fge ;
_efg ++;};};for _aaf :=range _fc .Map ._fgb {if _ ,_cff :=_gbc ._fgb [_aaf ];!_cff {delete (_fc .Map ._fgb ,_aaf );_efg ++;};};return _efg ;};var _d =_cb .Bool ("t\u0065\u0073\u0074\u002e\u0075\u0070\u0064\u0061\u0074\u0065",false ,"\u0075p\u0064a\u0074\u0065\u0020\u0067\u006fl\u0064\u0065n\u0020\u0066\u0069\u006c\u0065");
type ValidationResult struct{File string `json:"file"`;Result bool `json:"result"`;Note string `json:"note"`;};type ReferenceMap struct{_fd .Mutex ;_fgb map[string ]ReferenceEntry ;};func CombinePNGFiles (file1 ,file2 string )(bool ,error ){_aca ,_cdg :=ReadPNG (file1 );
if _cdg !=nil {return false ,_cdg ;};_bga ,_cdg :=ReadPNG (file2 );if _cdg !=nil {return false ,_cdg ;};_dgg :=_f .Point {_aca .Bounds ().Dx (),0};_cafc :=_f .Rectangle {_dgg ,_dgg .Add (_bga .Bounds ().Size ())};_cgcg :=_f .Rectangle {_f .Point {0,0},_cafc .Max };
_fcd :=_f .NewRGBA (_cgcg );_efc .Draw (_fcd ,_aca .Bounds (),_aca ,_f .Point {0,0},_efc .Src );_efc .Draw (_fcd ,_cafc ,_bga ,_f .Point {0,0},_efc .Src );_egfc :=_b .Dir (file1 );_ggc :=_g .TrimSuffix (_b .Base (file1 ),_b .Ext (file1 ));_aafg ,_cdg :=_eg .Create (_egfc +"\u002f"+_ggc +"\u002d\u0063\u006f\u006d\u0062\u0069\u006e\u0065\u0064\u002e\u0070\u006e\u0067");
if _cdg !=nil {return false ,_cdg ;};defer _aafg .Close ();if _aedcc :=_gc .Encode (_aafg ,_fcd );_aedcc !=nil {return false ,_aedcc ;};return true ,nil ;};func _gda (_cadb ,_ea *_e .File )func (_bb *_cc .T ){return func (_gde *_cc .T ){_cdc ,_acb :=_cadb .Open ();
if _acb !=nil {_gde .Errorf ("\u0065\u0072r\u006f\u0072\u0020o\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0025\u0073",_cadb .Name );};defer _cdc .Close ();_db ,_acb :=_ea .Open ();if _acb !=nil {_gde .Errorf ("\u0065\u0072r\u006f\u0072\u0020o\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0025\u0073",_ea .Name );
};defer _db .Close ();_gce ,_ :=_gd .ReadAll (_cdc );_efdc ,_ :=_gd .ReadAll (_db );if !_gcd .Equal (_gce ,_efdc ){_eaf (_gde ,_gce ,_efdc );_gb .Println (string (_gce ));_gb .Println (string (_efdc ));_gde .Errorf ("\u006d\u0069\u0073\u006da\u0074\u0063\u0068\u0065\u0064\u0020\u0063\u006f\u006e\u0074e\u006et\u0073\u0020\u0025\u0064\u0020\u0076\u0073 \u0025\u0064",len (_gce ),len (_efdc ));
};};};func _ad (_fdb ,_abdf *_e .Reader ,_bfb bool )func (_ed *_cc .T ){return func (_eb *_cc .T ){_eee :=make ([]*_e .File ,len (_fdb .File ));copy (_eee ,_fdb .File );_efd :=make ([]*_e .File ,len (_abdf .File ));copy (_efd ,_abdf .File );if len (_eee )!=len (_efd ){_eb .Errorf ("\u0065x\u0070\u0065\u0063\u0074e\u0064\u0020\u0025\u0064\u0020f\u0069l\u0065s\u002c\u0020\u0067\u006f\u0074\u0020\u0025d",len (_fdb .File ),len (_abdf .File ));
};for _bc ,_fab :=range _eee {for _ce ,_cab :=range _efd {if _cab ==nil {continue ;};if _fab .Name ==_cab .Name {if _bfb {_eb .Run (_fab .Name ,_gda (_fab ,_cab ));};_eee [_bc ]=nil ;_efd [_ce ]=nil ;};};};for _ ,_ge :=range _eee {if _ge !=nil {_eb .Errorf ("\u0064\u0069\u0064\u006e\u0027\u0074\u0020\u0066\u0069\u006ed\u0020\u0065\u0078\u0070\u0065\u0063\u0074e\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0027\u0025\u0073\u0027",_ge .Name );
};};for _ ,_cf :=range _efd {if _cf !=nil {_eb .Errorf ("\u0066\u006f\u0075\u006e\u0064\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020'\u0025\u0073\u0027",_cf .Name );};};};};func ValidateDocument (file string )(bool ,error ){var (_bfd string =_eg .Getenv ("\u0050\u0052\u004fJ\u0045\u0043\u0054\u005f\u0052\u004f\u004f\u0054");
_dfde string =_eg .Getenv ("\u0048\u004f\u004d\u0045")+"\u002f\u0064\u006f\u0074\u006e\u0065\u0074\u002f\u0064o\u0074\u006e\u0065\u0074";_gdgd string =_bfd +"\u002f\u002e\u0063\u0069\u002f\u006f\u0070\u0065\u006e\u0078\u006dl\u002d\u0076\u0061\u006c\u0069\u0064\u0061\u0074o\u0072/\u0062\u0069\u006e\u002f\u0052\u0065\u006c\u0065\u0061\u0073\u0065\u002f\u006e\u0065\u0074\u0038\u002e\u0030/\u0050\u0072\u006f\u0067\u0072\u0061\u006d\u002e\u0064\u006c\u006c";
_fgee string =_bfd +"\u002f\u0069\u006et\u0065\u0072\u006e\u0061\u006c\u002f\u0074\u0065\u0073\u0074\u0075\u0074\u0069\u006c\u0073\u002f\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u005f\u0072\u0065s\u0075\u006c\u0074\u002e\u006a\u0073\u006f\u006e";
_ecgc _gcd .Buffer ;_eeg string ;_efcc bool =true ;);if _ ,_ccfc :=_eg .Stat (_dfde );_ccfc !=nil {_ccb .Log .Debug ("\u0064\u006f\u0074\u006e\u0065\u0074 \u0065\u0078\u0065\u0063\u0075\u0074\u0061\u0062\u006c\u0065\u0020\u006e\u006ft\u0020\u0066\u006f\u0075\u006e\u0064\u0020i\u006e\u0020\u0025\u0073",_dfde );
return true ,nil ;};if _ ,_ecb :=_eg .Stat (_gdgd );_ecb !=nil {_ccb .Log .Debug ("\u006f\u0070\u0065\u006e\u0078\u006dl\u002d\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u006f\u0072\u0020\u006e\u006ft\u0020\u0066\u006f\u0075\u006e\u0064\u0020i\u006e\u0020\u0025\u0073",_gdgd );
return true ,nil ;};var (_cfb map[string ]map[string ]*ValidationResult ;_gdb *ValidationResult ;);_cef ,_ege :=_eg .ReadFile (_fgee );if _ege !=nil {return false ,_ege ;};if _gbf :=_egf .Unmarshal (_cef ,&_cfb );_gbf !=nil {return false ,_gbf ;};if _cfb ==nil {_cfb =make (map[string ]map[string ]*ValidationResult );
};_aae :=_b .Ext (file );_aae =_aae [1:];if _aae !="\u0064\u006f\u0063\u0078"&&_aae !="\u0078\u006c\u0073\u0078"&&_aae !="\u0070\u0070\u0074\u0078"{return false ,_gb .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u0069\u006c\u0065\u0020\u0065x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_aae );
};_cgf :=_b .Base (file );if _adfd ,_dgcb :=_cfb [_aae ];_dgcb {if _fca ,_abdc :=_adfd [_cgf ];_abdc {_gdb =_fca ;};};_agf :=_bf .Command (_dfde ,_gdgd ,"\u002d\u002d"+_aae ,file );_agf .Stderr =&_ecgc ;_acbg ,_ege :=_agf .Output ();if _ege !=nil {_eeg =_ecgc .String ();
};_agfb :=string (_acbg );_agfb =_g .TrimSpace (_agfb [_g .Index (_agfb ,"\u000a")+1:]);if _g .Contains (_agfb ,"\u0045x\u0063\u0065\u0070\u0074\u0069\u006fn")||_g .Contains (_agfb ,"\u0069\u0073\u0020n\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064"){_efcc =false ;
if _g .Contains (_agfb ,"\u006da\u0069\u006e\u003a\u0073\u007a")||_g .Contains (_agfb ,"m\u0061\u0069\u006e\u003a\u0066\u0061\u006d\u0069\u006c\u0079")||_g .Contains (_agfb ,"\u0063h\u0061\u0072\u0074\u003a\u0065\u0078t"){_eeg ="\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0076\u0061\u006ci\u0064\u0061\u0074\u0069\u006f\u006e\u0020i\u0073\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u003a\u0020"+_agfb ;
_efcc =true ;};};if _eeg ==""{_eeg =_agfb ;};if _gdb ==nil {_gdb =&ValidationResult {File :_cgf ,Result :_efcc ,Note :_eeg };};_gdb .Result =_efcc ;_gdb .Note =_eeg ;if _cfb [_aae ]==nil {_cfb [_aae ]=make (map[string ]*ValidationResult );};if _cbb ,_cceb :=_cfb [_aae ][_cgf ];
_cceb {if _cbb .Result &&!_efcc {return false ,_gb .Errorf ("V\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e \u0072\u0065\u0073\u0075\u006c\u0074\u0020ch\u0061\u006e\u0067\u0065d\u0020\u0066\u006f\u0072\u0020\u0025\u0073\u003a\u0020%v\u0020\u002d>\u0020\u0025\u0076\u0020\u0028\u0025\u0073\u0029",file ,_cbb .Result ,_efcc ,_eeg );
};};_cfb [_aae ][_cgf ]=_gdb ;_cef ,_ege =_egf .MarshalIndent (_cfb ,"","\u0020\u0020");if _ege !=nil {return false ,_ege ;};if _bgb :=_eg .WriteFile (_fgee ,_cef ,0644);_bgb !=nil {return false ,_bgb ;};return true ,nil ;};var (ErrRenderNotSupported =_ac .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");
ErrImageSizeNotMatch =_ac .New ("\u0069\u006d\u0061ge\u0020\u0073\u0069\u007a\u0065\u0073\u0020\u0064\u006f\u006e\u0027\u0074\u0020\u006d\u0061\u0074\u0063\u0068"););func _eaf (_cg *_cc .T ,_bge ,_gcfb []byte ){_gae :=_cde ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064");
_eg .WriteFile (_gae ,_bge ,0644);_cae :=_cde ("\u0067\u006f\u0074");_eg .WriteFile (_cae ,_gcfb ,0644);defer func (){_eg .Remove (_gae );_eg .Remove (_cae )}();_egb (_gae );_egb (_cae );_ba :=_bf .Command ("\u0064\u0069\u0066\u0066","\u002d\u0075",_gae ,_cae );
_cec ,_eba :=_ba .StdoutPipe ();if _eba !=nil {_cg .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0072u\u006e\u006e\u0069\u006e\u0067\u0020\u0078\u006d\u006ci\u006e\u0064\u0065n\u0074:\u0020\u0025\u0073",_eba );};defer _cec .Close ();_cee ,_eba :=_ba .StderrPipe ();
if _eba !=nil {_cg .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0072u\u006e\u006e\u0069\u006e\u0067\u0020\u0078\u006d\u006ci\u006e\u0064\u0065n\u0074:\u0020\u0025\u0073",_eba );};defer _cee .Close ();if _df :=_ba .Start ();_df !=nil {_cg .Fatalf ("\u0065\u0072\u0072\u006f\u0072\u0020\u0073\u0074\u0072\u0069\u006eg\u0020\u0078\u006d\u006c\u0069\u006e\u0064\u0065\u006e\u0074:\u0020\u0025\u0073",_df );
};_fe :=_fb .NewScanner (_cec );for _fe .Scan (){_fde .Println (_fe .Text ());};if _cbg :=_ba .Wait ();_cbg !=nil {_aa ,_ :=_gd .ReadAll (_cee );_cg .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0077a\u0069\u0074\u0069\u006e\u0067\u0020o\u006e\u0020\u0078\u006d\u006c\u0069\u006ed\u0065\u006e\u0074\u003a\u0020\u0025\u0073\u0020\u005b\u0025s\u005d",string (_aa ),_cbg );
};};func _aag (_dfd *_f .RGBA ,_feef string ,_cge string ,_daf ,_ccgf int )error {_dbfe ,_ade :=_ec .ReadFile (_feef );if _ade !=nil {return _ade ;};_bed ,_ade :=_bd .Parse (_dbfe );if _ade !=nil {return _ade ;};_ggca ,_ade :=_bd .NewFace (_bed ,&_bd .FaceOptions {Size :18,DPI :72,Hinting :_ca .HintingNone });
if _ade !=nil {return _ade ;};_aebb :=&_ca .Drawer {Dst :_dfd ,Src :_f .NewUniform (_ef .RGBA {200,100,0,255}),Face :_ggca ,Dot :_fg .P (_daf ,_ccgf )};_aebb .DrawString (_cge );return nil ;};func ReadPNG (file string )(_f .Image ,error ){_ebc ,_ff :=_eg .Open (file );
if _ff !=nil {return nil ,_ff ;};defer _ebc .Close ();return _gc .Decode (_ebc );};func (_dbf *ReferenceFile )Update (currentMap *ReferenceMap )error {if _dbf ._dgf ==""{return nil ;};_fac :=_dbf .updateMap (currentMap );if _fac ==0{return nil ;};_ebfe ,_cbc :=_eg .OpenFile (_dbf ._dgf ,_eg .O_CREATE |_eg .O_TRUNC |_eg .O_WRONLY ,0664);
if _cbc !=nil {return _cbc ;};defer _ebfe .Close ();_dbf .Timestamp =_fa .Now ().UTC ();_adb :=_egf .NewEncoder (_ebfe );_adb .SetIndent ("","\u0009");return _adb .Encode (_dbf );};func _cdf (_bgaf ,_fec string )error {_gba ,_fdc :=_eg .Open (_bgaf );if _fdc !=nil {return _fdc ;
};defer _gba .Close ();_bec ,_ ,_fdc :=_f .DecodeConfig (_gba );if _fdc !=nil {panic (_fdc );};_gabc :=_f .NewRGBA (_f .Rect (0,0,_bec .Width ,_bec .Height ));_cgg ,_fdc :=_eg .Create (_fec );if _fdc !=nil {return _fdc ;};defer _cgg .Close ();_fdc =_gc .Encode (_cgg ,_gabc );
if _fdc !=nil {return _fdc ;};return nil ;};type ReferenceEntry struct{Timestamp int64 `json:"timestamp"`;Value string `json:"value"`;ResultSize int64 `json:"resultSize,omitempty"`;DiffPercent float64 `json:"diffPercent,omitempty"`;DiffTotal float64 `json:"diffValue,omitempty"`;
Invalid bool `json:"markedInvalid,omitempty"`;};func HashFile (file string )(string ,error ){_cce ,_gbca :=_eg .Open (file );if _gbca !=nil {return "",_gbca ;};defer _cce .Close ();_dgb :=_gg .New ();if _ ,_gbca =_gd .Copy (_dgb ,_cce );_gbca !=nil {return "",_gbca ;
};return _bfg .EncodeToString (_dgb .Sum (nil )),nil ;};func CreatePNGDiff (src ,dst string )(bool ,string ,float64 ,float64 ,error ){_bbd ,_edd :=ReadPNG (src );if _edd !=nil {return false ,"",0,0,_edd ;};_acge ,_edd :=ReadPNG (dst );if _edd !=nil {return false ,"",0,0,_edd ;
};_ebad :=_bbd .Bounds ();_dbcb :=_acge .Bounds ();if !_cea (_ebad ,_dbcb ){if _c .Abs (float64 (_ebad .Max .X )-float64 (_dbcb .Max .X ))> 1{_fde .Printf ("S\u006f\u0075\u0072\u0063\u0065\u0020b\u006f\u0075\u006e\u0064\u0073\u003a \u0025\u0076\u003b\u0020\u0044\u0065\u0073t\u0020\u0062\u006f\u0075\u006e\u0064\u0073\u003a\u0020\u0025v\u000a",_ebad ,_dbcb );
return false ,"",0,0,ErrImageSizeNotMatch ;};};_da :=_f .NewRGBA (_f .Rect (0,0,_ebad .Max .X ,_ebad .Max .Y ));var (_fbf float64 ;_gab float64 ;);for _bea :=_ebad .Min .Y ;_bea < _ebad .Max .Y ;_bea ++{for _bbe :=_ebad .Min .X ;_bbe < _ebad .Max .X ;_bbe ++{_aaa ,_bcc ,_fba ,_gbe :=_bbd .At (_bbe ,_bea ).RGBA ();
_aaaa ,_bag ,_abg ,_gge :=_acge .At (_bbe ,_bea ).RGBA ();_da .Set (_bbe ,_bea ,_ef .RGBA {uint8 (_aaaa ),uint8 (_bag ),uint8 (_abg ),64});_dab :=_gbe ==0x00&&_aaa ==0x00&&_bcc ==0x00&&_fba ==0x00&&_aaaa ==0xFFFF&&_bag ==0xFFFF&&_abg ==0xFFFF;if !_dab &&!_afa (_bbd .At (_bbe ,_bea ),_acge .At (_bbe ,_bea )){_da .Set (_bbe ,_bea ,_ef .RGBA {uint8 (_aaa ),uint8 (_bcc ),uint8 (_fba ),uint8 (_gbe )});
_dfe :=float64 (_aaa )+float64 (_bcc )+float64 (_fba )+float64 (_gbe )-float64 (_aaaa )+float64 (_bag )+float64 (_abg )+float64 (_gge );_fee :=_c .Sqrt (_c .Pow (_dfe /float64 (_ebad .Dx ()*_ebad .Dy ()),2));_gab +=_fee ;_fbf ++;};};};_aeb :=_fbf /float64 (_ebad .Dx ()*_ebad .Dy ())*100;
_caa :=_b .Dir (src );_dfc :=_g .TrimSuffix (_b .Base (src ),_b .Ext (src ));_gaed ,_edd :=_eg .Create (_caa +"\u002f"+_dfc +"\u002dd\u0069\u0066\u0066\u002e\u0070\u006eg");if _edd !=nil {return false ,"",0,0,_edd ;};defer _gaed .Close ();_bbb :=_g .Replace (_caa ,"\u0072\u0065\u006e\u0064\u0065\u0072","\u0066\u006f\u006et\u0073",1)+"\u002f\u0043\u0061l\u0069\u0062\u0072\u0069\u002e\u0074\u0074\u0066";
_abe :=_gb .Sprintf ("\u0044\u0069f\u0066\u0065\u0072e\u006e\u0063\u0065\u003a\u0020\u0025\u0066\u0025\u0025",_aeb );_edd =_aag (_da ,_bbb ,_abe ,15,22);if _edd !=nil {return false ,"",0,0,_edd ;};_abe =_gb .Sprintf ("T\u006ft\u0061\u006c\u0020\u0044\u0069\u0066\u0066\u0065r\u0065\u006e\u0063\u0065: \u0025\u0066",_gab );
_edd =_aag (_da ,_bbb ,_abe ,15,44);if _edd !=nil {return false ,"",0,0,_edd ;};if _ffe :=_gc .Encode (_gaed ,_da );_ffe !=nil {return false ,"",0,0,_ffe ;};return true ,_gaed .Name (),_aeb ,_gab ,nil ;};func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;
};if _ ,_cac :=_bf .LookPath ("\u0067\u0073");_cac !=nil {return ErrRenderNotSupported ;};return _bf .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_gb .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();
};func _afa (_gcdb ,_fgg _ef .Color )bool {_cdd ,_bdc ,_aaaab ,_faa :=_gcdb .RGBA ();_fad ,_fce ,_gdg ,_ccg :=_fgg .RGBA ();return _cdd ==_fad &&_bdc ==_fce &&_aaaab ==_gdg &&_faa ==_ccg ;};func (_cgd *ReferenceMap )Read (key string )(ReferenceEntry ,bool ){_cgd .Lock ();
defer _cgd .Unlock ();if _cgd ._fgb ==nil {return ReferenceEntry {},false ;};_ggg ,_fcb :=_cgd ._fgb [key ];return _ggg ,_fcb ;};func (_fdf *ReferenceMap )Copy ()*ReferenceMap {_cbga :=ReferenceMap {_fgb :make (map[string ]ReferenceEntry ,len (_fdf ._fgb ))};
for _gafg ,_gbd :=range _fdf ._fgb {_cbga ._fgb [_gafg ]=_gbd ;};return &_cbga ;};func _cfa (_gbag *_cc .T ,_cdeb string )int64 {_cfff ,_cffb :=_eg .Stat (_cdeb );_ee .NoError (_gbag ,_cffb );return _cfff .Size ();};func RunRenderTest (t *_cc .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ){RunRenderOfficeTest (t ,pdfPath ,outputDir ,baselineRenderPath ,saveBaseline ,currentHashMap ,refFile ,"\u002em\u0073\u0077\u006f\u0072\u0064");
};func CompareImages (img1 ,img2 _f .Image )(bool ,error ){_bab :=img1 .Bounds ();_cgc :=0;for _eeed :=0;_eeed < _bab .Size ().X ;_eeed ++{for _eeb :=0;_eeb < _bab .Size ().Y ;_eeb ++{_bfgb ,_aff ,_ggf ,_ :=img1 .At (_eeed ,_eeb ).RGBA ();_acg ,_fcg ,_dgc ,_ :=img2 .At (_eeed ,_eeb ).RGBA ();
if _bfgb !=_acg ||_aff !=_fcg ||_ggf !=_dgc {_cgc ++;};};};_gf :=float64 (_cgc )/float64 (_bab .Dx ()*_bab .Dy ());if _gf > 0.0001{_gb .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_gf ,_cgc );
return false ,nil ;};return true ,nil ;};func _cde (_af string )string {_fdba ,_ :=_eg .CreateTemp ("",_af );defer _fdba .Close ();return _fdba .Name ();};