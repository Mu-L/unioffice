//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_c "archive/zip";_gb "bufio";_fb "bytes";_de "crypto/md5";_ga "encoding/hex";_ad "encoding/json";_dgb "encoding/xml";_eg "errors";_af "flag";_ee "fmt";_ff "github.com/stretchr/testify/require";_ce "github.com/unidoc/unioffice/v2";
_ca "github.com/unidoc/unipdf/v4/common";_fc "golang.org/x/image/font";_df "golang.org/x/image/font/opentype";_bbe "golang.org/x/image/math/fixed";_dd "image";_f "image/color";_bb "image/draw";_e "image/png";_dc "io";_g "io/ioutil";_eb "log";_bc "math";
_dg "os";_gc "os/exec";_a "path/filepath";_d "strings";_bcb "sync";_be "testing";_fa "time";);var (ErrRenderNotSupported =_eg .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");
ErrImageSizeNotMatch =_eg .New ("\u0069\u006d\u0061ge\u0020\u0073\u0069\u007a\u0065\u0073\u0020\u0064\u006f\u006e\u0027\u0074\u0020\u006d\u0061\u0074\u0063\u0068"););func _ced (_gfea string )error {_cf :=_ce .XSDAny {};_gbg ,_age :=_dg .Open (_gfea );if _age !=nil {return _age ;
};_dbe :=_dgb .NewDecoder (_gbg );if _age =_dbe .Decode (&_cf );_age !=nil {return _age ;};_gbg .Close ();_gbg ,_age =_dg .Create (_gfea );if _age !=nil {return _age ;};defer _gbg .Close ();_ab :=_dgb .NewEncoder (_gbg );_ab .Indent ("","\u0020\u0020");
return _ab .Encode (&_cf );};func CompareGoldenZipFilesOnly (t *_be .T ,expectedFn string ,got []byte ){_db :=_a .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );if *_fff {if _fg :=_dg .WriteFile (_db ,got ,0644);_fg !=nil {t .Fatal (_fg );
};};CompareZip (t ,expectedFn ,got ,false );};func RunRenderOfficeTest (t *_be .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ,postfix string ){_ggfc :=_d .TrimSuffix (_a .Base (pdfPath ),_a .Ext (pdfPath ));
t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_gdb *_be .T ){_bfcb :=_a .Join (outputDir ,_ggfc );_facb :=_bfcb +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _agea :=RenderPDFToPNGs (pdfPath ,0,_facb );_agea !=nil {_gdb .Skip (_agea );};_ccb :=_ggfc +postfix ;
_cfc :=_a .Join (outputDir ,_ccb );_gcb :=_cfc +"\u002d%\u0064\u002e\u0070\u006e\u0067";_fbc :=false ;if saveBaseline {_aag :=_a .Dir (pdfPath );_ddaad :=_a .Join (_aag ,_ccb +"\u002e\u0070\u0064\u0066");if _ ,_aefe :=_dg .Stat (_ddaad );_aefe ==nil {_gdb .Logf ("\u0052e\u006e\u0064\u0065\u0072\u0020\u004d\u0053\u0020\u004f\u0066\u0066i\u0063\u0065\u0020\u0050\u0044\u0046\u003a\u0020\u0025\u0076",_ddaad );
if _dffdg :=RenderPDFToPNGs (_ddaad ,0,_gcb );_dffdg !=nil {_gdb .Skip (_dffdg );};_fbc =true ;};};for _badf :=1;true ;_badf ++{_dgc :=_ee .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_bfcb ,_badf );_gga :=_a .Join (baselineRenderPath ,_ee .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_ggfc ,_badf ));
if _ ,_beaf :=_dg .Stat (_dgc );_beaf !=nil {break ;};_gdb .Logf ("\u0025\u0073",_gga );if saveBaseline {_gdb .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_dgc ,_gga );_gbb :=CopyFile (_dgc ,_gga );if _gbb !=nil {_gdb .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gga ,_gbb );
};if _fbc {_dge :=_ee .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_cfc ,_badf );_bbbg :=_a .Join (baselineRenderPath ,_ee .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_ccb ,_badf ));_gdb .Logf ("\u0043\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u004d\u0053\u0020\u0057\u006f\u0072\u0064 \u0072e\u0073\u0075\u006c\u0074\u0073\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_dge ,_bbbg );
_aeff :=CopyFile (_dge ,_bbbg );if _aeff !=nil {_gdb .Logf ("\u0045\u0052\u0052\u004f\u0052\u0020\u0063\u006f\u0070\u0079\u0069\u006eg\u0020\u0074\u006f \u0025\u0073\u003a\u0020\u0025\u0076\u002c\u0020\u0068\u0061\u0076i\u006e\u0067\u0020d\u0069\u0066\u0066\u0065r\u0065\u006e\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u002c\u0020\u0072\u0065\u0070\u006c\u0061\u0063\u0069\u006eg\u0020\u0069\u0074\u0020\u0077\u0069\u0074\u0068\u0020\u0062\u006ca\u006e\u006b\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064",_bbbg ,_aeff );
if _eea :=_fce (_gga ,_bbbg );_eea !=nil {_gdb .Fatalf ("\u0045\u0052\u0052\u004f\u0052\u0020c\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0065\u006d\u0070\u0074\u0079 \u0069\u006d\u0061\u0067\u0065\u0020\u0025s\u003a\u0020\u0025\u0076",_bbbg ,_eea );
};};_gdb .Logf ("\u0043\u006fm\u0062\u0069\u006e\u0069\u006eg\u0020\u0055\u006e\u0069\u004ff\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_gga ,_bbbg );
_cec ,_aeff :=CombinePNGFiles (_gga ,_bbbg );if _dg .IsNotExist (_aeff ){_gdb .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_cec {_gdb .Fatal ("\u0055n\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0063\u006f\u006db\u0069\u006e\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0073");
};_gdb .Logf ("\u0043\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0064\u0069\u0066f \u0055n\u0069\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075l\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065 \u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_gga ,_bbbg );
_cec ,_ccgea ,_cdgg ,_dgea ,_aeff :=CreatePNGDiff (_gga ,_bbbg );if _aeff !=nil &&_eg .Is (_aeff ,ErrImageSizeNotMatch ){_gdb .Fatalf ("\u0045\u0072\u0072\u006fr\u0020\u006f\u006e\u0020\u0063\u0072\u0065\u0061\u0074\u0065 \u0050N\u0047\u0020\u0044\u0069\u0066\u0066\u003a \u0025\u0076",_aeff );
};if _cec {_gdb .Logf ("\u0049\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073\u000a",_ccgea );_gdb .Logf ("D\u0069\u0066\u0066\u0020Pe\u0072c\u0065\u006e\u0074\u003a\u0020%\u0032\u002e\u0066\u0025\u0025\u000a",_cdgg );_gdb .Logf ("\u0044i\u0066f\u0020\u0054\u006f\u0074\u0061\u006c\u003a\u0020\u0025\u0066\u000a",_dgea );
_eceg :=_a .Base (_ccgea );_efa ,_caf :=currentHashMap .Read (_eceg );if _caf &&(_efa .DiffPercent < _cdgg ||_efa .DiffTotal < _dgea ){_gdb .Logf ("\u004e\u0065\u0077\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0068\u0061\u0076\u0069\u006e\u0067 h\u0069g\u0068\u0065\u0072\u0020\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u003a\u0020\u0025\u0066\u0020\u0061\u006e\u0064 \u0074\u006f\u0074\u0061\u006c\u0020\u0025\u0066\u000a",_cdgg ,_dgea );
};_aefc ,_acad :=HashFile (_ccgea );_ff .NoError (_gdb ,_acad );_bbbb :=_fagf (_gdb ,_ccgea );if !_caf ||_efa .Value !=_aefc ||_efa .ResultSize !=_bbbb ||_efa .DiffPercent !=_cdgg ||_efa .DiffTotal !=_dgea {_bbbf :=ReferenceEntry {Timestamp :_fa .Now ().UTC ().Unix (),Value :_aefc ,ResultSize :_bbbb ,DiffPercent :_cdgg ,DiffTotal :_dgea };
currentHashMap .Write (_eceg ,_bbbf );if _acad =refFile .Update (currentHashMap );_acad !=nil {_gdb .Logf ("\u0055\u0070\u0064\u0061\u0074\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0020f\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_acad );
};};};};continue ;};_gdb .Run (_ee .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_badf ),func (_efe *_be .T ){_efe .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_dgc ,_gga );_bfda ,_bfa :=ComparePNGFiles (_dgc ,_gga );
if _dg .IsNotExist (_bfa ){_efe .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_bfda {_efe .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");
};});};});};func _fce (_ebc ,_cbb string )error {_cabe ,_cfde :=_dg .Open (_ebc );if _cfde !=nil {return _cfde ;};defer _cabe .Close ();_fag ,_ ,_cfde :=_dd .DecodeConfig (_cabe );if _cfde !=nil {panic (_cfde );};_bafb :=_dd .NewRGBA (_dd .Rect (0,0,_fag .Width ,_fag .Height ));
_bdf ,_cfde :=_dg .Create (_cbb );if _cfde !=nil {return _cfde ;};defer _bdf .Close ();_cfde =_e .Encode (_bdf ,_bafb );if _cfde !=nil {return _cfde ;};return nil ;};func (_add *ReferenceMap )Copy ()*ReferenceMap {_bgc :=ReferenceMap {_dda :make (map[string ]ReferenceEntry ,len (_add ._dda ))};
for _gdag ,_bge :=range _add ._dda {_bgc ._dda [_gdag ]=_bge ;};return &_bgc ;};func (_feb *ReferenceMap )Keys ()(_cbg []string ){_cbg =make ([]string ,len (_feb ._dda ));var _ede int ;for _bce :=range _feb ._dda {_cbg [_ede ]=_bce ;_ede ++;};return _cbg ;
};var _fff =_af .Bool ("t\u0065\u0073\u0074\u002e\u0075\u0070\u0064\u0061\u0074\u0065",false ,"\u0075p\u0064a\u0074\u0065\u0020\u0067\u006fl\u0064\u0065n\u0020\u0066\u0069\u006c\u0065");func _fagf (_ecg *_be .T ,_dcbb string )int64 {_daf ,_ffca :=_dg .Stat (_dcbb );
_ff .NoError (_ecg ,_ffca );return _daf .Size ();};func CompareImages (img1 ,img2 _dd .Image )(bool ,error ){_ge :=img1 .Bounds ();_cad :=0;for _baed :=0;_baed < _ge .Size ().X ;_baed ++{for _ddac :=0;_ddac < _ge .Size ().Y ;_ddac ++{_aab ,_afe ,_bga ,_ :=img1 .At (_baed ,_ddac ).RGBA ();
_ccgb ,_cbeb ,_agdg ,_ :=img2 .At (_baed ,_ddac ).RGBA ();if _aab !=_ccgb ||_afe !=_cbeb ||_bga !=_agdg {_cad ++;};};};_gce :=float64 (_cad )/float64 (_ge .Dx ()*_ge .Dy ());if _gce > 0.0001{_ee .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_gce ,_cad );
return false ,nil ;};return true ,nil ;};func (_gcc *ReferenceMap )Read (key string )(ReferenceEntry ,bool ){_gcc .Lock ();defer _gcc .Unlock ();if _gcc ._dda ==nil {return ReferenceEntry {},false ;};_edgb ,_fad :=_gcc ._dda [key ];return _edgb ,_fad ;
};func (_fbe *ReferenceMap )MarshalJSON ()([]byte ,error ){return _ad .Marshal (_fbe ._dda )};func (_gda *ReferenceFile )Update (currentMap *ReferenceMap )error {if _gda ._baf ==""{return nil ;};_beaa :=_gda .updateMap (currentMap );if _beaa ==0{return nil ;
};_egb ,_ageg :=_dg .OpenFile (_gda ._baf ,_dg .O_CREATE |_dg .O_TRUNC |_dg .O_WRONLY ,0664);if _ageg !=nil {return _ageg ;};defer _egb .Close ();_gda .Timestamp =_fa .Now ().UTC ();_def :=_ad .NewEncoder (_egb );_def .SetIndent ("","\u0009");return _def .Encode (_gda );
};func _fcd (_cbef ,_eceb _f .Color )bool {_bggf ,_eabf ,_aff ,_bfc :=_cbef .RGBA ();_eaae ,_dea ,_cdg ,_bda :=_eceb .RGBA ();return _bggf ==_eaae &&_eabf ==_dea &&_aff ==_cdg &&_bfc ==_bda ;};func CombinePNGFiles (file1 ,file2 string )(bool ,error ){_cgf ,_gec :=ReadPNG (file1 );
if _gec !=nil {return false ,_gec ;};_ef ,_gec :=ReadPNG (file2 );if _gec !=nil {return false ,_gec ;};_fec :=_dd .Point {_cgf .Bounds ().Dx (),0};_dca :=_dd .Rectangle {_fec ,_fec .Add (_ef .Bounds ().Size ())};_cd :=_dd .Rectangle {_dd .Point {0,0},_dca .Max };
_ccfa :=_dd .NewRGBA (_cd );_bb .Draw (_ccfa ,_cgf .Bounds (),_cgf ,_dd .Point {0,0},_bb .Src );_bb .Draw (_ccfa ,_dca ,_ef ,_dd .Point {0,0},_bb .Src );_eae :=_a .Dir (file1 );_cba :=_d .TrimSuffix (_a .Base (file1 ),_a .Ext (file1 ));_ddc ,_gec :=_dg .Create (_eae +"\u002f"+_cba +"\u002d\u0063\u006f\u006d\u0062\u0069\u006e\u0065\u0064\u002e\u0070\u006e\u0067");
if _gec !=nil {return false ,_gec ;};defer _ddc .Close ();if _ggd :=_e .Encode (_ddc ,_ccfa );_ggd !=nil {return false ,_ggd ;};return true ,nil ;};func _ag (_dfg ,_dec *_c .Reader ,_dff bool )func (_ed *_be .T ){return func (_cab *_be .T ){_ae :=make ([]*_c .File ,len (_dfg .File ));
copy (_ae ,_dfg .File );_fd :=make ([]*_c .File ,len (_dec .File ));copy (_fd ,_dec .File );if len (_ae )!=len (_fd ){_cab .Errorf ("\u0065x\u0070\u0065\u0063\u0074e\u0064\u0020\u0025\u0064\u0020f\u0069l\u0065s\u002c\u0020\u0067\u006f\u0074\u0020\u0025d",len (_dfg .File ),len (_dec .File ));
};for _ebf ,_bag :=range _ae {for _ec ,_edg :=range _fd {if _edg ==nil {continue ;};if _bag .Name ==_edg .Name {if _dff {_cab .Run (_bag .Name ,_gbf (_bag ,_edg ));};_ae [_ebf ]=nil ;_fd [_ec ]=nil ;};};};for _ ,_aef :=range _ae {if _aef !=nil {_cab .Errorf ("\u0064\u0069\u0064\u006e\u0027\u0074\u0020\u0066\u0069\u006ed\u0020\u0065\u0078\u0070\u0065\u0063\u0074e\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0027\u0025\u0073\u0027",_aef .Name );
};};for _ ,_cg :=range _fd {if _cg !=nil {_cab .Errorf ("\u0066\u006f\u0075\u006e\u0064\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020'\u0025\u0073\u0027",_cg .Name );};};};};func CreatePNGDiff (src ,dst string )(bool ,string ,float64 ,float64 ,error ){_eff ,_bffc :=ReadPNG (src );
if _bffc !=nil {return false ,"",0,0,_bffc ;};_bfb ,_bffc :=ReadPNG (dst );if _bffc !=nil {return false ,"",0,0,_bffc ;};_egda :=_eff .Bounds ();_ddaa :=_bfb .Bounds ();if !_abb (_egda ,_ddaa ){if _bc .Abs (float64 (_egda .Max .X )-float64 (_ddaa .Max .X ))> 1{_eb .Printf ("S\u006f\u0075\u0072\u0063\u0065\u0020b\u006f\u0075\u006e\u0064\u0073\u003a \u0025\u0076\u003b\u0020\u0044\u0065\u0073t\u0020\u0062\u006f\u0075\u006e\u0064\u0073\u003a\u0020\u0025v\u000a",_egda ,_ddaa );
return false ,"",0,0,ErrImageSizeNotMatch ;};};_aca :=_dd .NewRGBA (_dd .Rect (0,0,_egda .Max .X ,_egda .Max .Y ));var (_ebd float64 ;_eee float64 ;);for _beca :=_egda .Min .Y ;_beca < _egda .Max .Y ;_beca ++{for _ccfb :=_egda .Min .X ;_ccfb < _egda .Max .X ;
_ccfb ++{_dggc ,_dbb ,_dcd ,_cbgg :=_eff .At (_ccfb ,_beca ).RGBA ();_acg ,_ecf ,_cga ,_dbbf :=_bfb .At (_ccfb ,_beca ).RGBA ();_aca .Set (_ccfb ,_beca ,_f .RGBA {uint8 (_acg ),uint8 (_ecf ),uint8 (_cga ),64});_bfff :=_cbgg ==0x00&&_dggc ==0x00&&_dbb ==0x00&&_dcd ==0x00&&_acg ==0xFFFF&&_ecf ==0xFFFF&&_cga ==0xFFFF;
if !_bfff &&!_fcd (_eff .At (_ccfb ,_beca ),_bfb .At (_ccfb ,_beca )){_aca .Set (_ccfb ,_beca ,_f .RGBA {uint8 (_dggc ),uint8 (_dbb ),uint8 (_dcd ),uint8 (_cbgg )});_facc :=float64 (_dggc )+float64 (_dbb )+float64 (_dcd )+float64 (_cbgg )-float64 (_acg )+float64 (_ecf )+float64 (_cga )+float64 (_dbbf );
_ddd :=_bc .Sqrt (_bc .Pow (_facc /float64 (_egda .Dx ()*_egda .Dy ()),2));_eee +=_ddd ;_ebd ++;};};};_bgcg :=_ebd /float64 (_egda .Dx ()*_egda .Dy ())*100;_efb :=_a .Dir (src );_ffe :=_d .TrimSuffix (_a .Base (src ),_a .Ext (src ));_bfg ,_bffc :=_dg .Create (_efb +"\u002f"+_ffe +"\u002dd\u0069\u0066\u0066\u002e\u0070\u006eg");
if _bffc !=nil {return false ,"",0,0,_bffc ;};defer _bfg .Close ();_cbga :=_d .Replace (_efb ,"\u0072\u0065\u006e\u0064\u0065\u0072","\u0066\u006f\u006et\u0073",1)+"\u002f\u0043\u0061l\u0069\u0062\u0072\u0069\u002e\u0074\u0074\u0066";_cef :=_ee .Sprintf ("\u0044\u0069f\u0066\u0065\u0072e\u006e\u0063\u0065\u003a\u0020\u0025\u0066\u0025\u0025",_bgcg );
_bffc =_debg (_aca ,_cbga ,_cef ,15,22);if _bffc !=nil {return false ,"",0,0,_bffc ;};_cef =_ee .Sprintf ("T\u006ft\u0061\u006c\u0020\u0044\u0069\u0066\u0066\u0065r\u0065\u006e\u0063\u0065: \u0025\u0066",_eee );_bffc =_debg (_aca ,_cbga ,_cef ,15,44);if _bffc !=nil {return false ,"",0,0,_bffc ;
};if _gbd :=_e .Encode (_bfg ,_aca );_gbd !=nil {return false ,"",0,0,_gbd ;};return true ,_bfg .Name (),_bgcg ,_eee ,nil ;};func ValidateDocument (file string )(bool ,error ){var (_cdb string =_dg .Getenv ("\u0050\u0052\u004fJ\u0045\u0043\u0054\u005f\u0052\u004f\u004f\u0054");
_aaa string =_dg .Getenv ("\u0048\u004f\u004d\u0045")+"\u002f\u0064\u006f\u0074\u006e\u0065\u0074\u002f\u0064o\u0074\u006e\u0065\u0074";_affa string =_cdb +"\u002f\u002e\u0063\u0069\u002f\u006f\u0070\u0065\u006e\u0078\u006dl\u002d\u0076\u0061\u006c\u0069\u0064\u0061\u0074o\u0072/\u0062\u0069\u006e\u002f\u0052\u0065\u006c\u0065\u0061\u0073\u0065\u002f\u006e\u0065\u0074\u0038\u002e\u0030/\u0050\u0072\u006f\u0067\u0072\u0061\u006d\u002e\u0064\u006c\u006c";
_bbac string =_cdb +"\u002f\u0069\u006et\u0065\u0072\u006e\u0061\u006c\u002f\u0074\u0065\u0073\u0074\u0075\u0074\u0069\u006c\u0073\u002f\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u005f\u0072\u0065s\u0075\u006c\u0074\u002e\u006a\u0073\u006f\u006e";
_ffce _fb .Buffer ;_gaf string ;_gaff bool =true ;);if _ ,_bdd :=_dg .Stat (_aaa );_bdd !=nil {_ca .Log .Debug ("\u0064\u006f\u0074\u006e\u0065\u0074 \u0065\u0078\u0065\u0063\u0075\u0074\u0061\u0062\u006c\u0065\u0020\u006e\u006ft\u0020\u0066\u006f\u0075\u006e\u0064\u0020i\u006e\u0020\u0025\u0073",_aaa );
return true ,nil ;};if _ ,_acc :=_dg .Stat (_affa );_acc !=nil {_ca .Log .Debug ("\u006f\u0070\u0065\u006e\u0078\u006dl\u002d\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u006f\u0072\u0020\u006e\u006ft\u0020\u0066\u006f\u0075\u006e\u0064\u0020i\u006e\u0020\u0025\u0073",_affa );
return true ,nil ;};var (_bgfd map[string ]map[string ]*ValidationResult ;_debf *ValidationResult ;);_dbfc ,_fgf :=_dg .ReadFile (_bbac );if _fgf !=nil {return false ,_fgf ;};if _efd :=_ad .Unmarshal (_dbfc ,&_bgfd );_efd !=nil {return false ,_efd ;};if _bgfd ==nil {_bgfd =make (map[string ]map[string ]*ValidationResult );
};_gfb :=_a .Ext (file );_gfb =_gfb [1:];if _gfb !="\u0064\u006f\u0063\u0078"&&_gfb !="\u0078\u006c\u0073\u0078"&&_gfb !="\u0070\u0070\u0074\u0078"{return false ,_ee .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u0069\u006c\u0065\u0020\u0065x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_gfb );
};_ggc :=_a .Base (file );if _bde ,_bdee :=_bgfd [_gfb ];_bdee {if _dafc ,_ebg :=_bde [_ggc ];_ebg {_debf =_dafc ;};};_ebda :=_gc .Command (_aaa ,_affa ,"\u002d\u002d"+_gfb ,file );_ebda .Stderr =&_ffce ;_caa ,_fgf :=_ebda .Output ();if _fgf !=nil {_gaf =_ffce .String ();
};_cbd :=string (_caa );_cbd =_d .TrimSpace (_cbd [_d .Index (_cbd ,"\u000a")+1:]);if _d .Contains (_cbd ,"\u0045x\u0063\u0065\u0070\u0074\u0069\u006fn")||_d .Contains (_cbd ,"\u0069\u0073\u0020n\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064"){_gaff =false ;
if _d .Contains (_cbd ,"\u006da\u0069\u006e\u003a\u0073\u007a")||_d .Contains (_cbd ,"m\u0061\u0069\u006e\u003a\u0066\u0061\u006d\u0069\u006c\u0079")||_d .Contains (_cbd ,"\u0063h\u0061\u0072\u0074\u003a\u0065\u0078t"){_gaf ="\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0076\u0061\u006ci\u0064\u0061\u0074\u0069\u006f\u006e\u0020i\u0073\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u003a\u0020"+_cbd ;
_gaff =true ;};};if _gaf ==""{_gaf =_cbd ;};if _debf ==nil {_debf =&ValidationResult {File :_ggc ,Result :_gaff ,Note :_gaf };};_debf .Result =_gaff ;_debf .Note =_gaf ;if _bgfd [_gfb ]==nil {_bgfd [_gfb ]=make (map[string ]*ValidationResult );};if _gcae ,_cbea :=_bgfd [_gfb ][_ggc ];
_cbea {if _gcae .Result &&!_gaff {return false ,_ee .Errorf ("V\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e \u0072\u0065\u0073\u0075\u006c\u0074\u0020ch\u0061\u006e\u0067\u0065d\u0020\u0066\u006f\u0072\u0020\u0025\u0073\u003a\u0020%v\u0020\u002d>\u0020\u0025\u0076\u0020\u0028\u0025\u0073\u0029",file ,_gcae .Result ,_gaff ,_gaf );
};};_bgfd [_gfb ][_ggc ]=_debf ;_dbfc ,_fgf =_ad .MarshalIndent (_bgfd ,"","\u0020\u0020");if _fgf !=nil {return false ,_fgf ;};if _ffae :=_dg .WriteFile (_bbac ,_dbfc ,0644);_ffae !=nil {return false ,_ffae ;};return true ,nil ;};func (_fde *ReferenceMap )Write (key string ,entry ReferenceEntry ){_fde .Lock ();
defer _fde .Unlock ();if _fde ._dda ==nil {_fde ._dda =map[string ]ReferenceEntry {};};_fde ._dda [key ]=entry ;};func _abb (_aee ,_gdae _dd .Rectangle )bool {return _aee .Min .X ==_gdae .Min .X &&_aee .Min .Y ==_gdae .Min .Y &&_aee .Max .X ==_gdae .Max .X &&_aee .Max .Y ==_gdae .Max .Y ;
};type ReferenceFile struct{Timestamp _fa .Time `json:"timestamp"`;Map *ReferenceMap `json:"map,omitempty"`;_baf string ;};func RunRenderTest (t *_be .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ){RunRenderOfficeTest (t ,pdfPath ,outputDir ,baselineRenderPath ,saveBaseline ,currentHashMap ,refFile ,"\u002em\u0073\u0077\u006f\u0072\u0064");
};func _ccg (_gg string )string {_gfe ,_ :=_dg .CreateTemp ("",_gg );defer _gfe .Close ();return _gfe .Name ();};type ReferenceMap struct{_bcb .Mutex ;_dda map[string ]ReferenceEntry ;};func HashFile (file string )(string ,error ){_cfd ,_aeg :=_dg .Open (file );
if _aeg !=nil {return "",_aeg ;};defer _cfd .Close ();_gdf :=_de .New ();if _ ,_aeg =_dc .Copy (_gdf ,_cfd );_aeg !=nil {return "",_aeg ;};return _ga .EncodeToString (_gdf .Sum (nil )),nil ;};func (_cbe *ReferenceMap )UnmarshalJSON (data []byte )error {return _ad .Unmarshal (data ,&_cbe ._dda )};
func (_bcbf *ReferenceFile )updateMap (_bcg *ReferenceMap )int {var _ccf int ;if _bcbf .Map ._dda ==nil {_bcbf .Map ._dda =map[string ]ReferenceEntry {};};for _aa ,_gbgg :=range _bcg ._dda {_bg ,_bcgc :=_bcbf .Map ._dda [_aa ];if !_bcgc {_bcbf .Map ._dda [_aa ]=_gbgg ;
_ccf ++;continue ;};if string (_bg .Value )!=string (_gbgg .Value ){_bcbf .Map ._dda [_aa ]=_gbgg ;_ccf ++;};};for _eag :=range _bcbf .Map ._dda {if _ ,_eaf :=_bcg ._dda [_eag ];!_eaf {delete (_bcbf .Map ._dda ,_eag );_ccf ++;};};return _ccf ;};type ReferenceEntry struct{Timestamp int64 `json:"timestamp"`;
Value string `json:"value"`;ResultSize int64 `json:"resultSize,omitempty"`;DiffPercent float64 `json:"diffPercent,omitempty"`;DiffTotal float64 `json:"diffValue,omitempty"`;Invalid bool `json:"markedInvalid,omitempty"`;};func (_fdb *ReferenceMap )Len ()int {return len (_fdb ._dda )};
func ReadPNG (file string )(_dd .Image ,error ){_dffd ,_bee :=_dg .Open (file );if _bee !=nil {return nil ,_bee ;};defer _dffd .Close ();return _e .Decode (_dffd );};func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;
};if _ ,_ggf :=_gc .LookPath ("\u0067\u0073");_ggf !=nil {return ErrRenderNotSupported ;};return _gc .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_ee .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();
};func ReadFile (dirPath ,testName string ,createEmpty bool )(*ReferenceFile ,error ){if dirPath ==""&&createEmpty {return &ReferenceFile {Map :&ReferenceMap {}},nil ;};if dirPath ==""{return nil ,_dg .ErrNotExist ;};_bbb :=_a .Join (dirPath ,testName +"\u005fr\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u002e\u006a\u0073\u006f\u006e");
_bgg :=&ReferenceFile {_baf :_bbb };_bcgf ,_bbed :=_dg .Open (_bbb );if _eg .Is (_bbed ,_dg .ErrNotExist )&&createEmpty {_bgg .Timestamp =_fa .Now ().UTC ();_bgg .Map =&ReferenceMap {};return _bgg ,nil ;};if _bbed !=nil {return nil ,_bbed ;};defer _bcgf .Close ();
if _bgf :=_ad .NewDecoder (_bcgf ).Decode (_bgg );_bgf !=nil {if _bgf .Error ()=="i\u006c\u006c\u0065\u0067\u0061\u006c \u0062\u0061\u0073\u0065\u0036\u0034 \u0064\u0061\u0074\u0061\u0020\u0061\u0074 \u0069\u006e\u0070\u0075\u0074\u0020\u0062\u0079\u0074\u0065 \u0030"&&createEmpty {return _bgg ,nil ;
};return nil ,_bgf ;};return _bgg ,nil ;};func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_eec ,_ac :=HashFile (file1 );if _ac !=nil {return false ,_ac ;};_ebfe ,_ac :=HashFile (file2 );if _ac !=nil {return false ,_ac ;};if _eec ==_ebfe {return true ,nil ;
};_ece ,_ac :=ReadPNG (file1 );if _ac !=nil {return false ,_ac ;};_dab ,_ac :=ReadPNG (file2 );if _ac !=nil {return false ,_ac ;};if _ece .Bounds ()!=_dab .Bounds (){return false ,nil ;};return CompareImages (_ece ,_dab );};func _da (_adb *_be .T ,_bfd ,_gca []byte ){_eaa :=_ccg ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064");
_dg .WriteFile (_eaa ,_bfd ,0644);_becg :=_ccg ("\u0067\u006f\u0074");_dg .WriteFile (_becg ,_gca ,0644);defer func (){_dg .Remove (_eaa );_dg .Remove (_becg )}();_ced (_eaa );_ced (_becg );_agf :=_gc .Command ("\u0064\u0069\u0066\u0066","\u002d\u0075",_eaa ,_becg );
_agfa ,_bba :=_agf .StdoutPipe ();if _bba !=nil {_adb .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0072u\u006e\u006e\u0069\u006e\u0067\u0020\u0078\u006d\u006ci\u006e\u0064\u0065n\u0074:\u0020\u0025\u0073",_bba );};defer _agfa .Close ();_bd ,_bba :=_agf .StderrPipe ();
if _bba !=nil {_adb .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0072u\u006e\u006e\u0069\u006e\u0067\u0020\u0078\u006d\u006ci\u006e\u0064\u0065n\u0074:\u0020\u0025\u0073",_bba );};defer _bd .Close ();if _fge :=_agf .Start ();_fge !=nil {_adb .Fatalf ("\u0065\u0072\u0072\u006f\u0072\u0020\u0073\u0074\u0072\u0069\u006eg\u0020\u0078\u006d\u006c\u0069\u006e\u0064\u0065\u006e\u0074:\u0020\u0025\u0073",_fge );
};_deb :=_gb .NewScanner (_agfa );for _deb .Scan (){_eb .Println (_deb .Text ());};if _bff :=_agf .Wait ();_bff !=nil {_afc ,_ :=_dc .ReadAll (_bd );_adb .Fatalf ("e\u0072\u0072\u006f\u0072\u0020\u0077a\u0069\u0074\u0069\u006e\u0067\u0020o\u006e\u0020\u0078\u006d\u006c\u0069\u006ed\u0065\u006e\u0074\u003a\u0020\u0025\u0073\u0020\u005b\u0025s\u005d",string (_afc ),_bff );
};};func CopyFile (src ,dst string )error {_edd ,_bdc :=_dg .Open (src );if _bdc !=nil {return _bdc ;};defer _edd .Close ();_eed ,_bdc :=_dg .Create (dst );if _bdc !=nil {return _bdc ;};defer _eed .Close ();_ ,_bdc =_dc .Copy (_eed ,_edd );return _bdc ;
};type ValidationResult struct{File string `json:"file"`;Result bool `json:"result"`;Note string `json:"note"`;};func _gbf (_bea ,_cb *_c .File )func (_ffa *_be .T ){return func (_bf *_be .T ){_dgg ,_ffac :=_bea .Open ();if _ffac !=nil {_bf .Errorf ("\u0065\u0072r\u006f\u0072\u0020o\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0025\u0073",_bea .Name );
};defer _dgg .Close ();_agd ,_ffac :=_cb .Open ();if _ffac !=nil {_bf .Errorf ("\u0065\u0072r\u006f\u0072\u0020o\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0025\u0073",_cb .Name );};defer _agd .Close ();_fef ,_ :=_dc .ReadAll (_dgg );_gd ,_ :=_dc .ReadAll (_agd );
if !_fb .Equal (_fef ,_gd ){_da (_bf ,_fef ,_gd );_ee .Println (string (_fef ));_ee .Println (string (_gd ));_bf .Errorf ("\u006d\u0069\u0073\u006da\u0074\u0063\u0068\u0065\u0064\u0020\u0063\u006f\u006e\u0074e\u006et\u0073\u0020\u0025\u0064\u0020\u0076\u0073 \u0025\u0064",len (_fef ),len (_gd ));
};};};func CompareGoldenZip (t *_be .T ,expectedFn string ,got []byte ){_fac :=_a .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );if *_fff {if _cc :=_dg .WriteFile (_fac ,got ,0644);_cc !=nil {t .Fatal (_cc );};};CompareZip (t ,expectedFn ,got ,true );
};func _debg (_gee *_dd .RGBA ,_dbf string ,_bad string ,_cdga ,_ccge int )error {_agc ,_agg :=_g .ReadFile (_dbf );if _agg !=nil {return _agg ;};_dbed ,_agg :=_df .Parse (_agc );if _agg !=nil {return _agg ;};_ddcg ,_agg :=_df .NewFace (_dbed ,&_df .FaceOptions {Size :18,DPI :72,Hinting :_fc .HintingNone });
if _agg !=nil {return _agg ;};_cfg :=&_fc .Drawer {Dst :_gee ,Src :_dd .NewUniform (_f .RGBA {200,100,0,255}),Face :_ddcg ,Dot :_bbe .P (_cdga ,_ccge )};_cfg .DrawString (_bad );return nil ;};func CompareZip (t *_be .T ,expectedFn string ,got []byte ,cmpFileContents bool ){_dfd :=_a .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );
_gf ,_gae :=_c .NewReader (_fb .NewReader (got ),int64 (len (got )));if _gae !=nil {t .Fatalf ("\u0075\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0074\u0065\u0073\u0074\u0020\u0069\u006e\u0070\u0075\u0074: \u0025\u0073",_gae );
};_eab ,_gae :=_dg .Open (_dfd );if _gae !=nil {t .Fatalf ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020r\u0065\u0061\u0064\u0020\u0067\u006f\u006cd\u0065\u006e\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gae );};defer _eab .Close ();
_bec ,_gae :=_dg .Stat (_dfd );if _gae !=nil {t .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gae );};_bae ,_gae :=_c .NewReader (_eab ,_bec .Size ());if _gae !=nil {t .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gae );
};t .Run (expectedFn ,_ag (_bae ,_gf ,cmpFileContents ));};func CompareGoldenXML (t *_be .T ,expectedFn string ,got []byte ){_dcb :=_a .Join ("\u0074\u0065\u0073\u0074\u0064\u0061\u0074\u0061",expectedFn );if *_fff {if _ea :=_dg .WriteFile (_dcb ,got ,0644);
_ea !=nil {t .Fatal (_ea );};};_ebb ,_ba :=_dg .ReadFile (_dcb );if _ba !=nil {t .Fatalf ("\u0075\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0069\u006e\u0070\u0075t\u003a\u0020\u0025\u0073",_ba );
};_da (t ,_ebb ,got );};