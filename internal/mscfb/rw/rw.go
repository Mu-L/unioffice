//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package rw ;import (_bc "bytes";_bb "encoding/binary";_e "errors";_g "fmt";_fa "io";_bd "io/ioutil";_f "reflect";);func (_ee *Writer )WriteStringProperty (s string )error {_ee .align (4);_ce :=[]byte (s );if _be :=_bb .Write (_ee ,_bb .LittleEndian ,&_ce );
_be !=nil {return _be ;};return nil ;};func PopRightUI64 (v uint64 )(bool ,uint64 ){return (v &uint64 (1))==1,v >>1};func (_bf *Writer )WriteTo (wTo _fa .Writer )(_deb int64 ,_eaf error ){if _ffd :=_bf .Len ();_ffd > 0{_gcdg ,_gbdc :=wTo .Write (_bf ._ddc [_bf ._cf :]);
if _gcdg > _ffd {return 0,_e .New ("\u0072\u0077\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065\u0054\u006f\u003a\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0057\u0072\u0069t\u0065\u0020c\u006f\u0075\u006e\u0074");
};_bf ._cf +=_gcdg ;_deb =int64 (_gcdg );if _gbdc !=nil {return _deb ,_gbdc ;};if _gcdg !=_ffd {return _deb ,_fa .ErrShortWrite ;};};_bf .reset ();return _deb ,nil ;};func (_ed *Writer )WriteProperty (a interface{})error {if _da :=_ed .align (int (_f .TypeOf (a ).Size ()));
_da !=nil {return _da ;};return _ed .WritePropertyNoAlign (a );};func (_fdg *Writer )reset (){_fdg ._ddc =_fdg ._ddc [:0];_fdg ._cf =0};func (_a *Reader )curPos ()int {return int (_a .Size ())-_a .Len ()};func NewWriter ()*Writer {return &Writer {_ddc :[]byte {}}};
func (_cbg *Writer )Cap ()int {return cap (_cbg ._ddc )};func PopRightUI32 (v uint32 )(bool ,uint32 ){return (v &uint32 (1))==1,v >>1};func (_ga *Reader )ReadProperty (a interface{})error {_c :=_f .ValueOf (a );for _c .Kind ()==_f .Ptr {_c =_c .Elem ();
};if !_c .IsValid (){return _g .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _gag :=_ga .align (int (_c .Type ().Size ()));_gag !=nil {return _gag ;};if _gc :=_bb .Read (_ga ,_bb .LittleEndian ,a );
_gc !=nil {return _gc ;};return nil ;};func (_ea *Reader )ReadPairProperty (p interface{})error {if _af :=_ea .align (4);_af !=nil {return _af ;};_cd :=_f .ValueOf (p );for _cd .Kind ()==_f .Ptr {_cd =_cd .Elem ();};if !_cd .IsValid (){return _g .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");
};if _dg :=_bb .Read (_ea ,_bb .LittleEndian ,p );_dg !=nil {return _dg ;};return nil ;};var _gbd =_e .New ("r\u0077.\u0057\u0072\u0069\u0074\u0065\u0072\u003a\u0020t\u006f\u006f\u0020\u006car\u0067\u0065");type Writer struct{_ddc []byte ;_cf int ;};func (_d *Reader )align (_dd int )error {return _d .skip ((_dd -_d .curPos ()%_dd )%_dd )};
func (_gg *Writer )grow (_fbb int )(int ,error ){_eba :=_gg .Len ();if _eba ==0&&_gg ._cf !=0{_gg .reset ();};if _gfc ,_fe :=_gg .tryGrowByReslice (_fbb );_fe {return _gfc ,nil ;};if _gg ._ddc ==nil &&_fbb <=_gb {_gg ._ddc =make ([]byte ,_fbb ,_gb );return 0,nil ;
};_ced :=cap (_gg ._ddc );if _fbb <=_ced /2-_eba {copy (_gg ._ddc ,_gg ._ddc [_gg ._cf :]);}else if _ced > _fg -_ced -_fbb {return 0,_gbd ;}else {_bcb :=_bdd (2*_ced +_fbb );copy (_bcb ,_gg ._ddc [_gg ._cf :]);_gg ._ddc =_bcb ;};_gg ._cf =0;_gg ._ddc =_gg ._ddc [:_eba +_fbb ];
return _eba ,nil ;};func (_dde *Writer )Bytes ()[]byte {return _dde ._ddc };func (_ag *Writer )WriteByteAt (b byte ,off int )error {if off >=len (_ag ._ddc ){return _e .New ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0062\u006f\u0075\u006e\u0064\u0073");
};_ag ._ddc [off ]=b ;return nil ;};func (_cac *Writer )Write (p []byte )(_aab int ,_eaa error ){_cc ,_cgb :=_cac .tryGrowByReslice (len (p ));if !_cgb {var _ff error ;_cc ,_ff =_cac .grow (len (p ));if _ff !=nil {return 0,_ff ;};};return copy (_cac ._ddc [_cc :],p ),nil ;
};func (_ae *Writer )WritePropertyNoAlign (a interface{})error {if _cg :=_bb .Write (_ae ,_bb .LittleEndian ,a );_cg !=nil {return _cg ;};return nil ;};func (_cb *Reader )ReadStringProperty (n uint32 )(string ,error ){if _gac :=_cb .align (4);_gac !=nil {return "",_gac ;
};_gcd :=make ([]byte ,n );if _aa :=_bb .Read (_cb ,_bb .LittleEndian ,&_gcd );_aa !=nil {return "",_aa ;};return string (_gcd ),nil ;};func PushLeftUI64 (v uint64 ,flag bool )uint64 {v >>=1;if flag {v |=1<<63;};return v ;};const _gb =64;func (_cgg *Writer )curPos ()int {return int (_cgg .Cap ())-_cgg .Len ()};
func (_dc *Writer )FillWithByte (fillSize int ,b byte )error {for _gfe :=0;_gfe < fillSize ;_gfe ++{if _gbc :=_dc .WritePropertyNoAlign (b );_gbc !=nil {return _gbc ;};};return nil ;};type Reader struct{*_bc .Reader };func (_de *Writer )Skip (n int )error {if n ==0{return nil ;
};_ ,_dgg :=_de .Write (make ([]byte ,n ));return _dgg ;};func (_gf *Reader )skip (_ef int )error {_ ,_eb :=_fa .CopyN (_bd .Discard ,_gf ,int64 (_ef ));if _eb !=nil {return _eb ;};return nil ;};func (_edb *Writer )align (_ca int )error {return _edb .Skip ((_ca -(_edb .Len ())%_ca )%_ca )};
const _fg =int (^uint (0)>>1);func PushLeftUI32 (v uint32 ,flag bool )uint32 {v >>=1;if flag {v |=1<<31;};return v ;};func (_dgc *Writer )Len ()int {return len (_dgc ._ddc )-_dgc ._cf };func (_efb *Writer )AlignLength (alignTo int )error {_fd :=_efb .Len ()%alignTo ;
if _fd > 0{_ ,_ac :=_efb .Write (make ([]byte ,alignTo -_fd ));if _ac !=nil {return _ac ;};};return nil ;};func _bdd (_bde int )[]byte {defer func (){if recover ()!=nil {panic (_gbd );};}();return make ([]byte ,_bde );};func NewReader (b []byte )(*Reader ,error ){return &Reader {_bc .NewReader (b )},nil };
func (_ad *Writer )tryGrowByReslice (_fbd int )(int ,bool ){if _ec :=len (_ad ._ddc );_fbd <=cap (_ad ._ddc )-_ec {_ad ._ddc =_ad ._ddc [:_ec +_fbd ];return _ec ,true ;};return 0,false ;};