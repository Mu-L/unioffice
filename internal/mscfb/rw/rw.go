//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package rw ;import (_fa "bytes";_ca "encoding/binary";_b "errors";_a "fmt";_c "io";_g "io/ioutil";_fd "reflect";);func (_eg *Writer )WriteByteAt (b byte ,off int )error {if off >=len (_eg ._d ){return _b .New ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0062\u006f\u0075\u006e\u0064\u0073");
};_eg ._d [off ]=b ;return nil ;};func (_af *Writer )Write (p []byte )(_acd int ,_egb error ){_cac ,_fg :=_af .tryGrowByReslice (len (p ));if !_fg {var _cee error ;_cac ,_cee =_af .grow (len (p ));if _cee !=nil {return 0,_cee ;};};return copy (_af ._d [_cac :],p ),nil ;
};func PopRightUI32 (v uint32 )(bool ,uint32 ){return (v &uint32 (1))==1,v >>1};func NewReader (b []byte )(*Reader ,error ){return &Reader {_fa .NewReader (b )},nil };func (_cf *Writer )Cap ()int {return cap (_cf ._d )};func (_gd *Writer )AlignLength (alignTo int )error {_dc :=_gd .Len ()%alignTo ;
if _dc > 0{_ ,_ba :=_gd .Write (make ([]byte ,alignTo -_dc ));if _ba !=nil {return _ba ;};};return nil ;};func (_ac *Reader )ReadStringProperty (n uint32 )(string ,error ){if _ge :=_ac .align (4);_ge !=nil {return "",_ge ;};_eab :=make ([]byte ,n );if _bcg :=_ca .Read (_ac ,_ca .LittleEndian ,&_eab );
_bcg !=nil {return "",_bcg ;};return string (_eab ),nil ;};const _fdd =int (^uint (0)>>1);func PopRightUI64 (v uint64 )(bool ,uint64 ){return (v &uint64 (1))==1,v >>1};func (_efc *Writer )grow (_bfa int )(int ,error ){_fec :=_efc .Len ();if _fec ==0&&_efc ._ab !=0{_efc .reset ();
};if _gdg ,_ggf :=_efc .tryGrowByReslice (_bfa );_ggf {return _gdg ,nil ;};if _efc ._d ==nil &&_bfa <=_ddc {_efc ._d =make ([]byte ,_bfa ,_ddc );return 0,nil ;};_acb :=cap (_efc ._d );if _bfa <=_acb /2-_fec {copy (_efc ._d ,_efc ._d [_efc ._ab :]);}else if _acb > _fdd -_acb -_bfa {return 0,_de ;
}else {_bd :=_ded (2*_acb +_bfa );copy (_bd ,_efc ._d [_efc ._ab :]);_efc ._d =_bd ;};_efc ._ab =0;_efc ._d =_efc ._d [:_fec +_bfa ];return _fec ,nil ;};type Reader struct{*_fa .Reader };func (_e *Reader )align (_ae int )error {return _e .skip ((_ae -_e .curPos ()%_ae )%_ae )};
func (_ec *Writer )curPos ()int {return int (_ec .Cap ())-_ec .Len ()};func (_dg *Writer )align (_abc int )error {return _dg .Skip ((_abc -(_dg .Len ())%_abc )%_abc )};func (_fc *Writer )Skip (n int )error {if n ==0{return nil ;};_ ,_ad :=_fc .Write (make ([]byte ,n ));
return _ad ;};func (_dbg *Writer )Bytes ()[]byte {return _dbg ._d };func (_bc *Reader )curPos ()int {return int (_bc .Size ())-_bc .Len ()};func (_fda *Reader )skip (_aa int )error {_ ,_ce :=_c .CopyN (_g .Discard ,_fda ,int64 (_aa ));if _ce !=nil {return _ce ;
};return nil ;};func (_dde *Writer )Len ()int {return len (_dde ._d )-_dde ._ab };func PushLeftUI32 (v uint32 ,flag bool )uint32 {v >>=1;if flag {v |=1<<31;};return v ;};func PushLeftUI64 (v uint64 ,flag bool )uint64 {v >>=1;if flag {v |=1<<63;};return v ;
};var _de =_b .New ("r\u0077.\u0057\u0072\u0069\u0074\u0065\u0072\u003a\u0020t\u006f\u006f\u0020\u006car\u0067\u0065");func (_dcd *Writer )WriteTo (wTo _c .Writer )(_cea int64 ,_fcc error ){if _bf :=_dcd .Len ();_bf > 0{_fgf ,_dgd :=wTo .Write (_dcd ._d [_dcd ._ab :]);
if _fgf > _bf {return 0,_b .New ("\u0072\u0077\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065\u0054\u006f\u003a\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0057\u0072\u0069t\u0065\u0020c\u006f\u0075\u006e\u0074");};
_dcd ._ab +=_fgf ;_cea =int64 (_fgf );if _dgd !=nil {return _cea ,_dgd ;};if _fgf !=_bf {return _cea ,_c .ErrShortWrite ;};};_dcd .reset ();return _cea ,nil ;};func (_gc *Reader )ReadProperty (a interface{})error {_gf :=_fd .ValueOf (a );for _gf .Kind ()==_fd .Ptr {_gf =_gf .Elem ();
};if !_gf .IsValid (){return _a .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _bce :=_gc .align (int (_gf .Type ().Size ()));_bce !=nil {return _bce ;};if _eb :=_ca .Read (_gc ,_ca .LittleEndian ,a );
_eb !=nil {return _eb ;};return nil ;};func (_df *Writer )WritePropertyNoAlign (a interface{})error {if _fab :=_ca .Write (_df ,_ca .LittleEndian ,a );_fab !=nil {return _fab ;};return nil ;};func (_def *Writer )reset (){_def ._d =_def ._d [:0];_def ._ab =0};
type Writer struct{_d []byte ;_ab int ;};func (_cd *Reader )ReadPairProperty (p interface{})error {if _ea :=_cd .align (4);_ea !=nil {return _ea ;};_aad :=_fd .ValueOf (p );for _aad .Kind ()==_fd .Ptr {_aad =_aad .Elem ();};if !_aad .IsValid (){return _a .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");
};if _ee :=_ca .Read (_cd ,_ca .LittleEndian ,p );_ee !=nil {return _ee ;};return nil ;};func _ded (_dbe int )[]byte {defer func (){if recover ()!=nil {panic (_de );};}();return make ([]byte ,_dbe );};func (_fe *Writer )tryGrowByReslice (_gg int )(int ,bool ){if _bcb :=len (_fe ._d );
_gg <=cap (_fe ._d )-_bcb {_fe ._d =_fe ._d [:_bcb +_gg ];return _bcb ,true ;};return 0,false ;};func (_dd *Writer )WriteStringProperty (s string )error {_dd .align (4);_db :=[]byte (s );if _cc :=_ca .Write (_dd ,_ca .LittleEndian ,&_db );_cc !=nil {return _cc ;
};return nil ;};func NewWriter ()*Writer {return &Writer {_d :[]byte {}}};const _ddc =64;func (_ef *Writer )WriteProperty (a interface{})error {if _acg :=_ef .align (int (_fd .TypeOf (a ).Size ()));_acg !=nil {return _acg ;};return _ef .WritePropertyNoAlign (a );
};func (_dfb *Writer )FillWithByte (fillSize int ,b byte )error {for _gdb :=0;_gdb < fillSize ;_gdb ++{if _eec :=_dfb .WritePropertyNoAlign (b );_eec !=nil {return _eec ;};};return nil ;};