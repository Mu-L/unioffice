//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package rw ;import (_d "bytes";_f "encoding/binary";_c "errors";_e "fmt";_da "io";_a "io/ioutil";_df "reflect";);func (_fdc *Writer )FillWithByte (fillSize int ,b byte )error {for _dbe :=0;_dbe < fillSize ;_dbe ++{if _cba :=_fdc .WritePropertyNoAlign (b );
_cba !=nil {return _cba ;};};return nil ;};func (_ca *Reader )ReadPairProperty (p interface{})error {if _cg :=_ca .align (4);_cg !=nil {return _cg ;};_db :=_df .ValueOf (p );for _db .Kind ()==_df .Ptr {_db =_db .Elem ();};if !_db .IsValid (){return _e .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");
};if _ec :=_f .Read (_ca ,_f .LittleEndian ,p );_ec !=nil {return _ec ;};return nil ;};func NewReader (b []byte )(*Reader ,error ){return &Reader {_d .NewReader (b )},nil };func (_fde *Writer )WriteByteAt (b byte ,off int )error {if off >=len (_fde ._caf ){return _c .New ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0062\u006f\u0075\u006e\u0064\u0073");
};_fde ._caf [off ]=b ;return nil ;};type Reader struct{*_d .Reader };func (_cb *Reader )ReadStringProperty (n uint32 )(string ,error ){if _fa :=_cb .align (4);_fa !=nil {return "",_fa ;};_bf :=make ([]byte ,n );if _ff :=_f .Read (_cb ,_f .LittleEndian ,&_bf );
_ff !=nil {return "",_ff ;};return string (_bf ),nil ;};func (_cbf *Writer )curPos ()int {return int (_cbf .Cap ())-_cbf .Len ()};func NewWriter ()*Writer {return &Writer {_caf :[]byte {}}};const _cfb =int (^uint (0)>>1);func (_gb *Writer )WriteProperty (a interface{})error {if _fag :=_gb .align (int (_df .TypeOf (a ).Size ()));
_fag !=nil {return _fag ;};return _gb .WritePropertyNoAlign (a );};func (_ecb *Writer )grow (_gad int )(int ,error ){_ceb :=_ecb .Len ();if _ceb ==0&&_ecb ._gcf !=0{_ecb .reset ();};if _ecg ,_ggb :=_ecb .tryGrowByReslice (_gad );_ggb {return _ecg ,nil ;
};if _ecb ._caf ==nil &&_gad <=_bgc {_ecb ._caf =make ([]byte ,_gad ,_bgc );return 0,nil ;};_cdf :=cap (_ecb ._caf );if _gad <=_cdf /2-_ceb {copy (_ecb ._caf ,_ecb ._caf [_ecb ._gcf :]);}else if _cdf > _cfb -_cdf -_gad {return 0,_fg ;}else {_ad :=_bad (2*_cdf +_gad );
copy (_ad ,_ecb ._caf [_ecb ._gcf :]);_ecb ._caf =_ad ;};_ecb ._gcf =0;_ecb ._caf =_ecb ._caf [:_ceb +_gad ];return _ceb ,nil ;};func _bad (_gd int )[]byte {defer func (){if recover ()!=nil {panic (_fg );};}();return make ([]byte ,_gd );};func (_eef *Writer )Bytes ()[]byte {return _eef ._caf };
func PopRightUI32 (v uint32 )(bool ,uint32 ){return (v &uint32 (1))==1,v >>1};func (_fad *Writer )Cap ()int {return cap (_fad ._caf )};func (_de *Reader )align (_fdd int )error {return _de .skip ((_fdd -_de .curPos ()%_fdd )%_fdd )};func (_ece *Writer )Write (p []byte )(_fb int ,_ffc error ){_ba ,_deg :=_ece .tryGrowByReslice (len (p ));
if !_deg {var _ga error ;_ba ,_ga =_ece .grow (len (p ));if _ga !=nil {return 0,_ga ;};};return copy (_ece ._caf [_ba :],p ),nil ;};func (_ffd *Writer )AlignLength (alignTo int )error {_dc :=_ffd .Len ()%alignTo ;if _dc > 0{_ ,_daa :=_ffd .Write (make ([]byte ,alignTo -_dc ));
if _daa !=nil {return _daa ;};};return nil ;};func PushLeftUI64 (v uint64 ,flag bool )uint64 {v >>=1;if flag {v |=1<<63;};return v ;};func (_afb *Writer )tryGrowByReslice (_ffb int )(int ,bool ){if _fdeb :=len (_afb ._caf );_ffb <=cap (_afb ._caf )-_fdeb {_afb ._caf =_afb ._caf [:_fdeb +_ffb ];
return _fdeb ,true ;};return 0,false ;};func (_ae *Writer )reset (){_ae ._caf =_ae ._caf [:0];_ae ._gcf =0};func PopRightUI64 (v uint64 )(bool ,uint64 ){return (v &uint64 (1))==1,v >>1};func (_af *Reader )ReadProperty (a interface{})error {_bg :=_df .ValueOf (a );
for _bg .Kind ()==_df .Ptr {_bg =_bg .Elem ();};if !_bg .IsValid (){return _e .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _gc :=_af .align (int (_bg .Type ().Size ()));_gc !=nil {return _gc ;
};if _fc :=_f .Read (_af ,_f .LittleEndian ,a );_fc !=nil {return _fc ;};return nil ;};func PushLeftUI32 (v uint32 ,flag bool )uint32 {v >>=1;if flag {v |=1<<31;};return v ;};func (_gcc *Writer )WriteTo (wTo _da .Writer )(_dfa int64 ,_bb error ){if _ce :=_gcc .Len ();
_ce > 0{_dbd ,_eff :=wTo .Write (_gcc ._caf [_gcc ._gcf :]);if _dbd > _ce {return 0,_c .New ("\u0072\u0077\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065\u0054\u006f\u003a\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0057\u0072\u0069t\u0065\u0020c\u006f\u0075\u006e\u0074");
};_gcc ._gcf +=_dbd ;_dfa =int64 (_dbd );if _eff !=nil {return _dfa ,_eff ;};if _dbd !=_ce {return _dfa ,_da .ErrShortWrite ;};};_gcc .reset ();return _dfa ,nil ;};func (_g *Reader )curPos ()int {return int (_g .Size ())-_g .Len ()};func (_bfc *Writer )align (_gbg int )error {return _bfc .Skip ((_gbg -(_bfc .Len ())%_gbg )%_gbg )};
const _bgc =64;func (_ef *Reader )skip (_bc int )error {_ ,_fd :=_da .CopyN (_a .Discard ,_ef ,int64 (_bc ));if _fd !=nil {return _fd ;};return nil ;};func (_cbb *Writer )WritePropertyNoAlign (a interface{})error {if _eg :=_f .Write (_cbb ,_f .LittleEndian ,a );
_eg !=nil {return _eg ;};return nil ;};func (_eeb *Writer )Skip (n int )error {if n ==0{return nil ;};_ ,_cf :=_eeb .Write (make ([]byte ,n ));return _cf ;};var _fg =_c .New ("r\u0077.\u0057\u0072\u0069\u0074\u0065\u0072\u003a\u0020t\u006f\u006f\u0020\u006car\u0067\u0065");
type Writer struct{_caf []byte ;_gcf int ;};func (_afa *Writer )WriteStringProperty (s string )error {_afa .align (4);_ee :=[]byte (s );if _gg :=_f .Write (_afa ,_f .LittleEndian ,&_ee );_gg !=nil {return _gg ;};return nil ;};func (_dba *Writer )Len ()int {return len (_dba ._caf )-_dba ._gcf };
