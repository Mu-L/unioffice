//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package rw ;import (_e "bytes";_g "encoding/binary";_f "errors";_ed "fmt";_a "io";_ba "io/ioutil";_b "reflect";);func PopRightUI64 (v uint64 )(bool ,uint64 ){return (v &uint64 (1))==1,v >>1};const _ec =64;func (_gc *Writer )curPos ()int {return int (_gc .Cap ())-_gc .Len ()};
func NewWriter ()*Writer {return &Writer {_db :[]byte {}}};func (_fc *Reader )curPos ()int {return int (_fc .Size ())-_fc .Len ()};func (_edb *Writer )Cap ()int {return cap (_edb ._db )};func (_aa *Writer )WriteByteAt (b byte ,off int )error {if off >=len (_aa ._db ){return _f .New ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0062\u006f\u0075\u006e\u0064\u0073");
};_aa ._db [off ]=b ;return nil ;};func (_cb *Writer )WritePropertyNoAlign (a interface{})error {if _cc :=_g .Write (_cb ,_g .LittleEndian ,a );_cc !=nil {return _cc ;};return nil ;};const _ggb =int (^uint (0)>>1);func (_de *Writer )align (_fcd int )error {return _de .Skip ((_fcd -(_de .Len ())%_fcd )%_fcd )};
func (_ae *Reader )skip (_edf int )error {_ ,_gg :=_a .CopyN (_ba .Discard ,_ae ,int64 (_edf ));if _gg !=nil {return _gg ;};return nil ;};func _bcb (_bdd int )[]byte {defer func (){if recover ()!=nil {panic (_afd );};}();return make ([]byte ,_bdd );};func (_fbf *Writer )WriteStringProperty (s string )error {_fbf .align (4);
_da :=[]byte (s );if _cg :=_g .Write (_fbf ,_g .LittleEndian ,&_da );_cg !=nil {return _cg ;};return nil ;};func PopRightUI32 (v uint32 )(bool ,uint32 ){return (v &uint32 (1))==1,v >>1};func PushLeftUI32 (v uint32 ,flag bool )uint32 {v >>=1;if flag {v |=1<<31;
};return v ;};func (_bag *Writer )Bytes ()[]byte {return _bag ._db };func (_af *Reader )align (_eb int )error {return _af .skip ((_eb -_af .curPos ()%_eb )%_eb )};func (_ad *Writer )AlignLength (alignTo int )error {_dc :=_ad .Len ()%alignTo ;if _dc > 0{_ ,_bda :=_ad .Write (make ([]byte ,alignTo -_dc ));
if _bda !=nil {return _bda ;};};return nil ;};func (_aeg *Reader )ReadProperty (a interface{})error {_bd :=_b .ValueOf (a );for _bd .Kind ()==_b .Ptr {_bd =_bd .Elem ();};if !_bd .IsValid (){return _ed .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");
};if _fe :=_aeg .align (int (_bd .Type ().Size ()));_fe !=nil {return _fe ;};if _ee :=_g .Read (_aeg ,_g .LittleEndian ,a );_ee !=nil {return _ee ;};return nil ;};func (_ceg *Writer )FillWithByte (fillSize int ,b byte )error {for _aea :=0;_aea < fillSize ;
_aea ++{if _ebb :=_ceg .WritePropertyNoAlign (b );_ebb !=nil {return _ebb ;};};return nil ;};func PushLeftUI64 (v uint64 ,flag bool )uint64 {v >>=1;if flag {v |=1<<63;};return v ;};func (_cga *Writer )grow (_dg int )(int ,error ){_bae :=_cga .Len ();if _bae ==0&&_cga ._fb !=0{_cga .reset ();
};if _gfc ,_aff :=_cga .tryGrowByReslice (_dg );_aff {return _gfc ,nil ;};if _cga ._db ==nil &&_dg <=_ec {_cga ._db =make ([]byte ,_dg ,_ec );return 0,nil ;};_ce :=cap (_cga ._db );if _dg <=_ce /2-_bae {copy (_cga ._db ,_cga ._db [_cga ._fb :]);}else if _ce > _ggb -_ce -_dg {return 0,_afd ;
}else {_abf :=_bcb (2*_ce +_dg );copy (_abf ,_cga ._db [_cga ._fb :]);_cga ._db =_abf ;};_cga ._fb =0;_cga ._db =_cga ._db [:_bae +_dg ];return _bae ,nil ;};func (_cdc *Reader )ReadStringProperty (n uint32 )(string ,error ){if _ea :=_cdc .align (4);_ea !=nil {return "",_ea ;
};_bgg :=make ([]byte ,n );if _d :=_g .Read (_cdc ,_g .LittleEndian ,&_bgg );_d !=nil {return "",_d ;};return string (_bgg ),nil ;};func NewReader (b []byte )(*Reader ,error ){return &Reader {_e .NewReader (b )},nil };func (_ca *Writer )Len ()int {return len (_ca ._db )-_ca ._fb };
type Reader struct{*_e .Reader };type Writer struct{_db []byte ;_fb int ;};func (_gcg *Writer )Write (p []byte )(_ga int ,_ff error ){_dbc ,_aad :=_gcg .tryGrowByReslice (len (p ));if !_aad {var _cdg error ;_dbc ,_cdg =_gcg .grow (len (p ));if _cdg !=nil {return 0,_cdg ;
};};return copy (_gcg ._db [_dbc :],p ),nil ;};func (_bdb *Writer )WriteProperty (a interface{})error {if _fec :=_bdb .align (int (_b .TypeOf (a ).Size ()));_fec !=nil {return _fec ;};return _bdb .WritePropertyNoAlign (a );};func (_fbb *Writer )reset (){_fbb ._db =_fbb ._db [:0];
_fbb ._fb =0};var _afd =_f .New ("r\u0077.\u0057\u0072\u0069\u0074\u0065\u0072\u003a\u0020t\u006f\u006f\u0020\u006car\u0067\u0065");func (_fcg *Writer )WriteTo (wTo _a .Writer )(_fce int64 ,_cbg error ){if _ccd :=_fcg .Len ();_ccd > 0{_dae ,_cf :=wTo .Write (_fcg ._db [_fcg ._fb :]);
if _dae > _ccd {return 0,_f .New ("\u0072\u0077\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065\u0054\u006f\u003a\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0057\u0072\u0069t\u0065\u0020c\u006f\u0075\u006e\u0074");};
_fcg ._fb +=_dae ;_fce =int64 (_dae );if _cf !=nil {return _fce ,_cf ;};if _dae !=_ccd {return _fce ,_a .ErrShortWrite ;};};_fcg .reset ();return _fce ,nil ;};func (_ggbg *Writer )tryGrowByReslice (_gfa int )(int ,bool ){if _ggc :=len (_ggbg ._db );_gfa <=cap (_ggbg ._db )-_ggc {_ggbg ._db =_ggbg ._db [:_ggc +_gfa ];
return _ggc ,true ;};return 0,false ;};func (_bc *Reader )ReadPairProperty (p interface{})error {if _cd :=_bc .align (4);_cd !=nil {return _cd ;};_bg :=_b .ValueOf (p );for _bg .Kind ()==_b .Ptr {_bg =_bg .Elem ();};if !_bg .IsValid (){return _ed .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");
};if _ge :=_g .Read (_bc ,_g .LittleEndian ,p );_ge !=nil {return _ge ;};return nil ;};func (_eeg *Writer )Skip (n int )error {if n ==0{return nil ;};_ ,_ab :=_eeg .Write (make ([]byte ,n ));return _ab ;};