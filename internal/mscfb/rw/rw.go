//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package rw ;import (_e "bytes";_b "encoding/binary";_d "errors";_g "fmt";_da "io";_db "io/ioutil";_a "reflect";);func (_daa *Writer )Bytes ()[]byte {return _daa ._bd };func (_fd *Writer )curPos ()int {return int (_fd .Cap ())-_fd .Len ()};func _daf (_egg int )[]byte {defer func (){if recover ()!=nil {panic (_gda );
};}();return make ([]byte ,_egg );};func (_aaf *Writer )WritePropertyNoAlign (a interface{})error {if _bdb :=_b .Write (_aaf ,_b .LittleEndian ,a );_bdb !=nil {return _bdb ;};return nil ;};func (_ag *Writer )WriteTo (wTo _da .Writer )(_cf int64 ,_baba error ){if _fad :=_ag .Len ();
_fad > 0{_cg ,_ebd :=wTo .Write (_ag ._bd [_ag ._bab :]);if _cg > _fad {return 0,_d .New ("\u0072\u0077\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065\u0054\u006f\u003a\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0057\u0072\u0069t\u0065\u0020c\u006f\u0075\u006e\u0074");
};_ag ._bab +=_cg ;_cf =int64 (_cg );if _ebd !=nil {return _cf ,_ebd ;};if _cg !=_fad {return _cf ,_da .ErrShortWrite ;};};_ag .reset ();return _cf ,nil ;};const _bg =int (^uint (0)>>1);func NewWriter ()*Writer {return &Writer {_bd :[]byte {}}};func (_bc *Writer )Skip (n int )error {if n ==0{return nil ;
};_ ,_ef :=_bc .Write (make ([]byte ,n ));return _ef ;};func (_cdf *Writer )tryGrowByReslice (_gdf int )(int ,bool ){if _aceg :=len (_cdf ._bd );_gdf <=cap (_cdf ._bd )-_aceg {_cdf ._bd =_cdf ._bd [:_aceg +_gdf ];return _aceg ,true ;};return 0,false ;};
func NewReader (b []byte )(*Reader ,error ){return &Reader {_e .NewReader (b )},nil };func (_fb *Reader )ReadPairProperty (p interface{})error {if _ac :=_fb .align (4);_ac !=nil {return _ac ;};_ae :=_a .ValueOf (p );for _ae .Kind ()==_a .Ptr {_ae =_ae .Elem ();
};if !_ae .IsValid (){return _g .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _dc :=_b .Read (_fb ,_b .LittleEndian ,p );_dc !=nil {return _dc ;};return nil ;};func PopRightUI32 (v uint32 )(bool ,uint32 ){return (v &uint32 (1))==1,v >>1};
func (_eb *Writer )Cap ()int {return cap (_eb ._bd )};func (_gag *Writer )Write (p []byte )(_dg int ,_ed error ){_bb ,_fda :=_gag .tryGrowByReslice (len (p ));if !_fda {var _eaf error ;_bb ,_eaf =_gag .grow (len (p ));if _eaf !=nil {return 0,_eaf ;};};
return copy (_gag ._bd [_bb :],p ),nil ;};const _ca =64;func PushLeftUI32 (v uint32 ,flag bool )uint32 {v >>=1;if flag {v |=1<<31;};return v ;};func (_aa *Reader )ReadProperty (a interface{})error {_fa :=_a .ValueOf (a );for _fa .Kind ()==_a .Ptr {_fa =_fa .Elem ();
};if !_fa .IsValid (){return _g .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _ea :=_aa .align (int (_fa .Type ().Size ()));_ea !=nil {return _ea ;};if _ba :=_b .Read (_aa ,_b .LittleEndian ,a );
_ba !=nil {return _ba ;};return nil ;};type Writer struct{_bd []byte ;_bab int ;};func (_gec *Writer )grow (_adg int )(int ,error ){_agd :=_gec .Len ();if _agd ==0&&_gec ._bab !=0{_gec .reset ();};if _acb ,_ede :=_gec .tryGrowByReslice (_adg );_ede {return _acb ,nil ;
};if _gec ._bd ==nil &&_adg <=_ca {_gec ._bd =make ([]byte ,_adg ,_ca );return 0,nil ;};_aac :=cap (_gec ._bd );if _adg <=_aac /2-_agd {copy (_gec ._bd ,_gec ._bd [_gec ._bab :]);}else if _aac > _bg -_aac -_adg {return 0,_gda ;}else {_cgb :=_daf (2*_aac +_adg );
copy (_cgb ,_gec ._bd [_gec ._bab :]);_gec ._bd =_cgb ;};_gec ._bab =0;_gec ._bd =_gec ._bd [:_agd +_adg ];return _agd ,nil ;};func (_dbe *Writer )align (_ade int )error {return _dbe .Skip ((_ade -(_dbe .Len ())%_ade )%_ade )};func PushLeftUI64 (v uint64 ,flag bool )uint64 {v >>=1;
if flag {v |=1<<63;};return v ;};type Reader struct{*_e .Reader };func (_gee *Writer )WriteByteAt (b byte ,off int )error {if off >=len (_gee ._bd ){return _d .New ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};_gee ._bd [off ]=b ;
return nil ;};var _gda =_d .New ("r\u0077.\u0057\u0072\u0069\u0074\u0065\u0072\u003a\u0020t\u006f\u006f\u0020\u006car\u0067\u0065");func (_cd *Writer )WriteStringProperty (s string )error {_cd .align (4);_ad :=[]byte (s );if _cef :=_b .Write (_cd ,_b .LittleEndian ,&_ad );
_cef !=nil {return _cef ;};return nil ;};func (_eg *Reader )curPos ()int {return int (_eg .Size ())-_eg .Len ()};func (_gf *Reader )align (_ced int )error {return _gf .skip ((_ced -_gf .curPos ()%_ced )%_ced )};func (_abg *Writer )reset (){_abg ._bd =_abg ._bd [:0];
_abg ._bab =0};func (_ace *Writer )AlignLength (alignTo int )error {_bf :=_ace .Len ()%alignTo ;if _bf > 0{_ ,_gaf :=_ace .Write (make ([]byte ,alignTo -_bf ));if _gaf !=nil {return _gaf ;};};return nil ;};func (_cb *Writer )FillWithByte (fillSize int ,b byte )error {for _deg :=0;
_deg < fillSize ;_deg ++{if _cdd :=_cb .WritePropertyNoAlign (b );_cdd !=nil {return _cdd ;};};return nil ;};func (_df *Writer )WriteProperty (a interface{})error {if _gfb :=_df .align (int (_a .TypeOf (a ).Size ()));_gfb !=nil {return _gfb ;};return _df .WritePropertyNoAlign (a );
};func (_ab *Reader )skip (_f int )error {_ ,_gd :=_da .CopyN (_db .Discard ,_ab ,int64 (_f ));if _gd !=nil {return _gd ;};return nil ;};func (_ff *Reader )ReadStringProperty (n uint32 )(string ,error ){if _de :=_ff .align (4);_de !=nil {return "",_de ;
};_ge :=make ([]byte ,n );if _ga :=_b .Read (_ff ,_b .LittleEndian ,&_ge );_ga !=nil {return "",_ga ;};return string (_ge ),nil ;};func PopRightUI64 (v uint64 )(bool ,uint64 ){return (v &uint64 (1))==1,v >>1};func (_gfe *Writer )Len ()int {return len (_gfe ._bd )-_gfe ._bab };
