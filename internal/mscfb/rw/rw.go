//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package rw ;import (_c "bytes";_cb "encoding/binary";_f "errors";_ce "fmt";_ag "io";_fe "io/ioutil";_g "reflect";);const _bf =64;func (_gf *Writer )WriteByteAt (b byte ,off int )error {if off >=len (_gf ._cf ){return _f .New ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0062\u006f\u0075\u006e\u0064\u0073");
};_gf ._cf [off ]=b ;return nil ;};func (_ge *Writer )WritePropertyNoAlign (a interface{})error {if _cg :=_cb .Write (_ge ,_cb .LittleEndian ,a );_cg !=nil {return _cg ;};return nil ;};func (_fcf *Writer )Cap ()int {return cap (_fcf ._cf )};func (_e *Reader )curPos ()int {return int (_e .Size ())-_e .Len ()};
func (_aaa *Writer )Write (p []byte )(_gd int ,_dg error ){_bag ,_fcc :=_aaa .tryGrowByReslice (len (p ));if !_fcc {var _dd error ;_bag ,_dd =_aaa .grow (len (p ));if _dd !=nil {return 0,_dd ;};};return copy (_aaa ._cf [_bag :],p ),nil ;};func (_af *Writer )reset (){_af ._cf =_af ._cf [:0];
_af ._ed =0};func (_db *Writer )Len ()int {return len (_db ._cf )-_db ._ed };func (_bda *Writer )WriteStringProperty (s string )error {_bda .align (4);_gg :=[]byte (s );if _eaf :=_cb .Write (_bda ,_cb .LittleEndian ,&_gg );_eaf !=nil {return _eaf ;};return nil ;
};type Writer struct{_cf []byte ;_ed int ;};func (_eb *Writer )curPos ()int {return int (_eb .Cap ())-_eb .Len ()};func (_gc *Writer )WriteProperty (a interface{})error {if _cd :=_gc .align (int (_g .TypeOf (a ).Size ()));_cd !=nil {return _cd ;};return _gc .WritePropertyNoAlign (a );
};func (_eddb *Writer )FillWithByte (fillSize int ,b byte )error {for _ace :=0;_ace < fillSize ;_ace ++{if _ec :=_eddb .WritePropertyNoAlign (b );_ec !=nil {return _ec ;};};return nil ;};func (_fd *Reader )ReadStringProperty (n uint32 )(string ,error ){if _bdc :=_fd .align (4);
_bdc !=nil {return "",_bdc ;};_abb :=make ([]byte ,n );if _fdb :=_cb .Read (_fd ,_cb .LittleEndian ,&_abb );_fdb !=nil {return "",_fdb ;};return string (_abb ),nil ;};func PopRightUI32 (v uint32 )(bool ,uint32 ){return (v &uint32 (1))==1,v >>1};var _fbg =_f .New ("r\u0077.\u0057\u0072\u0069\u0074\u0065\u0072\u003a\u0020t\u006f\u006f\u0020\u006car\u0067\u0065");
func (_fb *Writer )Skip (n int )error {if n ==0{return nil ;};_ ,_ggc :=_fb .Write (make ([]byte ,n ));return _ggc ;};func (_egb *Writer )AlignLength (alignTo int )error {_d :=_egb .Len ()%alignTo ;if _d > 0{_ ,_add :=_egb .Write (make ([]byte ,alignTo -_d ));
if _add !=nil {return _add ;};};return nil ;};func (_ef *Writer )align (_ac int )error {return _ef .Skip ((_ac -(_ef .Len ())%_ac )%_ac )};func PushLeftUI64 (v uint64 ,flag bool )uint64 {v >>=1;if flag {v |=1<<63;};return v ;};func (_edd *Writer )WriteTo (wTo _ag .Writer )(_eff int64 ,_dbg error ){if _cdb :=_edd .Len ();
_cdb > 0{_edc ,_bfg :=wTo .Write (_edd ._cf [_edd ._ed :]);if _edc > _cdb {return 0,_f .New ("\u0072\u0077\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065\u0054\u006f\u003a\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0057\u0072\u0069t\u0065\u0020c\u006f\u0075\u006e\u0074");
};_edd ._ed +=_edc ;_eff =int64 (_edc );if _bfg !=nil {return _eff ,_bfg ;};if _edc !=_cdb {return _eff ,_ag .ErrShortWrite ;};};_edd .reset ();return _eff ,nil ;};func _gaa (_gcg int )[]byte {defer func (){if recover ()!=nil {panic (_fbg );};}();return make ([]byte ,_gcg );
};func (_ab *Reader )ReadPairProperty (p interface{})error {if _aa :=_ab .align (4);_aa !=nil {return _aa ;};_aeb :=_g .ValueOf (p );for _aeb .Kind ()==_g .Ptr {_aeb =_aeb .Elem ();};if !_aeb .IsValid (){return _ce .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");
};if _aad :=_cb .Read (_ab ,_cb .LittleEndian ,p );_aad !=nil {return _aad ;};return nil ;};func (_agd *Writer )tryGrowByReslice (_fcfb int )(int ,bool ){if _fbd :=len (_agd ._cf );_fcfb <=cap (_agd ._cf )-_fbd {_agd ._cf =_agd ._cf [:_fbd +_fcfb ];return _fbd ,true ;
};return 0,false ;};const _bfd =int (^uint (0)>>1);func NewReader (b []byte )(*Reader ,error ){return &Reader {_c .NewReader (b )},nil };func PopRightUI64 (v uint64 )(bool ,uint64 ){return (v &uint64 (1))==1,v >>1};func (_ba *Reader )ReadProperty (a interface{})error {_fc :=_g .ValueOf (a );
for _fc .Kind ()==_g .Ptr {_fc =_fc .Elem ();};if !_fc .IsValid (){return _ce .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _bd :=_ba .align (int (_fc .Type ().Size ()));_bd !=nil {return _bd ;
};if _fa :=_cb .Read (_ba ,_cb .LittleEndian ,a );_fa !=nil {return _fa ;};return nil ;};func (_acf *Writer )Bytes ()[]byte {return _acf ._cf };type Reader struct{*_c .Reader };func PushLeftUI32 (v uint32 ,flag bool )uint32 {v >>=1;if flag {v |=1<<31;};
return v ;};func (_fbgc *Writer )grow (_cea int )(int ,error ){_ca :=_fbgc .Len ();if _ca ==0&&_fbgc ._ed !=0{_fbgc .reset ();};if _aee ,_caa :=_fbgc .tryGrowByReslice (_cea );_caa {return _aee ,nil ;};if _fbgc ._cf ==nil &&_cea <=_bf {_fbgc ._cf =make ([]byte ,_cea ,_bf );
return 0,nil ;};_abe :=cap (_fbgc ._cf );if _cea <=_abe /2-_ca {copy (_fbgc ._cf ,_fbgc ._cf [_fbgc ._ed :]);}else if _abe > _bfd -_abe -_cea {return 0,_fbg ;}else {_ebc :=_gaa (2*_abe +_cea );copy (_ebc ,_fbgc ._cf [_fbgc ._ed :]);_fbgc ._cf =_ebc ;};
_fbgc ._ed =0;_fbgc ._cf =_fbgc ._cf [:_ca +_cea ];return _ca ,nil ;};func (_ea *Reader )align (_b int )error {return _ea .skip ((_b -_ea .curPos ()%_b )%_b )};func NewWriter ()*Writer {return &Writer {_cf :[]byte {}}};func (_ga *Reader )skip (_ad int )error {_ ,_ae :=_ag .CopyN (_fe .Discard ,_ga ,int64 (_ad ));
if _ae !=nil {return _ae ;};return nil ;};