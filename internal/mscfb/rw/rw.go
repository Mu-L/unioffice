//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package rw ;import (_g "bytes";_c "encoding/binary";_b "errors";_bf "fmt";_e "io";_af "io/ioutil";_d "reflect";);func (_bfc *Writer )WritePropertyNoAlign (a interface{})error {if _ecd :=_c .Write (_bfc ,_c .LittleEndian ,a );_ecd !=nil {return _ecd ;};
return nil ;};func NewWriter ()*Writer {return &Writer {_cc :[]byte {}}};var _gag =_b .New ("r\u0077.\u0057\u0072\u0069\u0074\u0065\u0072\u003a\u0020t\u006f\u006f\u0020\u006car\u0067\u0065");func PushLeftUI32 (v uint32 ,flag bool )uint32 {v >>=1;if flag {v |=1<<31;
};return v ;};func (_ga *Writer )WriteStringProperty (s string )error {_ga .align (4);_ef :=[]byte (s );if _fe :=_c .Write (_ga ,_c .LittleEndian ,&_ef );_fe !=nil {return _fe ;};return nil ;};func (_df *Reader )ReadPairProperty (p interface{})error {if _gcd :=_df .align (4);
_gcd !=nil {return _gcd ;};_dfg :=_d .ValueOf (p );for _dfg .Kind ()==_d .Ptr {_dfg =_dfg .Elem ();};if !_dfg .IsValid (){return _bf .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _fa :=_c .Read (_df ,_c .LittleEndian ,p );
_fa !=nil {return _fa ;};return nil ;};func (_cb *Reader )skip (_ad int )error {_ ,_ac :=_e .CopyN (_af .Discard ,_cb ,int64 (_ad ));if _ac !=nil {return _ac ;};return nil ;};const _ea =int (^uint (0)>>1);type Reader struct{*_g .Reader };func (_cef *Writer )Bytes ()[]byte {return _cef ._cc };
func NewReader (b []byte )(*Reader ,error ){return &Reader {_g .NewReader (b )},nil };func (_dde *Writer )WriteProperty (a interface{})error {if _ccc :=_dde .align (int (_d .TypeOf (a ).Size ()));_ccc !=nil {return _ccc ;};return _dde .WritePropertyNoAlign (a );
};func _bcb (_bfeb int )[]byte {defer func (){if recover ()!=nil {panic (_gag );};}();return make ([]byte ,_bfeb );};func (_bca *Writer )curPos ()int {return int (_bca .Cap ())-_bca .Len ()};func (_eg *Writer )Len ()int {return len (_eg ._cc )-_eg ._afb };
func (_abc *Writer )Cap ()int {return cap (_abc ._cc )};func (_afg *Writer )tryGrowByReslice (_cbe int )(int ,bool ){if _cea :=len (_afg ._cc );_cbe <=cap (_afg ._cc )-_cea {_afg ._cc =_afg ._cc [:_cea +_cbe ];return _cea ,true ;};return 0,false ;};func (_ec *Reader )align (_bfe int )error {return _ec .skip ((_bfe -_ec .curPos ()%_bfe )%_bfe )};
type Writer struct{_cc []byte ;_afb int ;};func (_cd *Writer )grow (_cbg int )(int ,error ){_adc :=_cd .Len ();if _adc ==0&&_cd ._afb !=0{_cd .reset ();};if _dfb ,_cae :=_cd .tryGrowByReslice (_cbg );_cae {return _dfb ,nil ;};if _cd ._cc ==nil &&_cbg <=_ce {_cd ._cc =make ([]byte ,_cbg ,_ce );
return 0,nil ;};_acf :=cap (_cd ._cc );if _cbg <=_acf /2-_adc {copy (_cd ._cc ,_cd ._cc [_cd ._afb :]);}else if _acf > _ea -_acf -_cbg {return 0,_gag ;}else {_bgd :=_bcb (2*_acf +_cbg );copy (_bgd ,_cd ._cc [_cd ._afb :]);_cd ._cc =_bgd ;};_cd ._afb =0;
_cd ._cc =_cd ._cc [:_adc +_cbg ];return _adc ,nil ;};func (_gca *Writer )align (_aab int )error {return _gca .Skip ((_aab -(_gca .Len ())%_aab )%_aab )};func PushLeftUI64 (v uint64 ,flag bool )uint64 {v >>=1;if flag {v |=1<<63;};return v ;};func (_cca *Writer )WriteTo (wTo _e .Writer )(_bdc int64 ,_fcd error ){if _cab :=_cca .Len ();
_cab > 0{_cgc ,_bg :=wTo .Write (_cca ._cc [_cca ._afb :]);if _cgc > _cab {return 0,_b .New ("\u0072\u0077\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065\u0054\u006f\u003a\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0057\u0072\u0069t\u0065\u0020c\u006f\u0075\u006e\u0074");
};_cca ._afb +=_cgc ;_bdc =int64 (_cgc );if _bg !=nil {return _bdc ,_bg ;};if _cgc !=_cab {return _bdc ,_e .ErrShortWrite ;};};_cca .reset ();return _bdc ,nil ;};func (_f *Reader )ReadProperty (a interface{})error {_ae :=_d .ValueOf (a );for _ae .Kind ()==_d .Ptr {_ae =_ae .Elem ();
};if !_ae .IsValid (){return _bf .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _ab :=_f .align (int (_ae .Type ().Size ()));_ab !=nil {return _ab ;};if _bd :=_c .Read (_f ,_c .LittleEndian ,a );
_bd !=nil {return _bd ;};return nil ;};const _ce =64;func (_bgb *Writer )reset (){_bgb ._cc =_bgb ._cc [:0];_bgb ._afb =0};func (_fd *Writer )Write (p []byte )(_bfcg int ,_gg error ){_ff ,_bfg :=_fd .tryGrowByReslice (len (p ));if !_bfg {var _gfc error ;
_ff ,_gfc =_fd .grow (len (p ));if _gfc !=nil {return 0,_gfc ;};};return copy (_fd ._cc [_ff :],p ),nil ;};func PopRightUI32 (v uint32 )(bool ,uint32 ){return (v &uint32 (1))==1,v >>1};func PopRightUI64 (v uint64 )(bool ,uint64 ){return (v &uint64 (1))==1,v >>1};
func (_ffg *Writer )FillWithByte (fillSize int ,b byte )error {for _fad :=0;_fad < fillSize ;_fad ++{if _gfce :=_ffg .WritePropertyNoAlign (b );_gfce !=nil {return _gfce ;};};return nil ;};func (_bc *Reader )ReadStringProperty (n uint32 )(string ,error ){if _fc :=_bc .align (4);
_fc !=nil {return "",_fc ;};_dd :=make ([]byte ,n );if _cbd :=_c .Read (_bc ,_c .LittleEndian ,&_dd );_cbd !=nil {return "",_cbd ;};return string (_dd ),nil ;};func (_aa *Writer )Skip (n int )error {if n ==0{return nil ;};_ ,_ag :=_aa .Write (make ([]byte ,n ));
return _ag ;};func (_da *Writer )WriteByteAt (b byte ,off int )error {if off >=len (_da ._cc ){return _b .New ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};_da ._cc [off ]=b ;return nil ;};func (_gc *Reader )curPos ()int {return int (_gc .Size ())-_gc .Len ()};
func (_aff *Writer )AlignLength (alignTo int )error {_gf :=_aff .Len ()%alignTo ;if _gf > 0{_ ,_aee :=_aff .Write (make ([]byte ,alignTo -_gf ));if _aee !=nil {return _aee ;};};return nil ;};