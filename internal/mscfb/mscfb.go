//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mscfb ;import (_f "bytes";_dc "encoding/binary";_cfg "fmt";_fa "github.com/richardlehane/msoleps/types";_g "github.com/unidoc/unioffice/v2/internal/mscfb/rw";_cd "io";_fg "os";_e "strconv";_cf "time";_a "unicode";_c "unicode/utf16";);func (_ccb *Reader )GetHeader ()*header {return _ccb ._eeg };
func (_gga *File )Created ()_cf .Time {return _gga ._eef .Time ()};func _fce (_afb *directoryEntryFields )(*_f .Buffer ,error ){_cba :=_f .NewBuffer ([]byte {});for _ ,_aea :=range _afb ._gf {if _fcd :=_dc .Write (_cba ,_dc .LittleEndian ,&_aea );_fcd !=nil {return nil ,_fcd ;
};};if _fab :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._af );_fab !=nil {return nil ,_fab ;};if _gfag :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._dg );_gfag !=nil {return nil ,_gfag ;};if _agad :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._gc );
_agad !=nil {return nil ,_agad ;};if _bba :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._dca );_bba !=nil {return nil ,_bba ;};if _bfg :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._gg );_bfg !=nil {return nil ,_bfg ;};if _ccfa :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._dd );
_ccfa !=nil {return nil ,_ccfa ;};if _bgb :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._ad .DataA );_bgb !=nil {return nil ,_bgb ;};if _gadf :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._ad .DataB );_gadf !=nil {return nil ,_gadf ;};if _edc :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._ad .DataC );
_edc !=nil {return nil ,_edc ;};if _ ,_dec :=_cba .Write (_afb ._ad .DataD [:]);_dec !=nil {return nil ,_dec ;};if _ ,_fef :=_cba .Write (_afb ._adg [:]);_fef !=nil {return nil ,_fef ;};if _eg :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._eef .Low );_eg !=nil {return nil ,_eg ;
};if _cce :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._eef .High );_cce !=nil {return nil ,_cce ;};if _dbaa :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._edb .Low );_dbaa !=nil {return nil ,_dbaa ;};if _bgcb :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._edb .High );
_bgcb !=nil {return nil ,_bgcb ;};if _efac :=_dc .Write (_cba ,_dc .LittleEndian ,&_afb ._gab );_efac !=nil {return nil ,_efac ;};if _ ,_cecf :=_cba .Write (_afb ._gad [:]);_cecf !=nil {return nil ,_cecf ;};return _cba ,nil ;};func (_gfa fileInfo )Mode ()_fg .FileMode {return _gfa .File .mode ()};
func (_eed *Reader )readAt (_deac int64 ,_cgc int )([]byte ,error ){if _eed ._aege {_cga ,_efaf :=_eed ._ccad .(slicer ).Slice (_deac ,_cgc );if _efaf !=nil {return nil ,Error {ErrRead ,"\u0073\u006c\u0069\u0063er\u0020\u0072\u0065\u0061\u0064\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0028"+_efaf .Error ()+"\u0029",_deac };
};return _cga ,nil ;};if _cgc > len (_eed ._egb ){return nil ,Error {ErrRead ,"\u0072\u0065ad\u0020\u006c\u0065n\u0067\u0074\u0068\u0020gre\u0061te\u0072\u0020\u0074\u0068\u0061\u006e\u0020re\u0061\u0064\u0020\u0062\u0075\u0066\u0066e\u0072",int64 (_cgc )};
};if _ ,_ecaa :=_eed ._ccad .ReadAt (_eed ._egb [:_cgc ],_deac );_ecaa !=nil {return nil ,Error {ErrRead ,_ecaa .Error (),_deac };};return _eed ._egb [:_cgc ],nil ;};func (_bcg fileInfo )Name ()string {return _bcg .File .Name };func (_bfc *File )stream (_gde int )([][2]int64 ,error ){var _bae bool ;
var _cdg int ;var _cag int64 ;if _bfc .Size < _gef {_bae =true ;_cdg =_gde /int (_deb )+2;_cag =int64 (_deb );}else {_cdg =_gde /int (_bfc ._eca ._dge )+2;_cag =int64 (_bfc ._eca ._dge );};_aeg :=make ([][2]int64 ,0,_cdg );var _ccf ,_cdf int ;if _bfc ._afec > 0{_dcc ,_cea :=_bfc ._eca .getOffset (_bfc ._fe ,_bae );
if _cea !=nil {return nil ,_cea ;};if _cag -_bfc ._afec >=int64 (_gde ){_aeg =append (_aeg ,[2]int64 {_dcc +_bfc ._afec ,int64 (_gde )});}else {_aeg =append (_aeg ,[2]int64 {_dcc +_bfc ._afec ,_cag -_bfc ._afec });};if _cag -_bfc ._afec <=int64 (_gde ){_bfc ._fe ,_cea =_bfc ._eca .findNext (_bfc ._fe ,_bae );
if _cea !=nil {return nil ,_cea ;};_cdf +=int (_cag -_bfc ._afec );_bfc ._afec =0;}else {_bfc ._afec +=int64 (_gde );};if _aeg [0][1]==int64 (_gde ){return _aeg ,nil ;};if _bfc ._fe ==_ecb {return nil ,Error {ErrRead ,"\u0075\u006ee\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0065\u0061\u0072\u006c\u0079\u0020\u0065\u006e\u0064\u0020\u006f\u0066\u0020\u0063ha\u0069\u006e",int64 (_bfc ._fe )};
};_ccf ++;};for {if _ccf >=cap (_aeg ){return nil ,Error {ErrRead ,"\u0069\u006e\u0064\u0065x\u0020\u006f\u0076\u0065\u0072\u0072\u0075\u006e\u0073\u0020s\u0065c\u0074\u006f\u0072\u0020\u006c\u0065\u006eg\u0074\u0068",int64 (_ccf )};};_baeb ,_gbg :=_bfc ._eca .getOffset (_bfc ._fe ,_bae );
if _gbg !=nil {return nil ,_gbg ;};if _gde -_cdf < int (_cag ){_aeg =append (_aeg ,[2]int64 {_baeb ,int64 (_gde -_cdf )});_bfc ._afec =int64 (_gde -_cdf );return _bbb (_aeg ),nil ;}else {_aeg =append (_aeg ,[2]int64 {_baeb ,_cag });_cdf +=int (_cag );_bfc ._fe ,_gbg =_bfc ._eca .findNext (_bfc ._fe ,_bae );
if _gbg !=nil {return nil ,_gbg ;};if _cdf ==_gde {return _bbb (_aeg ),nil ;};};_ccf ++;};};const (_ed uint8 =0x0;_bc uint8 =0x1;);type Reader struct{_aege bool ;_dge uint32 ;_egb []byte ;_eeg *header ;File []*File ;_edd []*File ;_bec int ;_ccad _cd .ReaderAt ;
_fdf _cd .WriterAt ;};func (_gbd *Reader )Read (b []byte )(_cfge int ,_bab error ){if _gbd ._bec >=len (_gbd .File ){return 0,_cd .EOF ;};return _gbd .File [_gbd ._bec ].Read (b );};func (_dfg fileInfo )ModTime ()_cf .Time {return _dfg .Modified ()};func (_gdgb *Reader )exportDifats (_fcf *_g .Writer )error {if _gdgb ._eeg ._fccg ==0{return nil ;
};return nil ;};func (_bcd *File )ID ()string {return _bcd ._ad .String ()};func (_gec *Reader )setDifats ()error {_gec ._eeg ._caaf =_gec ._eeg ._ecbc [:];if _gec ._eeg ._fccg ==0{return nil ;};_gafe :=(_gec ._dge /4)-1;_afef :=make ([]uint32 ,109,_gec ._eeg ._fccg *_gafe +109);
copy (_afef ,_gec ._eeg ._caaf );_gec ._eeg ._caaf =_afef ;_bag :=_gec ._eeg ._defe ;for _dbf :=0;_dbf < int (_gec ._eeg ._fccg );_dbf ++{_aage ,_cdga :=_gec .readAt (_acd (_gec ._dge ,_bag ),int (_gec ._dge ));if _cdga !=nil {return Error {ErrFormat ,"e\u0072r\u006f\u0072\u0020\u0073\u0065\u0074\u0074\u0069n\u0067\u0020\u0044\u0049FA\u0054\u0028"+_cdga .Error ()+"\u0029",int64 (_bag )};
};for _dgg :=0;_dgg < int (_gafe );_dgg ++{_gec ._eeg ._caaf =append (_gec ._eeg ._caaf ,_dc .LittleEndian .Uint32 (_aage [_dgg *4:_dgg *4+4]));};_bag =_dc .LittleEndian .Uint32 (_aage [len (_aage )-4:]);};return nil ;};const (_b uint8 =0x0;_df uint8 =0x1;
_ff uint8 =0x2;_ga uint8 =0x5;);func (_daa Error )Error ()string {return "\u006ds\u0063\u0066\u0062\u003a\u0020"+_daa ._eaeb +"\u003b\u0020"+_e .FormatInt (_daa ._eefa ,10);};func (_gea *Reader )setHeader ()error {_cge ,_bceb :=_gea .readAt (0,_agdga );
if _bceb !=nil {return _bceb ;};_gea ._eeg =&header {headerFields :_cbgf (_cge )};if _gea ._eeg ._adb !=_fbfg {return Error {ErrFormat ,"\u0062\u0061\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065",int64 (_gea ._eeg ._adb )};};if _gea ._eeg ._abdae ==0x0009||_gea ._eeg ._abdae ==0x000c{_gea ._dge =uint32 (1<<_gea ._eeg ._abdae );
}else {return Error {ErrFormat ,"\u0069\u006c\u006c\u0065ga\u006c\u0020\u0073\u0065\u0063\u0074\u006f\u0072\u0020\u0073\u0069\u007a\u0065",int64 (_gea ._eeg ._abdae )};};if _gea ._eeg ._fccg > 0{_cfgg :=(_gea ._dge /4)-1;if int (_gea ._eeg ._fccg *_cfgg +109)< 0{return Error {ErrFormat ,"\u0044I\u0046A\u0054\u0020\u0069\u006e\u0074 \u006f\u0076e\u0072\u0066\u006c\u006f\u0077",int64 (_gea ._eeg ._fccg )};
};if _gea ._eeg ._fccg *_cfgg +109> _gea ._eeg ._cege +_cfgg {return Error {ErrFormat ,"\u006e\u0075\u006d\u0020\u0044\u0049\u0046\u0041\u0054\u0073 \u0065\u0078\u0063\u0065\u0065\u0064\u0073 \u0046\u0041\u0054\u0020\u0073\u0065\u0063\u0074\u006f\u0072\u0073",int64 (_gea ._eeg ._fccg )};
};};if _gea ._eeg ._adcf > 0{if int (_gea ._dge /4*_gea ._eeg ._adcf )< 0{return Error {ErrFormat ,"m\u0069\u006e\u0069\u0020FA\u0054 \u0069\u006e\u0074\u0020\u006fv\u0065\u0072\u0066\u006c\u006f\u0077",int64 (_gea ._eeg ._adcf )};};if _gea ._eeg ._adcf > _gea ._eeg ._cege *(_gea ._dge /_deb ){return Error {ErrFormat ,"\u006e\u0075\u006d\u0020\u006d\u0069n\u0069\u0020\u0046\u0041\u0054\u0073\u0020\u0065\u0078\u0063\u0065\u0065\u0064s\u0020\u0046\u0041\u0054\u0020\u0073\u0065c\u0074\u006f\u0072\u0073",int64 (_gea ._eeg ._cege )};
};};return nil ;};func (_ccd *File )findLast (_adfd bool )(uint32 ,error ){_dbb :=_ccd ._gab ;for {_ceba ,_ebe :=_ccd ._eca .findNext (_dbb ,_adfd );if _ebe !=nil {return 0,Error {ErrRead ,"\u0062\u0061\u0064\u0020\u0072\u0065\u0061\u0064\u0020\u0066i\u006e\u0064\u0069\u006e\u0067\u0020\u006ee\u0078\u0074\u0020\u0073\u0065\u0063\u0074\u006f\u0072\u0020\u0028"+_ebe .Error ()+"\u0029",0};
};if _ceba ==_ecb {break ;};_dbb =_ceba ;};return _dbb ,nil ;};func (_gbe *Reader )exportHeader (_acfe *_g .Writer )error {if _bbfg :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._adb );_bbfg !=nil {return _bbfg ;};if _dbbe :=_acfe .Skip (16);_dbbe !=nil {return _dbbe ;
};if _cdfg :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._eba );_cdfg !=nil {return _cdfg ;};if _cbf :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._gegb );_cbf !=nil {return _cbf ;};if _ceec :=_dc .Write (_acfe ,_dc .LittleEndian ,uint16 (0xfffe));
_ceec !=nil {return _ceec ;};if _fga :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._abdae );_fga !=nil {return _fga ;};if _ggd :=_dc .Write (_acfe ,_dc .LittleEndian ,uint16 (0x0006));_ggd !=nil {return _ggd ;};if _daaf :=_acfe .Skip (6);_daaf !=nil {return _daaf ;
};if _cgbd :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._aed );_cgbd !=nil {return _cgbd ;};if _bcebd :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._cege );_bcebd !=nil {return _bcebd ;};if _baf :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._deg );
_baf !=nil {return _baf ;};if _feabc :=_acfe .Skip (4);_feabc !=nil {return _feabc ;};if _cae :=_dc .Write (_acfe ,_dc .LittleEndian ,uint32 (0x00001000));_cae !=nil {return _cae ;};if _eag :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._bfe );_eag !=nil {return _eag ;
};if _cegf :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._adcf );_cegf !=nil {return _cegf ;};if _ebeb :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._defe );_ebeb !=nil {return _ebeb ;};if _bcea :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._fccg );
_bcea !=nil {return _bcea ;};for _dce :=0;_dce < 109;_dce ++{if _fcab :=_dc .Write (_acfe ,_dc .LittleEndian ,&_gbe ._eeg ._ecbc [_dce ]);_fcab !=nil {return _fcab ;};};return nil ;};func (_dfb Error )Typ ()int {return _dfb ._dbbc };func (_aaa *File )ensureWriterAt ()error {if _aaa ._eca ._fdf ==nil {_eff ,_ba :=_aaa ._eca ._ccad .(_cd .WriterAt );
if !_ba {return Error {ErrWrite ,"\u006d\u0073\u0063\u0066\u0062\u002e\u004ee\u0077\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0067\u0069\u0076\u0065n\u0020R\u0065\u0061\u0064\u0065\u0072\u0041t\u0020\u0063\u006f\u006e\u0076\u0065\u0072t\u0069\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0020\u0069\u006f\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u0041\u0074\u0020\u0069n\u0020\u006f\u0072\u0064\u0065\u0072\u0020\u0074\u006f\u0020\u0077\u0072\u0069t\u0065",0};
};_aaa ._eca ._fdf =_eff ;};return nil ;};func (_aaf *Reader )exportFAT (_dee *_g .Writer ,_fba []uint32 )error {if _aaf ._eeg ._cege ==0{return nil ;};_fdg :=_f .NewBuffer ([]byte {});if _fdded :=_dc .Write (_fdg ,_dc .LittleEndian ,_eae );_fdded !=nil {return _fdded ;
};for _eegd :=0;_eegd < len (_fba )-1;_eegd ++{for _ebac :=_fba [_eegd ];_ebac < _fba [_eegd +1]-1;_ebac ++{if _ddb :=_dc .Write (_fdg ,_dc .LittleEndian ,_ebac );_ddb !=nil {return _ddb ;};};if _ddc :=_dc .Write (_fdg ,_dc .LittleEndian ,_ecb );_ddc !=nil {return _ddc ;
};};_gdad :=512;for _ ,_ddf :=range _fdg .Bytes (){if _ddee :=_dee .WriteByteAt (_ddf ,_gdad );_ddee !=nil {return _ddee ;};_gdad ++;};return nil ;};func (_cfc *File )Modified ()_cf .Time {return _cfc ._edb .Time ()};func (_ag *Reader )setDirEntries ()error {_ffa :=20;
if _ag ._eeg ._aed > 0{_ffa =int (_ag ._eeg ._aed );};_fc :=make ([]*File ,0,_ffa );_db :=make (map[uint32 ]bool );_fae :=int (_ag ._dge /_fea );_ce :=_ag ._eeg ._deg ;for _ce !=_ecb {_gd ,_gfg :=_ag .readAt (_acd (_ag ._dge ,_ce ),int (_ag ._dge ));if _gfg !=nil {return Error {ErrRead ,"\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020e\u006e\u0074\u0072\u0069\u0065\u0073\u0020r\u0065\u0061\u0064\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0028"+_gfg .Error ()+"\u0029",_acd (_ag ._dge ,_ce )};
};for _edba :=0;_edba < _fae ;_edba ++{_aga :=&File {_eca :_ag };_aga .directoryEntryFields =_gb (_gd [_edba *int (_fea ):]);_gge (_ag ._eeg ._gegb ,_aga );_aga ._fe =_aga ._gab ;_fc =append (_fc ,_aga );};_cdc ,_gfg :=_ag .findNext (_ce ,false );if _gfg !=nil {return Error {ErrRead ,"d\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0065\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u0065r\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006eg \u0073\u0065\u0063t\u006fr\u0020\u0028"+_gfg .Error ()+"\u0029",int64 (_cdc )};
};if _cdc <=_ce {if _cdc ==_ce ||_db [_cdc ]{return Error {ErrRead ,"\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020e\u006e\u0074\u0072\u0069\u0065\u0073\u0020s\u0065\u0063\u0074\u006f\u0072\u0020\u0063\u0079\u0063\u006c\u0065",int64 (_cdc )};
};_db [_cdc ]=true ;};_ce =_cdc ;};_ag ._edd =_fc ;return nil ;};func (_effg *File )reset (){_effg ._bfa =0;_effg ._afec =0;_effg ._fe =_effg ._gab };func (_efc *Reader )exportDirEntries (_cfgc *_g .Writer )error {if int64 (_cfgc .Len ())!=_acd (_efc ._dge ,_efc ._eeg ._deg ){return Error {ErrWrite ,_cfg .Sprintf ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020l\u0065\u006e\u0067t\u0068:\u0020\u0025\u0076",_cfgc .Len ()),0};
};for _ ,_beg :=range _efc ._edd {_gfb ,_gcf :=_fce (_beg .directoryEntryFields );if _gcf !=nil {return _gcf ;};if _ ,_fceg :=_cd .Copy (_cfgc ,_gfb );_fceg !=nil {return _fceg ;};};return nil ;};func (_ccc *File )SetEntryContent (b []byte )error {if _bff :=_ccc .ensureWriterAt ();
_bff !=nil {return _bff ;};_ccc .reset ();if _fbf :=_ccc .changeSize (int64 (len (b )));_fbf !=nil {return _fbf ;};_ ,_efa :=_ccc .Write (b );return _efa ;};type header struct{*headerFields ;_caaf []uint32 ;_gfdc []uint32 ;_bcb []uint32 ;};const (_fdd uint32 =0xFFFFFFFA;
_dfge uint32 =0xFFFFFFFC;_eae uint32 =0xFFFFFFFD;_ecb uint32 =0xFFFFFFFE;_gba uint32 =0xFFFFFFFF;_bbf byte =0xFF;_agdg uint32 =0xFFFFFFFA;_ceg uint32 =0xFFFFFFFF;);func (_fdgb *Reader )saveToFatLocs (_afee uint32 ,_cde interface{},_bbfgc bool )error {_ebf :=_f .NewBuffer ([]byte {});
if _agde :=_dc .Write (_ebf ,_dc .LittleEndian ,_cde );_agde !=nil {return _agde ;};_fcae :=_fdgb .findFatLocsOffset (_bbfgc )+int64 (_afee *4);_ ,_abg :=_fdgb ._fdf .WriteAt (_ebf .Bytes (),_fcae );return _abg ;};type File struct{Name string ;Initial uint16 ;
Path []string ;Size int64 ;_bfa int64 ;_fe uint32 ;_afec int64 ;*directoryEntryFields ;_eca *Reader ;};func (_efg *Reader )Debug ()map[string ][]uint32 {_gdc :=map[string ][]uint32 {"s\u0065\u0063\u0074\u006f\u0072\u0020\u0073\u0069\u007a\u0065":[]uint32 {_efg ._dge },"\u006d\u0069\u006e\u0069\u0020\u0066\u0061\u0074\u0020\u006c\u006f\u0063\u0073":_efg ._eeg ._gfdc ,"\u006d\u0069n\u0069\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u006c\u006f\u0063\u0073":_efg ._eeg ._bcb ,"\u0064\u0069r\u0065\u0063\u0074o\u0072\u0079\u0020\u0073\u0065\u0063\u0074\u006f\u0072":[]uint32 {_efg ._eeg ._deg },"\u006d\u0069\u006e\u0069 s\u0074\u0072\u0065\u0061\u006d\u0020\u0073\u0074\u0061\u0072\u0074\u002f\u0073\u0069z\u0065":[]uint32 {_efg .File [0]._gab ,_dc .LittleEndian .Uint32 (_efg .File [0]._gad [:])}};
for _acbg ,_ecef :=_efg .Next ();_ecef ==nil ;_acbg ,_ecef =_efg .Next (){_gdc [_acbg .Name +" \u0073\u0074\u0061\u0072\u0074\u002f\u0073\u0069\u007a\u0065"]=[]uint32 {_acbg ._gab ,_dc .LittleEndian .Uint32 (_acbg ._gad [:])};};return _gdc ;};func (_gbf *Reader )ID ()string {return _gbf .File [0].ID ()};
func (_acf *Reader )Export ()([]byte ,error ){_aedee :=_g .NewWriter ();if _bbff :=_acf .exportHeader (_aedee );_bbff !=nil {return nil ,_bbff ;};if _ddde :=_aedee .FillWithByte (512,_bbf );_ddde !=nil {return nil ,_ddde ;};_fbd :=[]uint32 {};if _bege :=_acf .exportDifats (_aedee );
_bege !=nil {return nil ,_bege ;};_gbc ,_efcf ,_cda :=_acf .exportMiniStream ();if _cda !=nil {return nil ,_cda ;};_fbd =append (_fbd ,uint32 (_aedee .Len ())/_acf ._dge );if _agcc :=_acf .exportDirEntries (_aedee );_agcc !=nil {return nil ,_agcc ;};_fbd =append (_fbd ,uint32 (_aedee .Len ())/_acf ._dge );
if _ ,_eeac :=_gbc .WriteTo (_aedee );_eeac !=nil {return nil ,_eeac ;};_fbd =append (_fbd ,uint32 (_aedee .Len ())/_acf ._dge );if _ ,_feab :=_efcf .WriteTo (_aedee );_feab !=nil {return nil ,_feab ;};_fbd =append (_fbd ,uint32 (_aedee .Len ())/_acf ._dge );
if _gae :=_acf .exportFAT (_aedee ,_fbd );_gae !=nil {return nil ,_gae ;};return _aedee .Bytes (),nil ;};const _agdga int =8+16+10+6+12+8+16+109*4;const (ErrFormat =iota ;ErrRead ;ErrSeek ;ErrWrite ;ErrTraverse ;);func (_cdba *Reader )findFatLocsOffset (_dde bool )int64 {var _begb uint32 ;
if _dde {_begb =_cdba ._eeg ._gfdc [0];}else {_begb =_cdba ._eeg ._caaf [0];};return _acd (_cdba ._dge ,_begb );};func _cbgf (_cegc []byte )*headerFields {_bfeb :=&headerFields {};_bfeb ._adb =_dc .LittleEndian .Uint64 (_cegc [:8]);_bfeb ._eba =_dc .LittleEndian .Uint16 (_cegc [24:26]);
_bfeb ._gegb =_dc .LittleEndian .Uint16 (_cegc [26:28]);_bfeb ._abdae =_dc .LittleEndian .Uint16 (_cegc [30:32]);_bfeb ._aed =_dc .LittleEndian .Uint32 (_cegc [40:44]);_bfeb ._cege =_dc .LittleEndian .Uint32 (_cegc [44:48]);_bfeb ._deg =_dc .LittleEndian .Uint32 (_cegc [48:52]);
_bfeb ._bfe =_dc .LittleEndian .Uint32 (_cegc [60:64]);_bfeb ._adcf =_dc .LittleEndian .Uint32 (_cegc [64:68]);_bfeb ._defe =_dc .LittleEndian .Uint32 (_cegc [68:72]);_bfeb ._fccg =_dc .LittleEndian .Uint32 (_cegc [72:76]);var _gfae int ;for _dfe :=76;
_dfe < 512;_dfe =_dfe +4{_bfeb ._ecbc [_gfae ]=_dc .LittleEndian .Uint32 (_cegc [_dfe :_dfe +4]);_gfae ++;};return _bfeb ;};func _gge (_eb uint16 ,_ca *File ){_fad (_ca );if _ca ._dg !=_ff {return ;};if _eb > 3{_ca .Size =int64 (_dc .LittleEndian .Uint64 (_ca ._gad [:]));
}else {_ca .Size =int64 (_dc .LittleEndian .Uint32 (_ca ._gad [:4]));};};func (_acb *Reader )Next ()(*File ,error ){_acb ._bec ++;if _acb ._bec >=len (_acb .File ){return nil ,_cd .EOF ;};return _acb .File [_acb ._bec ],nil ;};func (_fcc fileInfo )IsDir ()bool {return _fcc .mode ().IsDir ()};
func (_ecaaa *Reader )Modified ()_cf .Time {return _ecaaa .File [0].Modified ()};func (_dgb *File )Read (b []byte )(int ,error ){if _dgb .Size < 1||_dgb ._bfa >=_dgb .Size {return 0,_cd .EOF ;};_bd :=len (b );if int64 (_bd )> _dgb .Size -_dgb ._bfa {_bd =int (_dgb .Size -_dgb ._bfa );
};_fb ,_fcg :=_dgb .stream (_bd );if _fcg !=nil {return 0,_fcg ;};var _fee ,_cfd int ;for _ ,_eec :=range _fb {_ef :=_fee +int (_eec [1]);if _ef < _fee ||_ef > _bd {return 0,Error {ErrRead ,"\u0062a\u0064 \u0072\u0065\u0061\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068",int64 (_ef )};
};_be ,_dff :=_dgb ._eca ._ccad .ReadAt (b [_fee :_ef ],_eec [0]);_cfd =_cfd +_be ;if _dff !=nil {_dgb ._bfa +=int64 (_cfd );return _cfd ,Error {ErrRead ,"\u0075n\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0072\u0065a\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0020\u0028"+_dff .Error ()+"\u0029",int64 (_fee )};
};_fee =_ef ;};_dgb ._bfa +=int64 (_cfd );if _cfd !=_bd {_fcg =Error {ErrRead ,"\u0062\u0079\u0074e\u0073\u0020\u0072\u0065\u0061\u0064\u0020\u0064\u006f\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020r\u0065\u0061\u0064\u0020\u0073\u0069\u007a\u0065",int64 (_cfd )};
}else if _cfd < len (b ){_fcg =_cd .EOF ;};return _cfd ,_fcg ;};const (_fbfg uint64 =0xE11AB1A1E011CFD0;_deb uint32 =64;_gef int64 =4096;_fea uint32 =128;);func _bbb (_fca [][2]int64 )[][2]int64 {_gged :=len (_fca );for _agaa ,_cad :=0,0;_agaa < _gged &&_cad +1< len (_fca );
_agaa ++{if _fca [_cad ][0]+_fca [_cad ][1]==_fca [_cad +1][0]{_fca [_cad ][1]=_fca [_cad ][1]+_fca [_cad +1][1];for _bcdg :=range _fca [_cad +1:len (_fca )-1]{_fca [_cad +1+_bcdg ]=_fca [_bcdg +_cad +2];};_fca =_fca [:len (_fca )-1];}else {_cad +=1;};
};return _fca ;};func (_ec *Reader )traverse ()error {_ec .File =make ([]*File ,0,len (_ec ._edd ));var (_fgb func (int ,[]string );_ae error ;_aa int ;);_fgb =func (_cb int ,_adge []string ){_aa ++;if _aa > len (_ec ._edd ){_ae =Error {ErrTraverse ,"\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c\u0020\u0063o\u0075\u006e\u0074\u0065\u0072\u0020\u006f\u0076\u0065\u0072f\u006c\u006f\u0077",int64 (_cb )};
return ;};if _cb < 0||_cb >=len (_ec ._edd ){_ae =Error {ErrTraverse ,"\u0069\u006c\u006ceg\u0061\u006c\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c\u0020\u0069\u006e\u0064\u0065\u0078",int64 (_cb )};return ;};_bf :=_ec ._edd [_cb ];if _bf ._dca !=_ceg {_fgb (int (_bf ._dca ),_adge );
};_ec .File =append (_ec .File ,_bf );_bf .Path =_adge ;if _bf ._dd !=_ceg {if _cb > 0{_fgb (int (_bf ._dd ),append (_adge ,_bf .Name ));}else {_fgb (int (_bf ._dd ),_adge );};};if _bf ._gg !=_ceg {_fgb (int (_bf ._gg ),_adge );};return ;};_fgb (0,[]string {});
return _ae ;};func (_def *File )seek (_dbd int64 )error {var _gda bool ;var _agf int64 ;if _def .Size < _gef {_gda =true ;_agf =64;}else {_agf =int64 (_def ._eca ._dge );};var _fbe int64 ;var _bgc error ;if _def ._afec > 0{if _agf -_def ._afec <=_dbd {_def ._fe ,_bgc =_def ._eca .findNext (_def ._fe ,_gda );
if _bgc !=nil {return _bgc ;};_fbe +=_agf -_def ._afec ;_def ._afec =0;if _fbe ==_dbd {return nil ;};}else {_def ._afec +=_dbd ;return nil ;};if _def ._fe ==_ecb {return Error {ErrRead ,"\u0075\u006ee\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0065\u0061\u0072\u006c\u0079\u0020\u0065\u006e\u0064\u0020\u006f\u0066\u0020\u0063ha\u0069\u006e",int64 (_def ._fe )};
};};for {if _dbd -_fbe < _agf {_def ._afec =_dbd -_fbe ;return nil ;}else {_fbe +=_agf ;_def ._fe ,_bgc =_def ._eca .findNext (_def ._fe ,_gda );if _bgc !=nil {return _bgc ;};if _fbe ==_dbd {return nil ;};};};};func (_de *File )changeSize (_cbg int64 )error {if _cbg ==_de .Size {return nil ;
};var _ebb *File ;for _ ,_ea :=range _de ._eca ._edd {if _ea .Name ==_de .Name {_ebb =_ea ;break ;};};if _ebb ==nil {return _cfg .Errorf ("\u004e\u006f\u0020\u0064\u0069\u0072e\u0063\u0074\u006f\u0072\u0079\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u0066o\u0072\u0020\u0061\u0020\u0066\u0069\u006ce\u003a\u0020\u0025\u0073",_de .Name );
};_bg :=_f .NewBuffer ([]byte {});if _dfd :=_dc .Write (_bg ,_dc .LittleEndian ,_cbg );_dfd !=nil {return _dfd ;};for _gdg ,_bb :=range _bg .Bytes (){_ebb ._gad [_gdg ]=_bb ;};var _cbe int64 ;var _dea bool ;if _de .Size < _gef {_dea =true ;_cbe =int64 (_deb );
}else {_cbe =int64 (_de ._eca ._dge );};_ceca :=int ((_de .Size -1)/_cbe )+1;_caa :=int ((_cbg -1)/_cbe )+1;if _ceca < _caa {_cg ,_cfgf :=_de .findLast (_dea );if _cfgf !=nil {return _cfgf ;};_agd ,_cfgf :=_de ._eca .findNextFreeSector (_dea );if _cfgf !=nil {return _cfgf ;
};for _dcaa :=_caa -_ceca ;_dcaa > 0;_dcaa --{if _ac :=_de ._eca .saveToFatLocs (_cg ,_agd ,_dea );_ac !=nil {return _ac ;};if _dcaa > 1{_cg =_agd ;_agd ++;}else if _gdga :=_de ._eca .saveToFatLocs (_agd ,_ecb ,_dea );_gdga !=nil {return _gdga ;};};}else if _ceca > _caa {_gdd :=_de ._gab ;
var _dab error ;for _bcdc :=0;_bcdc < _caa -1;_bcdc ++{_gdd ,_dab =_de ._eca .findNext (_gdd ,_dea );if _dab !=nil {return _dab ;};};if _ecf :=_de ._eca .saveToFatLocs (_gdd ,_ecb ,_dea );_ecf !=nil {return _ecf ;};};_de .Size =_cbg ;return nil ;};type directoryEntryFields struct{_gf [32]uint16 ;
_af uint16 ;_dg uint8 ;_gc uint8 ;_dca uint32 ;_gg uint32 ;_dd uint32 ;_ad _fa .Guid ;_adg [4]byte ;_eef _fa .FileTime ;_edb _fa .FileTime ;_gab uint32 ;_gad [8]byte ;};func (_gdb *File )Write (b []byte )(int ,error ){if _gdb .Size < 1||_gdb ._bfa >=_gdb .Size {return 0,_cd .EOF ;
};if _ggg :=_gdb .ensureWriterAt ();_ggg !=nil {return 0,_ggg ;};_ebd :=len (b );if int64 (_ebd )> _gdb .Size -_gdb ._bfa {_ebd =int (_gdb .Size -_gdb ._bfa );};_ab ,_cec :=_gdb .stream (_ebd );if _cec !=nil {return 0,_cec ;};var _bda ,_feef int ;for _ ,_dfc :=range _ab {_aag :=_bda +int (_dfc [1]);
if _aag < _bda ||_aag > _ebd {return 0,Error {ErrWrite ,"\u0062\u0061d\u0020\u0077\u0072i\u0074\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068",int64 (_aag )};};_abd ,_aae :=_gdb ._eca ._fdf .WriteAt (b [_bda :_aag ],_dfc [0]);_feef =_feef +_abd ;if _aae !=nil {_gdb ._bfa +=int64 (_feef );
return _feef ,Error {ErrWrite ,"\u0075n\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0077\u0072i\u0074\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0020\u0028"+_aae .Error ()+"\u0029",int64 (_bda )};};_bda =_aag ;};_gdb ._bfa +=int64 (_feef );if _feef !=_ebd {_cec =Error {ErrWrite ,"\u0062\u0079t\u0065\u0073\u0020\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0064\u006f\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0077\u0072\u0069\u0074\u0065\u0020\u0073\u0069\u007a\u0065",int64 (_feef )};
}else if _feef < len (b ){_cec =_cd .EOF ;};return _feef ,_cec ;};type slicer interface{Slice (_fdde int64 ,_bcee int )([]byte ,error );};func (_cc *File )FileInfo ()_fg .FileInfo {return fileInfo {_cc }};func (_eead *Reader )GetEntry (entryName string )(*File ,error ){for _ddd ,_ecc :=_eead .Next ();
_ecc ==nil ;_ddd ,_ecc =_eead .Next (){if _ddd .Name ==entryName {return _ddd ,nil ;};};return nil ,Error {ErrTraverse ,"\u004e\u006f\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u0066o\u0075\u006e\u0064\u0020\u0066\u006f\u0072 \u0067\u0069\u0076\u0065\u006e\u0020\u006e\u0061\u006d\u0065\u002e",0};
};const _ee int =64+4*4+16+4+8*2+4+8;func (_eaab *File )Seek (offset int64 ,whence int )(int64 ,error ){var _bgd int64 ;switch whence {default:return 0,Error {ErrSeek ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0077h\u0065\u006e\u0063\u0065",int64 (whence )};
case 0:_bgd =offset ;case 1:_bgd =_eaab ._bfa +offset ;case 2:_bgd =_eaab .Size -offset ;};switch {case _bgd < 0:return _eaab ._bfa ,Error {ErrSeek ,"\u0063\u0061\u006e'\u0074\u0020\u0073\u0065e\u006b\u0020\u0062\u0065\u0066\u006f\u0072e\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u006f\u0066\u0020\u0046\u0069\u006c\u0065",_bgd };
case _bgd >=_eaab .Size :return _eaab ._bfa ,Error {ErrSeek ,"c\u0061\u006e\u0027\u0074\u0020\u0073e\u0065\u006b\u0020\u0070\u0061\u0073\u0074\u0020\u0046i\u006c\u0065\u0020l\u0065n\u0067\u0074\u0068",_bgd };case _bgd ==_eaab ._bfa :return _bgd ,nil ;case _bgd > _eaab ._bfa :_ffad :=_eaab ._bfa ;
_eaab ._bfa =_bgd ;return _eaab ._bfa ,_eaab .seek (_bgd -_ffad );};if _eaab ._afec >=_eaab ._bfa -_bgd {_eaab ._afec =_eaab ._afec -(_eaab ._bfa -_bgd );_eaab ._bfa =_bgd ;return _eaab ._bfa ,nil ;};_eaab ._afec =0;_eaab ._fe =_eaab ._gab ;_eaab ._bfa =_bgd ;
return _eaab ._bfa ,_eaab .seek (_bgd );};type headerFields struct{_adb uint64 ;_ [16]byte ;_eba uint16 ;_gegb uint16 ;_ [2]byte ;_abdae uint16 ;_ [2]byte ;_ [6]byte ;_aed uint32 ;_cege uint32 ;_deg uint32 ;_ [4]byte ;_ [4]byte ;_bfe uint32 ;_adcf uint32 ;
_defe uint32 ;_fccg uint32 ;_ecbc [109]uint32 ;};func (_feb *Reader )findNext (_gbgb uint32 ,_ead bool )(uint32 ,error ){_fda :=_feb ._dge /4;_dda :=int (_gbgb /_fda );var _cac uint32 ;if _ead {if _dda < 0||_dda >=len (_feb ._eeg ._gfdc ){return 0,Error {ErrRead ,"\u006d\u0069\u006e\u0069\u0073e\u0063\u0074\u006f\u0072\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0069\u0073 \u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u006d\u0069\u006e\u0069\u0046\u0041\u0054\u0020\u0072\u0061\u006e\u0067\u0065",int64 (_dda )};
};_cac =_feb ._eeg ._gfdc [_dda ];}else {if _dda < 0||_dda >=len (_feb ._eeg ._caaf ){return 0,Error {ErrRead ,"\u0046\u0041\u0054\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0069\u0073\u0020\u006f\u0075t\u0073i\u0064\u0065\u0020\u0044\u0049\u0046\u0041\u0054\u0020\u0072\u0061\u006e\u0067\u0065",int64 (_dda )};
};_cac =_feb ._eeg ._caaf [_dda ];};_ddg :=_gbgb %_fda ;_dggc :=_acd (_feb ._dge ,_cac )+int64 (_ddg *4);_aede ,_bdd :=_feb .readAt (_dggc ,4);if _bdd !=nil {return 0,Error {ErrRead ,"\u0062\u0061\u0064\u0020\u0072\u0065\u0061\u0064\u0020\u0066i\u006e\u0064\u0069\u006e\u0067\u0020\u006ee\u0078\u0074\u0020\u0073\u0065\u0063\u0074\u006f\u0072\u0020\u0028"+_bdd .Error ()+"\u0029",_dggc };
};_abcg :=_dc .LittleEndian .Uint32 (_aede );return _abcg ,nil ;};func (_abda *File )ReadAt (p []byte ,off int64 )(_eaa int ,_bdb error ){_dfcb ,_fd ,_aaeg :=_abda ._bfa ,_abda ._afec ,_abda ._fe ;_ ,_bdb =_abda .Seek (off ,0);if _bdb ==nil {_eaa ,_bdb =_abda .Read (p );
};_abda ._bfa ,_abda ._afec ,_abda ._fe =_dfcb ,_fd ,_aaeg ;return _eaa ,_bdb ;};func (_cbc *Reader )Created ()_cf .Time {return _cbc .File [0].Created ()};func (_bce *File )mode ()_fg .FileMode {if _bce ._dg !=_ff {return _fg .ModeDir |0777;};return 0666;
};func (_ggc fileInfo )Sys ()interface{}{return nil };func (_geg fileInfo )Size ()int64 {if _geg ._dg !=_ff {return 0;};return _geg .File .Size ;};func (_fgg *Reader )getOffset (_aad uint32 ,_aef bool )(int64 ,error ){if _aef {_cgd :=_fgg ._dge /64;_aff :=int (_aad /_cgd );
if _aff >=len (_fgg ._eeg ._bcb ){return 0,Error {ErrRead ,"\u006di\u006e\u0069s\u0065\u0063\u0074o\u0072\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0069\u0073\u0020\u006f\u0075t\u0073\u0069\u0064\u0065\u0020\u006d\u0069\u006e\u0069\u0073\u0065c\u0074\u006f\u0072\u0020\u0072\u0061\u006e\u0067\u0065",int64 (_aff )};
};_cca :=_aad %_cgd ;return int64 ((_fgg ._eeg ._bcb [_aff ]+1)*_fgg ._dge +_cca *64),nil ;};return _acd (_fgg ._dge ,_aad ),nil ;};func (_fed *Reader )exportMiniStream ()(*_g .Writer ,*_g .Writer ,error ){_gcge ,_bcge :=_g .NewWriter (),_g .NewWriter ();
_fge :=uint32 (0);for _ ,_dgdc :=range _fed .File {if _dgdc .Size ==0{continue ;};_dgdc .reset ();_dgdc ._gab =_fge ;_gbdc :=int (_dgdc .Size )/int (_deb );if int (_dgdc .Size )%int (_deb )!=0{_gbdc ++;};for _dabb :=1;_dabb < _gbdc ;_dabb ++{_fge ++;if _bfcb :=_dc .Write (_gcge ,_dc .LittleEndian ,_fge );
_bfcb !=nil {return nil ,nil ,_bfcb ;};};if _gce :=_dc .Write (_gcge ,_dc .LittleEndian ,_ecb );_gce !=nil {return nil ,nil ,_gce ;};_fge ++;if _ ,_baga :=_cd .Copy (_bcge ,_dgdc );_baga !=nil {return nil ,nil ,_baga ;};if _egbb :=_bcge .AlignLength (64);
_egbb !=nil {return nil ,nil ,_egbb ;};};if _dfaa :=_gcge .FillWithByte (int (_fed ._dge )-_gcge .Len (),_bbf );_dfaa !=nil {return nil ,nil ,_dfaa ;};if _efd :=_bcge .AlignLength (int (_fed ._dge ));_efd !=nil {return nil ,nil ,_efd ;};return _gcge ,_bcge ,nil ;
};func (_cgf *File )WriteAt (p []byte ,off int64 )(_dgdb int ,_bcc error ){_ada ,_gfd ,_bdc :=_cgf ._bfa ,_cgf ._afec ,_cgf ._fe ;_ ,_bcc =_cgf .Seek (off ,0);if _bcc ==nil {_dgdb ,_bcc =_cgf .Write (p );};_cgf ._bfa ,_cgf ._afec ,_cgf ._fe =_ada ,_gfd ,_bdc ;
return _dgdb ,_bcc ;};type fileInfo struct{*File };func (_bdf *Reader )setMiniStream ()error {if _bdf ._edd [0]._gab ==_ecb ||_bdf ._eeg ._bfe ==_ecb ||_bdf ._eeg ._adcf ==0{return nil ;};_bfec :=int (_bdf ._eeg ._adcf );_bdf ._eeg ._gfdc =make ([]uint32 ,_bfec );
_bdf ._eeg ._gfdc [0]=_bdf ._eeg ._bfe ;for _ggcf :=1;_ggcf < _bfec ;_ggcf ++{_agc ,_dfa :=_bdf .findNext (_bdf ._eeg ._gfdc [_ggcf -1],false );if _dfa !=nil {return Error {ErrFormat ,"s\u0065\u0074\u0074\u0069ng\u0020m\u0069\u006e\u0069\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0028"+_dfa .Error ()+"\u0029",int64 (_bdf ._eeg ._gfdc [_ggcf -1])};
};_bdf ._eeg ._gfdc [_ggcf ]=_agc ;};_bfec =int (_bdf ._dge /4*_bdf ._eeg ._adcf );_bdf ._eeg ._bcb =make ([]uint32 ,0,_bfec );_bbbc :=_bdf ._edd [0]._gab ;var _eee error ;for _bbbc !=_ecb {_bdf ._eeg ._bcb =append (_bdf ._eeg ._bcb ,_bbbc );_bbbc ,_eee =_bdf .findNext (_bbbc ,false );
if _eee !=nil {return Error {ErrFormat ,"s\u0065\u0074\u0074\u0069ng\u0020m\u0069\u006e\u0069\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0028"+_eee .Error ()+"\u0029",int64 (_bbbc )};};};return nil ;};func _acd (_dag ,_fcdb uint32 )int64 {return int64 ((_fcdb +1)*_dag )};
type Error struct{_dbbc int ;_eaeb string ;_eefa int64 ;};func (_fbfa *Reader )findNextFreeSector (_ace bool )(uint32 ,error ){_aaac :=_fbfa .findFatLocsOffset (_ace );_gcg :=uint32 (0);_bcbf :=_fbfa ._dge /4;for {_ecfc ,_ebbd :=_fbfa .readAt (_aaac ,4);
if _ebbd !=nil {return 0,Error {ErrRead ,"\u0062\u0061\u0064\u0020\u0072\u0065\u0061\u0064\u0020\u0066i\u006e\u0064\u0069\u006e\u0067\u0020\u006ee\u0078\u0074\u0020\u0073\u0065\u0063\u0074\u006f\u0072\u0020\u0028"+_ebbd .Error ()+"\u0029",_aaac };};_bga :=_dc .LittleEndian .Uint32 (_ecfc );
if _bga ==_gba {break ;};if _gcg >=_bcbf {return 0,Error {ErrRead ,"\u0065\u006e\u0064\u0020of\u0020\u006d\u0069\u006e\u0069\u0046\u0061\u0074\u0020\u0072\u0065\u0061\u0063\u0068e\u0064",_aaac };};_gcg ++;_aaac +=4;};return _gcg ,nil ;};func _fad (_afe *File ){if _afe ._af < 4||_afe ._af > 64{return ;
};_dba :=int (_afe ._af /2-1);_afe .Initial =_afe ._gf [0];var _ceb int ;if !_a .IsPrint (rune (_afe .Initial )){_ceb =1;};_afe .Name =string (_c .Decode (_afe ._gf [_ceb :_dba ]));};func New (ra _cd .ReaderAt )(*Reader ,error ){_dcd :=&Reader {_ccad :ra };
if _ ,_ddea :=ra .(slicer );_ddea {_dcd ._aege =true ;}else {_dcd ._egb =make ([]byte ,_agdga );};if _eaaba :=_dcd .setHeader ();_eaaba !=nil {return nil ,_eaaba ;};if !_dcd ._aege &&int (_dcd ._dge )> len (_dcd ._egb ){_dcd ._egb =make ([]byte ,_dcd ._dge );
};if _dgde :=_dcd .setDifats ();_dgde !=nil {return nil ,_dgde ;};if _eea :=_dcd .setDirEntries ();_eea !=nil {return nil ,_eea ;};if _dgbc :=_dcd .setMiniStream ();_dgbc !=nil {return nil ,_dgbc ;};if _cee :=_dcd .traverse ();_cee !=nil {return nil ,_cee ;
};return _dcd ,nil ;};func _gb (_cdb []byte )*directoryEntryFields {_ge :=&directoryEntryFields {};for _dgd :=range _ge ._gf {_ge ._gf [_dgd ]=_dc .LittleEndian .Uint16 (_cdb [_dgd *2:_dgd *2+2]);};_ge ._af =_dc .LittleEndian .Uint16 (_cdb [64:66]);_ge ._dg =uint8 (_cdb [66]);
_ge ._gc =uint8 (_cdb [67]);_ge ._dca =_dc .LittleEndian .Uint32 (_cdb [68:72]);_ge ._gg =_dc .LittleEndian .Uint32 (_cdb [72:76]);_ge ._dd =_dc .LittleEndian .Uint32 (_cdb [76:80]);_ge ._ad =_fa .MustGuid (_cdb [80:96]);copy (_ge ._adg [:],_cdb [96:100]);
_ge ._eef =_fa .MustFileTime (_cdb [100:108]);_ge ._edb =_fa .MustFileTime (_cdb [108:116]);_ge ._gab =_dc .LittleEndian .Uint32 (_cdb [116:120]);copy (_ge ._gad [:],_cdb [120:128]);return _ge ;};