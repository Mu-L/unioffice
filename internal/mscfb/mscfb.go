//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mscfb ;import (_a "bytes";_d "encoding/binary";_e "fmt";_ec "github.com/richardlehane/msoleps/types";_g "github.com/unidoc/unioffice/v2/internal/mscfb/rw";_cd "io";_bbg "os";_b "strconv";_aa "time";_f "unicode";_bb "unicode/utf16";);func (_egbf *Reader )Next ()(*File ,error ){_egbf ._gdag ++;
if _egbf ._gdag >=len (_egbf .File ){return nil ,_cd .EOF ;};return _egbf .File [_egbf ._gdag ],nil ;};func (_bdde *File )SetEntryContent (b []byte )error {if _ecb :=_bdde .ensureWriterAt ();_ecb !=nil {return _ecb ;};_bdde .reset ();if _cag :=_bdde .changeSize (int64 (len (b )));
_cag !=nil {return _cag ;};_ ,_cf :=_bdde .Write (b );return _cf ;};func (_fd *Reader )setDirEntries ()error {_gc :=20;if _fd ._fcaf ._gbee > 0{_gc =int (_fd ._fcaf ._gbee );};_dc :=make ([]*File ,0,_gc );_gd :=make (map[uint32 ]bool );_ca :=int (_fd ._cgag /_caf );
_dba :=_fd ._fcaf ._feaa ;for _dba !=_agb {_fdf ,_cg :=_fd .readAt (_cbfd (_fd ._cgag ,_dba ),int (_fd ._cgag ));if _cg !=nil {return Error {ErrRead ,"\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020e\u006e\u0074\u0072\u0069\u0065\u0073\u0020r\u0065\u0061\u0064\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0028"+_cg .Error ()+"\u0029",_cbfd (_fd ._cgag ,_dba )};
};for _fa :=0;_fa < _ca ;_fa ++{_dff :=&File {_gf :_fd };_dff .directoryEntryFields =_fg (_fdf [_fa *int (_caf ):]);_bd (_fd ._fcaf ._daa ,_dff );_dff ._ccd =_dff ._ecg ;_dc =append (_dc ,_dff );};_cgf ,_cg :=_fd .findNext (_dba ,false );if _cg !=nil {return Error {ErrRead ,"d\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0065\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u0065r\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006eg \u0073\u0065\u0063t\u006fr\u0020\u0028"+_cg .Error ()+"\u0029",int64 (_cgf )};
};if _cgf <=_dba {if _cgf ==_dba ||_gd [_cgf ]{return Error {ErrRead ,"\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020e\u006e\u0074\u0072\u0069\u0065\u0073\u0020s\u0065\u0063\u0074\u006f\u0072\u0020\u0063\u0079\u0063\u006c\u0065",int64 (_cgf )};
};_gd [_cgf ]=true ;};_dba =_cgf ;};_fd ._aabg =_dc ;return nil ;};func (_fagb *Reader )getOffset (_dgge uint32 ,_cbg bool )(int64 ,error ){if _cbg {_ade :=_fagb ._cgag /64;_bbe :=int (_dgge /_ade );if _bbe >=len (_fagb ._fcaf ._gdbe ){return 0,Error {ErrRead ,"\u006di\u006e\u0069s\u0065\u0063\u0074o\u0072\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0069\u0073\u0020\u006f\u0075t\u0073\u0069\u0064\u0065\u0020\u006d\u0069\u006e\u0069\u0073\u0065c\u0074\u006f\u0072\u0020\u0072\u0061\u006e\u0067\u0065",int64 (_bbe )};
};_dea :=_dgge %_ade ;return int64 ((_fagb ._fcaf ._gdbe [_bbe ]+1)*_fagb ._cgag +_dea *64),nil ;};return _cbfd (_fagb ._cgag ,_dgge ),nil ;};func (_eeb fileInfo )Mode ()_bbg .FileMode {return _eeb .File .mode ()};func (_gac *File )Seek (offset int64 ,whence int )(int64 ,error ){var _aaee int64 ;
switch whence {default:return 0,Error {ErrSeek ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0077h\u0065\u006e\u0063\u0065",int64 (whence )};case 0:_aaee =offset ;case 1:_aaee =_gac ._ba +offset ;case 2:_aaee =_gac .Size -offset ;};switch {case _aaee < 0:return _gac ._ba ,Error {ErrSeek ,"\u0063\u0061\u006e'\u0074\u0020\u0073\u0065e\u006b\u0020\u0062\u0065\u0066\u006f\u0072e\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u006f\u0066\u0020\u0046\u0069\u006c\u0065",_aaee };
case _aaee >=_gac .Size :return _gac ._ba ,Error {ErrSeek ,"c\u0061\u006e\u0027\u0074\u0020\u0073e\u0065\u006b\u0020\u0070\u0061\u0073\u0074\u0020\u0046i\u006c\u0065\u0020l\u0065n\u0067\u0074\u0068",_aaee };case _aaee ==_gac ._ba :return _aaee ,nil ;case _aaee > _gac ._ba :_age :=_gac ._ba ;
_gac ._ba =_aaee ;return _gac ._ba ,_gac .seek (_aaee -_age );};if _gac ._cae >=_gac ._ba -_aaee {_gac ._cae =_gac ._cae -(_gac ._ba -_aaee );_gac ._ba =_aaee ;return _gac ._ba ,nil ;};_gac ._cae =0;_gac ._ccd =_gac ._ecg ;_gac ._ba =_aaee ;return _gac ._ba ,_gac .seek (_aaee );
};func _fg (_fb []byte )*directoryEntryFields {_fgf :=&directoryEntryFields {};for _gg :=range _fgf ._fc {_fgf ._fc [_gg ]=_d .LittleEndian .Uint16 (_fb [_gg *2:_gg *2+2]);};_fgf ._df =_d .LittleEndian .Uint16 (_fb [64:66]);_fgf ._egc =uint8 (_fb [66]);
_fgf ._db =uint8 (_fb [67]);_fgf ._afc =_d .LittleEndian .Uint32 (_fb [68:72]);_fgf ._gb =_d .LittleEndian .Uint32 (_fb [72:76]);_fgf ._dfe =_d .LittleEndian .Uint32 (_fb [76:80]);_fgf ._de =_ec .MustGuid (_fb [80:96]);copy (_fgf ._afe [:],_fb [96:100]);
_fgf ._dfc =_ec .MustFileTime (_fb [100:108]);_fgf ._cc =_ec .MustFileTime (_fb [108:116]);_fgf ._ecg =_d .LittleEndian .Uint32 (_fb [116:120]);copy (_fgf ._afd [:],_fb [120:128]);return _fgf ;};func (_cgfd *Reader )Read (b []byte )(_dabc int ,_dgd error ){if _cgfd ._gdag >=len (_cgfd .File ){return 0,_cd .EOF ;
};return _cgfd .File [_cgfd ._gdag ].Read (b );};func (_dace *Reader )findNext (_cdea uint32 ,_abdd bool )(uint32 ,error ){_cgc :=_dace ._cgag /4;_dbd :=int (_cdea /_cgc );var _def uint32 ;if _abdd {if _dbd < 0||_dbd >=len (_dace ._fcaf ._ace ){return 0,Error {ErrRead ,"\u006d\u0069\u006e\u0069\u0073e\u0063\u0074\u006f\u0072\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0069\u0073 \u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u006d\u0069\u006e\u0069\u0046\u0041\u0054\u0020\u0072\u0061\u006e\u0067\u0065",int64 (_dbd )};
};_def =_dace ._fcaf ._ace [_dbd ];}else {if _dbd < 0||_dbd >=len (_dace ._fcaf ._fba ){return 0,Error {ErrRead ,"\u0046\u0041\u0054\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0069\u0073\u0020\u006f\u0075t\u0073i\u0064\u0065\u0020\u0044\u0049\u0046\u0041\u0054\u0020\u0072\u0061\u006e\u0067\u0065",int64 (_dbd )};
};_def =_dace ._fcaf ._fba [_dbd ];};_adc :=_cdea %_cgc ;_gegf :=_cbfd (_dace ._cgag ,_def )+int64 (_adc *4);_bac ,_abe :=_dace .readAt (_gegf ,4);if _abe !=nil {return 0,Error {ErrRead ,"\u0062\u0061\u0064\u0020\u0072\u0065\u0061\u0064\u0020\u0066i\u006e\u0064\u0069\u006e\u0067\u0020\u006ee\u0078\u0074\u0020\u0073\u0065\u0063\u0074\u006f\u0072\u0020\u0028"+_abe .Error ()+"\u0029",_gegf };
};_bbeb :=_d .LittleEndian .Uint32 (_bac );return _bbeb ,nil ;};func (_bbcc *Reader )setHeader ()error {_eea ,_aac :=_bbcc .readAt (0,_fgff );if _aac !=nil {return _aac ;};_bbcc ._fcaf =&header {headerFields :_fbdc (_eea )};if _bbcc ._fcaf ._cbfdg !=_gbfb {return Error {ErrFormat ,"\u0062\u0061\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065",int64 (_bbcc ._fcaf ._cbfdg )};
};if _bbcc ._fcaf ._dgb ==0x0009||_bbcc ._fcaf ._dgb ==0x000c{_bbcc ._cgag =uint32 (1<<_bbcc ._fcaf ._dgb );}else {return Error {ErrFormat ,"\u0069\u006c\u006c\u0065ga\u006c\u0020\u0073\u0065\u0063\u0074\u006f\u0072\u0020\u0073\u0069\u007a\u0065",int64 (_bbcc ._fcaf ._dgb )};
};if _bbcc ._fcaf ._fda > 0{_acc :=(_bbcc ._cgag /4)-1;if int (_bbcc ._fcaf ._fda *_acc +109)< 0{return Error {ErrFormat ,"\u0044I\u0046A\u0054\u0020\u0069\u006e\u0074 \u006f\u0076e\u0072\u0066\u006c\u006f\u0077",int64 (_bbcc ._fcaf ._fda )};};if _bbcc ._fcaf ._fda *_acc +109> _bbcc ._fcaf ._bcg +_acc {return Error {ErrFormat ,"\u006e\u0075\u006d\u0020\u0044\u0049\u0046\u0041\u0054\u0073 \u0065\u0078\u0063\u0065\u0065\u0064\u0073 \u0046\u0041\u0054\u0020\u0073\u0065\u0063\u0074\u006f\u0072\u0073",int64 (_bbcc ._fcaf ._fda )};
};};if _bbcc ._fcaf ._dbbe > 0{if int (_bbcc ._cgag /4*_bbcc ._fcaf ._dbbe )< 0{return Error {ErrFormat ,"m\u0069\u006e\u0069\u0020FA\u0054 \u0069\u006e\u0074\u0020\u006fv\u0065\u0072\u0066\u006c\u006f\u0077",int64 (_bbcc ._fcaf ._dbbe )};};if _bbcc ._fcaf ._dbbe > _bbcc ._fcaf ._bcg *(_bbcc ._cgag /_dab ){return Error {ErrFormat ,"\u006e\u0075\u006d\u0020\u006d\u0069n\u0069\u0020\u0046\u0041\u0054\u0073\u0020\u0065\u0078\u0063\u0065\u0065\u0064s\u0020\u0046\u0041\u0054\u0020\u0073\u0065c\u0074\u006f\u0072\u0073",int64 (_bbcc ._fcaf ._bcg )};
};};return nil ;};type headerFields struct{_cbfdg uint64 ;_ [16]byte ;_abd uint16 ;_daa uint16 ;_ [2]byte ;_dgb uint16 ;_ [2]byte ;_ [6]byte ;_gbee uint32 ;_bcg uint32 ;_feaa uint32 ;_ [4]byte ;_ [4]byte ;_dgbe uint32 ;_dbbe uint32 ;_ecc uint32 ;_fda uint32 ;
_gce [109]uint32 ;};func (_gbf *File )mode ()_bbg .FileMode {if _gbf ._egc !=_eb {return _bbg .ModeDir |0777;};return 0666;};func (_gdad *Reader )findFatLocsOffset (_cfe bool )int64 {var _cbb uint32 ;if _cfe {_cbb =_gdad ._fcaf ._ace [0];}else {_cbb =_gdad ._fcaf ._fba [0];
};return _cbfd (_gdad ._cgag ,_cbb );};type directoryEntryFields struct{_fc [32]uint16 ;_df uint16 ;_egc uint8 ;_db uint8 ;_afc uint32 ;_gb uint32 ;_dfe uint32 ;_de _ec .Guid ;_afe [4]byte ;_dfc _ec .FileTime ;_cc _ec .FileTime ;_ecg uint32 ;_afd [8]byte ;
};func (_feg *Reader )findNextFreeSector (_cebg bool )(uint32 ,error ){_eca :=_feg .findFatLocsOffset (_cebg );_ccfc :=uint32 (0);_agfc :=_feg ._cgag /4;for {_fbe ,_efdg :=_feg .readAt (_eca ,4);if _efdg !=nil {return 0,Error {ErrRead ,"\u0062\u0061\u0064\u0020\u0072\u0065\u0061\u0064\u0020\u0066i\u006e\u0064\u0069\u006e\u0067\u0020\u006ee\u0078\u0074\u0020\u0073\u0065\u0063\u0074\u006f\u0072\u0020\u0028"+_efdg .Error ()+"\u0029",_eca };
};_cad :=_d .LittleEndian .Uint32 (_fbe );if _cad ==_ffg {break ;};if _ccfc >=_agfc {return 0,Error {ErrRead ,"\u0065\u006e\u0064\u0020of\u0020\u006d\u0069\u006e\u0069\u0046\u0061\u0074\u0020\u0072\u0065\u0061\u0063\u0068e\u0064",_eca };};_ccfc ++;_eca +=4;
};return _ccfc ,nil ;};func (_dcf fileInfo )ModTime ()_aa .Time {return _dcf .Modified ()};func (_faa *File )WriteAt (p []byte ,off int64 )(_dga int ,_faff error ){_dbb ,_ggfag ,_gdb :=_faa ._ba ,_faa ._cae ,_faa ._ccd ;_ ,_faff =_faa .Seek (off ,0);if _faff ==nil {_dga ,_faff =_faa .Write (p );
};_faa ._ba ,_faa ._cae ,_faa ._ccd =_dbb ,_ggfag ,_gdb ;return _dga ,_faff ;};func (_gba *Reader )exportHeader (_dbg *_g .Writer )error {if _dgga :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._cbfdg );_dgga !=nil {return _dgga ;};if _dccd :=_dbg .Skip (16);
_dccd !=nil {return _dccd ;};if _agc :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._abd );_agc !=nil {return _agc ;};if _fcb :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._daa );_fcb !=nil {return _fcb ;};if _fbdf :=_d .Write (_dbg ,_d .LittleEndian ,uint16 (0xfffe));
_fbdf !=nil {return _fbdf ;};if _ddab :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._dgb );_ddab !=nil {return _ddab ;};if _cac :=_d .Write (_dbg ,_d .LittleEndian ,uint16 (0x0006));_cac !=nil {return _cac ;};if _fgg :=_dbg .Skip (6);_fgg !=nil {return _fgg ;
};if _gef :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._gbee );_gef !=nil {return _gef ;};if _fdc :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._bcg );_fdc !=nil {return _fdc ;};if _abb :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._feaa );
_abb !=nil {return _abb ;};if _bdgg :=_dbg .Skip (4);_bdgg !=nil {return _bdgg ;};if _ddagd :=_d .Write (_dbg ,_d .LittleEndian ,uint32 (0x00001000));_ddagd !=nil {return _ddagd ;};if _aba :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._dgbe );_aba !=nil {return _aba ;
};if _cee :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._dbbe );_cee !=nil {return _cee ;};if _dgf :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._ecc );_dgf !=nil {return _dgf ;};if _edgd :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._fda );
_edgd !=nil {return _edgd ;};for _ffb :=0;_ffb < 109;_ffb ++{if _adfd :=_d .Write (_dbg ,_d .LittleEndian ,&_gba ._fcaf ._gce [_ffb ]);_adfd !=nil {return _adfd ;};};return nil ;};const _fgff int =8+16+10+6+12+8+16+109*4;func (_cdec *Reader )Modified ()_aa .Time {return _cdec .File [0].Modified ()};
func (_fee *File )ReadAt (p []byte ,off int64 )(_dggf int ,_ced error ){_efe ,_gfdb ,_ecfd :=_fee ._ba ,_fee ._cae ,_fee ._ccd ;_ ,_ced =_fee .Seek (off ,0);if _ced ==nil {_dggf ,_ced =_fee .Read (p );};_fee ._ba ,_fee ._cae ,_fee ._ccd =_efe ,_gfdb ,_ecfd ;
return _dggf ,_ced ;};func (_ef *File )ID ()string {return _ef ._de .String ()};const (_ebd uint32 =0xFFFFFFFA;_cbed uint32 =0xFFFFFFFC;_gcf uint32 =0xFFFFFFFD;_agb uint32 =0xFFFFFFFE;_ffg uint32 =0xFFFFFFFF;_cdf byte =0xFF;_bee uint32 =0xFFFFFFFA;_ffc uint32 =0xFFFFFFFF;
);func (_gca *File )findLast (_gge bool )(uint32 ,error ){_fbg :=_gca ._ecg ;for {_cfb ,_bbgc :=_gca ._gf .findNext (_fbg ,_gge );if _bbgc !=nil {return 0,Error {ErrRead ,"\u0062\u0061\u0064\u0020\u0072\u0065\u0061\u0064\u0020\u0066i\u006e\u0064\u0069\u006e\u0067\u0020\u006ee\u0078\u0074\u0020\u0073\u0065\u0063\u0074\u006f\u0072\u0020\u0028"+_bbgc .Error ()+"\u0029",0};
};if _cfb ==_agb {break ;};_fbg =_cfb ;};return _fbg ,nil ;};func (_bg *Reader )traverse ()error {_bg .File =make ([]*File ,0,len (_bg ._aabg ));var (_ge func (int ,[]string );_dac error ;_ce int ;);_ge =func (_geb int ,_eda []string ){_ce ++;if _ce > len (_bg ._aabg ){_dac =Error {ErrTraverse ,"\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c\u0020\u0063o\u0075\u006e\u0074\u0065\u0072\u0020\u006f\u0076\u0065\u0072f\u006c\u006f\u0077",int64 (_geb )};
return ;};if _geb < 0||_geb >=len (_bg ._aabg ){_dac =Error {ErrTraverse ,"\u0069\u006c\u006ceg\u0061\u006c\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c\u0020\u0069\u006e\u0064\u0065\u0078",int64 (_geb )};return ;};_fe :=_bg ._aabg [_geb ];
if _fe ._afc !=_ffc {_ge (int (_fe ._afc ),_eda );};_bg .File =append (_bg .File ,_fe );_fe .Path =_eda ;if _fe ._dfe !=_ffc {if _geb > 0{_ge (int (_fe ._dfe ),append (_eda ,_fe .Name ));}else {_ge (int (_fe ._dfe ),_eda );};};if _fe ._gb !=_ffc {_ge (int (_fe ._gb ),_eda );
};return ;};_ge (0,[]string {});return _dac ;};func (_cecc *Reader )GetEntry (entryName string )(*File ,error ){for _agfd ,_debd :=_cecc .Next ();_debd ==nil ;_agfd ,_debd =_cecc .Next (){if _agfd .Name ==entryName {return _agfd ,nil ;};};return nil ,Error {ErrTraverse ,"\u004e\u006f\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u0066o\u0075\u006e\u0064\u0020\u0066\u006f\u0072 \u0067\u0069\u0076\u0065\u006e\u0020\u006e\u0061\u006d\u0065\u002e",0};
};func (_accd *Reader )exportDifats (_dad *_g .Writer )error {if _accd ._fcaf ._fda ==0{return nil ;};return nil ;};func _bd (_bbc uint16 ,_cb *File ){_ecf (_cb );if _cb ._egc !=_eb {return ;};if _bbc > 3{_cb .Size =int64 (_d .LittleEndian .Uint64 (_cb ._afd [:]));
}else {_cb .Size =int64 (_d .LittleEndian .Uint32 (_cb ._afd [:4]));};};func _cbfd (_gbe ,_egab uint32 )int64 {return int64 ((_egab +1)*_gbe )};func (_dfee *Reader )GetHeader ()*header {return _dfee ._fcaf };type File struct{Name string ;Initial uint16 ;
Path []string ;Size int64 ;_ba int64 ;_ccd uint32 ;_cae int64 ;*directoryEntryFields ;_gf *Reader ;};func (_gdac *File )Read (b []byte )(int ,error ){if _gdac .Size < 1||_gdac ._ba >=_gdac .Size {return 0,_cd .EOF ;};_dcc :=len (b );if int64 (_dcc )> _gdac .Size -_gdac ._ba {_dcc =int (_gdac .Size -_gdac ._ba );
};_ged ,_bba :=_gdac .stream (_dcc );if _bba !=nil {return 0,_bba ;};var _ceb ,_fbf int ;for _ ,_cbf :=range _ged {_bfc :=_ceb +int (_cbf [1]);if _bfc < _ceb ||_bfc > _dcc {return 0,Error {ErrRead ,"\u0062a\u0064 \u0072\u0065\u0061\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068",int64 (_bfc )};
};_gfd ,_fef :=_gdac ._gf ._adef .ReadAt (b [_ceb :_bfc ],_cbf [0]);_fbf =_fbf +_gfd ;if _fef !=nil {_gdac ._ba +=int64 (_fbf );return _fbf ,Error {ErrRead ,"\u0075n\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0072\u0065a\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0020\u0028"+_fef .Error ()+"\u0029",int64 (_ceb )};
};_ceb =_bfc ;};_gdac ._ba +=int64 (_fbf );if _fbf !=_dcc {_bba =Error {ErrRead ,"\u0062\u0079\u0074e\u0073\u0020\u0072\u0065\u0061\u0064\u0020\u0064\u006f\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020r\u0065\u0061\u0064\u0020\u0073\u0069\u007a\u0065",int64 (_fbf )};
}else if _fbf < len (b ){_bba =_cd .EOF ;};return _fbf ,_bba ;};func _gdab (_fab *directoryEntryFields )(*_a .Buffer ,error ){_ddag :=_a .NewBuffer ([]byte {});for _ ,_fae :=range _fab ._fc {if _dagc :=_d .Write (_ddag ,_d .LittleEndian ,&_fae );_dagc !=nil {return nil ,_dagc ;
};};if _gfc :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._df );_gfc !=nil {return nil ,_gfc ;};if _acb :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._egc );_acb !=nil {return nil ,_acb ;};if _ae :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._db );_ae !=nil {return nil ,_ae ;
};if _egb :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._afc );_egb !=nil {return nil ,_egb ;};if _ff :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._gb );_ff !=nil {return nil ,_ff ;};if _cfbb :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._dfe );_cfbb !=nil {return nil ,_cfbb ;
};if _bdg :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._de .DataA );_bdg !=nil {return nil ,_bdg ;};if _bbb :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._de .DataB );_bbb !=nil {return nil ,_bbb ;};if _eee :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._de .DataC );
_eee !=nil {return nil ,_eee ;};if _ ,_egf :=_ddag .Write (_fab ._de .DataD [:]);_egf !=nil {return nil ,_egf ;};if _ ,_cff :=_ddag .Write (_fab ._afe [:]);_cff !=nil {return nil ,_cff ;};if _eec :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._dfc .Low );
_eec !=nil {return nil ,_eec ;};if _beg :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._dfc .High );_beg !=nil {return nil ,_beg ;};if _fff :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._cc .Low );_fff !=nil {return nil ,_fff ;};if _beb :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._cc .High );
_beb !=nil {return nil ,_beb ;};if _dbc :=_d .Write (_ddag ,_d .LittleEndian ,&_fab ._ecg );_dbc !=nil {return nil ,_dbc ;};if _ ,_cfd :=_ddag .Write (_fab ._afd [:]);_cfd !=nil {return nil ,_cfd ;};return _ddag ,nil ;};func (_fad *Reader )exportMiniStream ()(*_g .Writer ,*_g .Writer ,error ){_gfea ,_dbdf :=_g .NewWriter (),_g .NewWriter ();
_cbcd :=uint32 (0);for _ ,_eab :=range _fad .File {if _eab .Size ==0{continue ;};_eab .reset ();_eab ._ecg =_cbcd ;_adb :=int (_eab .Size )/int (_dab );if int (_eab .Size )%int (_dab )!=0{_adb ++;};for _feed :=1;_feed < _adb ;_feed ++{_cbcd ++;if _dabd :=_d .Write (_gfea ,_d .LittleEndian ,_cbcd );
_dabd !=nil {return nil ,nil ,_dabd ;};};if _cbd :=_d .Write (_gfea ,_d .LittleEndian ,_agb );_cbd !=nil {return nil ,nil ,_cbd ;};_cbcd ++;if _ ,_gbab :=_cd .Copy (_dbdf ,_eab );_gbab !=nil {return nil ,nil ,_gbab ;};if _gfga :=_dbdf .AlignLength (64);
_gfga !=nil {return nil ,nil ,_gfga ;};};if _cda :=_gfea .FillWithByte (int (_fad ._cgag )-_gfea .Len (),_cdf );_cda !=nil {return nil ,nil ,_cda ;};if _gcd :=_dbdf .AlignLength (int (_fad ._cgag ));_gcd !=nil {return nil ,nil ,_gcd ;};return _gfea ,_dbdf ,nil ;
};func _bdc (_fce [][2]int64 )[][2]int64 {_dde :=len (_fce );for _deb ,_aga :=0,0;_deb < _dde &&_aga +1< len (_fce );_deb ++{if _fce [_aga ][0]+_fce [_aga ][1]==_fce [_aga +1][0]{_fce [_aga ][1]=_fce [_aga ][1]+_fce [_aga +1][1];for _ea :=range _fce [_aga +1:len (_fce )-1]{_fce [_aga +1+_ea ]=_fce [_ea +_aga +2];
};_fce =_fce [:len (_fce )-1];}else {_aga +=1;};};return _fce ;};const (_af uint8 =0x0;_eg uint8 =0x1;);const (_da uint8 =0x0;_ed uint8 =0x1;_eb uint8 =0x2;_bf uint8 =0x5;);func (_bbff *Reader )Debug ()map[string ][]uint32 {_abc :=map[string ][]uint32 {"s\u0065\u0063\u0074\u006f\u0072\u0020\u0073\u0069\u007a\u0065":[]uint32 {_bbff ._cgag },"\u006d\u0069\u006e\u0069\u0020\u0066\u0061\u0074\u0020\u006c\u006f\u0063\u0073":_bbff ._fcaf ._ace ,"\u006d\u0069n\u0069\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u006c\u006f\u0063\u0073":_bbff ._fcaf ._gdbe ,"\u0064\u0069r\u0065\u0063\u0074o\u0072\u0079\u0020\u0073\u0065\u0063\u0074\u006f\u0072":[]uint32 {_bbff ._fcaf ._feaa },"\u006d\u0069\u006e\u0069 s\u0074\u0072\u0065\u0061\u006d\u0020\u0073\u0074\u0061\u0072\u0074\u002f\u0073\u0069z\u0065":[]uint32 {_bbff .File [0]._ecg ,_d .LittleEndian .Uint32 (_bbff .File [0]._afd [:])}};
for _bgbc ,_cbbg :=_bbff .Next ();_cbbg ==nil ;_bgbc ,_cbbg =_bbff .Next (){_abc [_bgbc .Name +" \u0073\u0074\u0061\u0072\u0074\u002f\u0073\u0069\u007a\u0065"]=[]uint32 {_bgbc ._ecg ,_d .LittleEndian .Uint32 (_bgbc ._afd [:])};};return _abc ;};const (ErrFormat =iota ;
ErrRead ;ErrSeek ;ErrWrite ;ErrTraverse ;);func (_daca *File )changeSize (_ab int64 )error {if _ab ==_daca .Size {return nil ;};var _aaf *File ;for _ ,_bc :=range _daca ._gf ._aabg {if _bc .Name ==_daca .Name {_aaf =_bc ;break ;};};if _aaf ==nil {return _e .Errorf ("\u004e\u006f\u0020\u0064\u0069\u0072e\u0063\u0074\u006f\u0072\u0079\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u0066o\u0072\u0020\u0061\u0020\u0066\u0069\u006ce\u003a\u0020\u0025\u0073",_daca .Name );
};_bgb :=_a .NewBuffer ([]byte {});if _ecd :=_d .Write (_bgb ,_d .LittleEndian ,_ab );_ecd !=nil {return _ecd ;};for _cga ,_fed :=range _bgb .Bytes (){_aaf ._afd [_cga ]=_fed ;};var _dffb int64 ;var _fag bool ;if _daca .Size < _ggc {_fag =true ;_dffb =int64 (_dab );
}else {_dffb =int64 (_daca ._gf ._cgag );};_ggfa :=int ((_daca .Size -1)/_dffb )+1;_baf :=int ((_ab -1)/_dffb )+1;if _ggfa < _baf {_fagd ,_cfa :=_daca .findLast (_fag );if _cfa !=nil {return _cfa ;};_ega ,_cfa :=_daca ._gf .findNextFreeSector (_fag );if _cfa !=nil {return _cfa ;
};for _gfb :=_baf -_ggfa ;_gfb > 0;_gfb --{if _cagd :=_daca ._gf .saveToFatLocs (_fagd ,_ega ,_fag );_cagd !=nil {return _cagd ;};if _gfb > 1{_fagd =_ega ;_ega ++;}else if _cbe :=_daca ._gf .saveToFatLocs (_ega ,_agb ,_fag );_cbe !=nil {return _cbe ;};
};}else if _ggfa > _baf {_cefb :=_daca ._ecg ;var _bgc error ;for _dda :=0;_dda < _baf -1;_dda ++{_cefb ,_bgc =_daca ._gf .findNext (_cefb ,_fag );if _bgc !=nil {return _bgc ;};};if _ad :=_daca ._gf .saveToFatLocs (_cefb ,_agb ,_fag );_ad !=nil {return _ad ;
};};_daca .Size =_ab ;return nil ;};func (_ee fileInfo )Size ()int64 {if _ee ._egc !=_eb {return 0;};return _ee .File .Size ;};func (_gdabb Error )Typ ()int {return _gdabb ._dcb };type Error struct{_dcb int ;_feab string ;_dggc int64 ;};func (_edab *Reader )exportFAT (_gefc *_g .Writer ,_afg []uint32 )error {if _edab ._fcaf ._bcg ==0{return nil ;
};_bed :=_a .NewBuffer ([]byte {});if _abcd :=_d .Write (_bed ,_d .LittleEndian ,_gcf );_abcd !=nil {return _abcd ;};for _afec :=0;_afec < len (_afg )-1;_afec ++{for _fecf :=_afg [_afec ];_fecf < _afg [_afec +1]-1;_fecf ++{if _ddd :=_d .Write (_bed ,_d .LittleEndian ,_fecf );
_ddd !=nil {return _ddd ;};};if _gdfe :=_d .Write (_bed ,_d .LittleEndian ,_agb );_gdfe !=nil {return _gdfe ;};};_gdacb :=512;for _ ,_ece :=range _bed .Bytes (){if _dee :=_gefc .WriteByteAt (_ece ,_gdacb );_dee !=nil {return _dee ;};_gdacb ++;};return nil ;
};func (_deg *File )reset (){_deg ._ba =0;_deg ._cae =0;_deg ._ccd =_deg ._ecg };func (_ggg *Reader )saveToFatLocs (_dggec uint32 ,_eed interface{},_ecda bool )error {_bcd :=_a .NewBuffer ([]byte {});if _fafd :=_d .Write (_bcd ,_d .LittleEndian ,_eed );
_fafd !=nil {return _fafd ;};_cgcf :=_ggg .findFatLocsOffset (_ecda )+int64 (_dggec *4);_ ,_afge :=_ggg ._acee .WriteAt (_bcd .Bytes (),_cgcf );return _afge ;};func (_dg fileInfo )IsDir ()bool {return _dg .mode ().IsDir ()};func (_ecfgb *Reader )readAt (_fecc int64 ,_cdbc int )([]byte ,error ){if _ecfgb ._begc {_bce ,_gege :=_ecfgb ._adef .(slicer ).Slice (_fecc ,_cdbc );
if _gege !=nil {return nil ,Error {ErrRead ,"\u0073\u006c\u0069\u0063er\u0020\u0072\u0065\u0061\u0064\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0028"+_gege .Error ()+"\u0029",_fecc };};return _bce ,nil ;};if _cdbc > len (_ecfgb ._eebg ){return nil ,Error {ErrRead ,"\u0072\u0065ad\u0020\u006c\u0065n\u0067\u0074\u0068\u0020gre\u0061te\u0072\u0020\u0074\u0068\u0061\u006e\u0020re\u0061\u0064\u0020\u0062\u0075\u0066\u0066e\u0072",int64 (_cdbc )};
};if _ ,_edc :=_ecfgb ._adef .ReadAt (_ecfgb ._eebg [:_cdbc ],_fecc );_edc !=nil {return nil ,Error {ErrRead ,_edc .Error (),_fecc };};return _ecfgb ._eebg [:_cdbc ],nil ;};func (_cec *File )ensureWriterAt ()error {if _cec ._gf ._acee ==nil {_ga ,_fea :=_cec ._gf ._adef .(_cd .WriterAt );
if !_fea {return Error {ErrWrite ,"\u006d\u0073\u0063\u0066\u0062\u002e\u004ee\u0077\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0067\u0069\u0076\u0065n\u0020R\u0065\u0061\u0064\u0065\u0072\u0041t\u0020\u0063\u006f\u006e\u0076\u0065\u0072t\u0069\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0020\u0069\u006f\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u0041\u0074\u0020\u0069n\u0020\u006f\u0072\u0064\u0065\u0072\u0020\u0074\u006f\u0020\u0077\u0072\u0069t\u0065",0};
};_cec ._gf ._acee =_ga ;};return nil ;};func _ecf (_bdd *File ){if _bdd ._df < 4||_bdd ._df > 64{return ;};_be :=int (_bdd ._df /2-1);_bdd .Initial =_bdd ._fc [0];var _gcc int ;if !_f .IsPrint (rune (_bdd .Initial )){_gcc =1;};_bdd .Name =string (_bb .Decode (_bdd ._fc [_gcc :_be ]));
};type slicer interface{Slice (_bae int64 ,_dcfa int )([]byte ,error );};func (_edg *Reader )Export ()([]byte ,error ){_gede :=_g .NewWriter ();if _eaa :=_edg .exportHeader (_gede );_eaa !=nil {return nil ,_eaa ;};if _gegd :=_gede .FillWithByte (512,_cdf );
_gegd !=nil {return nil ,_gegd ;};_acef :=[]uint32 {};if _fcc :=_edg .exportDifats (_gede );_fcc !=nil {return nil ,_fcc ;};_aef ,_ebdd ,_edb :=_edg .exportMiniStream ();if _edb !=nil {return nil ,_edb ;};_acef =append (_acef ,uint32 (_gede .Len ())/_edg ._cgag );
if _afea :=_edg .exportDirEntries (_gede );_afea !=nil {return nil ,_afea ;};_acef =append (_acef ,uint32 (_gede .Len ())/_edg ._cgag );if _ ,_gec :=_aef .WriteTo (_gede );_gec !=nil {return nil ,_gec ;};_acef =append (_acef ,uint32 (_gede .Len ())/_edg ._cgag );
if _ ,_dfcb :=_ebdd .WriteTo (_gede );_dfcb !=nil {return nil ,_dfcb ;};_acef =append (_acef ,uint32 (_gede .Len ())/_edg ._cgag );if _gdbea :=_edg .exportFAT (_gede ,_acef );_gdbea !=nil {return nil ,_gdbea ;};return _gede .Bytes (),nil ;};func (_bfdd *Reader )setDifats ()error {_bfdd ._fcaf ._fba =_bfdd ._fcaf ._gce [:];
if _bfdd ._fcaf ._fda ==0{return nil ;};_aff :=(_bfdd ._cgag /4)-1;_eag :=make ([]uint32 ,109,_bfdd ._fcaf ._fda *_aff +109);copy (_eag ,_bfdd ._fcaf ._fba );_bfdd ._fcaf ._fba =_eag ;_bbf :=_bfdd ._fcaf ._ecc ;for _ccdf :=0;_ccdf < int (_bfdd ._fcaf ._fda );
_ccdf ++{_cce ,_aab :=_bfdd .readAt (_cbfd (_bfdd ._cgag ,_bbf ),int (_bfdd ._cgag ));if _aab !=nil {return Error {ErrFormat ,"e\u0072r\u006f\u0072\u0020\u0073\u0065\u0074\u0074\u0069n\u0067\u0020\u0044\u0049FA\u0054\u0028"+_aab .Error ()+"\u0029",int64 (_bbf )};
};for _bbge :=0;_bbge < int (_aff );_bbge ++{_bfdd ._fcaf ._fba =append (_bfdd ._fcaf ._fba ,_d .LittleEndian .Uint32 (_cce [_bbge *4:_bbge *4+4]));};_bbf =_d .LittleEndian .Uint32 (_cce [len (_cce )-4:]);};return nil ;};type Reader struct{_begc bool ;
_cgag uint32 ;_eebg []byte ;_fcaf *header ;File []*File ;_aabg []*File ;_gdag int ;_adef _cd .ReaderAt ;_acee _cd .WriterAt ;};func (_bad *File )Modified ()_aa .Time {return _bad ._cc .Time ()};func (_dag *File )Write (b []byte )(int ,error ){if _dag .Size < 1||_dag ._ba >=_dag .Size {return 0,_cd .EOF ;
};if _efd :=_dag .ensureWriterAt ();_efd !=nil {return 0,_efd ;};_aae :=len (b );if int64 (_aae )> _dag .Size -_dag ._ba {_aae =int (_dag .Size -_dag ._ba );};_dfea ,_cef :=_dag .stream (_aae );if _cef !=nil {return 0,_cef ;};var _dd ,_fca int ;for _ ,_ggf :=range _dfea {_dgg :=_dd +int (_ggf [1]);
if _dgg < _dd ||_dgg > _aae {return 0,Error {ErrWrite ,"\u0062\u0061d\u0020\u0077\u0072i\u0074\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068",int64 (_dgg )};};_fbd ,_aaea :=_dag ._gf ._acee .WriteAt (b [_dd :_dgg ],_ggf [0]);_fca =_fca +_fbd ;if _aaea !=nil {_dag ._ba +=int64 (_fca );
return _fca ,Error {ErrWrite ,"\u0075n\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0077\u0072i\u0074\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0020\u0028"+_aaea .Error ()+"\u0029",int64 (_dd )};};_dd =_dgg ;};_dag ._ba +=int64 (_fca );if _fca !=_aae {_cef =Error {ErrWrite ,"\u0062\u0079t\u0065\u0073\u0020\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0064\u006f\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0077\u0072\u0069\u0074\u0065\u0020\u0073\u0069\u007a\u0065",int64 (_fca )};
}else if _fca < len (b ){_cef =_cd .EOF ;};return _fca ,_cef ;};func (_dcd *Reader )setMiniStream ()error {if _dcd ._aabg [0]._ecg ==_agb ||_dcd ._fcaf ._dgbe ==_agb ||_dcd ._fcaf ._dbbe ==0{return nil ;};_dfge :=int (_dcd ._fcaf ._dbbe );_dcd ._fcaf ._ace =make ([]uint32 ,_dfge );
_dcd ._fcaf ._ace [0]=_dcd ._fcaf ._dgbe ;for _bag :=1;_bag < _dfge ;_bag ++{_bgf ,_dfac :=_dcd .findNext (_dcd ._fcaf ._ace [_bag -1],false );if _dfac !=nil {return Error {ErrFormat ,"s\u0065\u0074\u0074\u0069ng\u0020m\u0069\u006e\u0069\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0028"+_dfac .Error ()+"\u0029",int64 (_dcd ._fcaf ._ace [_bag -1])};
};_dcd ._fcaf ._ace [_bag ]=_bgf ;};_dfge =int (_dcd ._cgag /4*_dcd ._fcaf ._dbbe );_dcd ._fcaf ._gdbe =make ([]uint32 ,0,_dfge );_badb :=_dcd ._aabg [0]._ecg ;var _ecfg error ;for _badb !=_agb {_dcd ._fcaf ._gdbe =append (_dcd ._fcaf ._gdbe ,_badb );_badb ,_ecfg =_dcd .findNext (_badb ,false );
if _ecfg !=nil {return Error {ErrFormat ,"s\u0065\u0074\u0074\u0069ng\u0020m\u0069\u006e\u0069\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0028"+_ecfg .Error ()+"\u0029",int64 (_badb )};};};return nil ;};func (_faf *File )Created ()_aa .Time {return _faf ._dfc .Time ()};
func (_aaa *File )seek (_ada int64 )error {var _bcb bool ;var _ac int64 ;if _aaa .Size < _ggc {_bcb =true ;_ac =64;}else {_ac =int64 (_aaa ._gf ._cgag );};var _bddg int64 ;var _fbb error ;if _aaa ._cae > 0{if _ac -_aaa ._cae <=_ada {_aaa ._ccd ,_fbb =_aaa ._gf .findNext (_aaa ._ccd ,_bcb );
if _fbb !=nil {return _fbb ;};_bddg +=_ac -_aaa ._cae ;_aaa ._cae =0;if _bddg ==_ada {return nil ;};}else {_aaa ._cae +=_ada ;return nil ;};if _aaa ._ccd ==_agb {return Error {ErrRead ,"\u0075\u006ee\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0065\u0061\u0072\u006c\u0079\u0020\u0065\u006e\u0064\u0020\u006f\u0066\u0020\u0063ha\u0069\u006e",int64 (_aaa ._ccd )};
};};for {if _ada -_bddg < _ac {_aaa ._cae =_ada -_bddg ;return nil ;}else {_bddg +=_ac ;_aaa ._ccd ,_fbb =_aaa ._gf .findNext (_aaa ._ccd ,_bcb );if _fbb !=nil {return _fbb ;};if _bddg ==_ada {return nil ;};};};};func (_agd Error )Error ()string {return "\u006ds\u0063\u0066\u0062\u003a\u0020"+_agd ._feab +"\u003b\u0020"+_b .FormatInt (_agd ._dggc ,10);
};func (_cedb *Reader )Created ()_aa .Time {return _cedb .File [0].Created ()};func (_bde fileInfo )Name ()string {return _bde .File .Name };type header struct{*headerFields ;_fba []uint32 ;_ace []uint32 ;_gdbe []uint32 ;};func (_gdg fileInfo )Sys ()interface{}{return nil };
const _eba int =64+4*4+16+4+8*2+4+8;func (_ebgg *Reader )ID ()string {return _ebgg .File [0].ID ()};func (_cbc *File )stream (_ded int )([][2]int64 ,error ){var _gfe bool ;var _efb int ;var _eff int64 ;if _cbc .Size < _ggc {_gfe =true ;_efb =_ded /int (_dab )+2;
_eff =int64 (_dab );}else {_efb =_ded /int (_cbc ._gf ._cgag )+2;_eff =int64 (_cbc ._gf ._cgag );};_ccb :=make ([][2]int64 ,0,_efb );var _ceg ,_fec int ;if _cbc ._cae > 0{_dfg ,_gdae :=_cbc ._gf .getOffset (_cbc ._ccd ,_gfe );if _gdae !=nil {return nil ,_gdae ;
};if _eff -_cbc ._cae >=int64 (_ded ){_ccb =append (_ccb ,[2]int64 {_dfg +_cbc ._cae ,int64 (_ded )});}else {_ccb =append (_ccb ,[2]int64 {_dfg +_cbc ._cae ,_eff -_cbc ._cae });};if _eff -_cbc ._cae <=int64 (_ded ){_cbc ._ccd ,_gdae =_cbc ._gf .findNext (_cbc ._ccd ,_gfe );
if _gdae !=nil {return nil ,_gdae ;};_fec +=int (_eff -_cbc ._cae );_cbc ._cae =0;}else {_cbc ._cae +=int64 (_ded );};if _ccb [0][1]==int64 (_ded ){return _ccb ,nil ;};if _cbc ._ccd ==_agb {return nil ,Error {ErrRead ,"\u0075\u006ee\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0065\u0061\u0072\u006c\u0079\u0020\u0065\u006e\u0064\u0020\u006f\u0066\u0020\u0063ha\u0069\u006e",int64 (_cbc ._ccd )};
};_ceg ++;};for {if _ceg >=cap (_ccb ){return nil ,Error {ErrRead ,"\u0069\u006e\u0064\u0065x\u0020\u006f\u0076\u0065\u0072\u0072\u0075\u006e\u0073\u0020s\u0065c\u0074\u006f\u0072\u0020\u006c\u0065\u006eg\u0074\u0068",int64 (_ceg )};};_dfa ,_fdd :=_cbc ._gf .getOffset (_cbc ._ccd ,_gfe );
if _fdd !=nil {return nil ,_fdd ;};if _ded -_fec < int (_eff ){_ccb =append (_ccb ,[2]int64 {_dfa ,int64 (_ded -_fec )});_cbc ._cae =int64 (_ded -_fec );return _bdc (_ccb ),nil ;}else {_ccb =append (_ccb ,[2]int64 {_dfa ,_eff });_fec +=int (_eff );_cbc ._ccd ,_fdd =_cbc ._gf .findNext (_cbc ._ccd ,_gfe );
if _fdd !=nil {return nil ,_fdd ;};if _fec ==_ded {return _bdc (_ccb ),nil ;};};_ceg ++;};};func (_gda *File )FileInfo ()_bbg .FileInfo {return fileInfo {_gda }};func New (ra _cd .ReaderAt )(*Reader ,error ){_cbfg :=&Reader {_adef :ra };if _ ,_ccc :=ra .(slicer );
_ccc {_cbfg ._begc =true ;}else {_cbfg ._eebg =make ([]byte ,_fgff );};if _agg :=_cbfg .setHeader ();_agg !=nil {return nil ,_agg ;};if !_cbfg ._begc &&int (_cbfg ._cgag )> len (_cbfg ._eebg ){_cbfg ._eebg =make ([]byte ,_cbfg ._cgag );};if _aaca :=_cbfg .setDifats ();
_aaca !=nil {return nil ,_aaca ;};if _fge :=_cbfg .setDirEntries ();_fge !=nil {return nil ,_fge ;};if _bfb :=_cbfg .setMiniStream ();_bfb !=nil {return nil ,_bfb ;};if _cgb :=_cbfg .traverse ();_cgb !=nil {return nil ,_cgb ;};return _cbfg ,nil ;};type fileInfo struct{*File };
const (_gbfb uint64 =0xE11AB1A1E011CFD0;_dab uint32 =64;_ggc int64 =4096;_caf uint32 =128;);func _fbdc (_cfc []byte )*headerFields {_ebg :=&headerFields {};_ebg ._cbfdg =_d .LittleEndian .Uint64 (_cfc [:8]);_ebg ._abd =_d .LittleEndian .Uint16 (_cfc [24:26]);
_ebg ._daa =_d .LittleEndian .Uint16 (_cfc [26:28]);_ebg ._dgb =_d .LittleEndian .Uint16 (_cfc [30:32]);_ebg ._gbee =_d .LittleEndian .Uint32 (_cfc [40:44]);_ebg ._bcg =_d .LittleEndian .Uint32 (_cfc [44:48]);_ebg ._feaa =_d .LittleEndian .Uint32 (_cfc [48:52]);
_ebg ._dgbe =_d .LittleEndian .Uint32 (_cfc [60:64]);_ebg ._dbbe =_d .LittleEndian .Uint32 (_cfc [64:68]);_ebg ._ecc =_d .LittleEndian .Uint32 (_cfc [68:72]);_ebg ._fda =_d .LittleEndian .Uint32 (_cfc [72:76]);var _add int ;for _afa :=76;_afa < 512;_afa =_afa +4{_ebg ._gce [_add ]=_d .LittleEndian .Uint32 (_cfc [_afa :_afa +4]);
_add ++;};return _ebg ;};func (_ffff *Reader )exportDirEntries (_caeg *_g .Writer )error {if int64 (_caeg .Len ())!=_cbfd (_ffff ._cgag ,_ffff ._fcaf ._feaa ){return Error {ErrWrite ,_e .Sprintf ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020l\u0065\u006e\u0067t\u0068:\u0020\u0025\u0076",_caeg .Len ()),0};
};for _ ,_feee :=range _ffff ._aabg {_gfcg ,_abg :=_gdab (_feee .directoryEntryFields );if _abg !=nil {return _abg ;};if _ ,_edaa :=_cd .Copy (_caeg ,_gfcg );_edaa !=nil {return _edaa ;};};return nil ;};