//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_ec "bytes";_b "compress/gzip";_c "crypto";_ceb "crypto/aes";_fa "crypto/cipher";_ceg "crypto/hmac";_gc "crypto/rand";_ga "crypto/rsa";_ag "crypto/sha256";_da "crypto/sha512";_ae "crypto/x509";_fb "encoding/base64";_ba "encoding/binary";
_fg "encoding/hex";_aa "encoding/json";_cag "encoding/pem";_gd "errors";_ac "fmt";_be "github.com/unidoc/unioffice/v2/common";_eca "github.com/unidoc/unioffice/v2/common/logger";_cd "io";_gb "io/ioutil";_a "log";_cc "net";_g "net/http";_e "os";_d "path/filepath";
_ca "sort";_ab "strings";_ce "sync";_cg "time";);type meteredStatusForm struct{};func (_bdd *LicenseKey )isExpired ()bool {return _bdd .getExpiryDateToCompare ().After (_bdd .ExpiresAt )};func (_de *LicenseKey )IsLicensed ()bool {if _de ==nil {return false ;
};return _de .Tier !=LicenseTierUnlicensed ||_de ._fef ;};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _cg .Time `json:"lr"`;
LastWritten _cg .Time `json:"lw"`;Usage map[string ]int `json:"u"`;UsageLogs []interface{}`json:"ul,omitempty"`;};func _eac (_gag ,_eab []byte )([]byte ,error ){_eef ,_cfe :=_ceb .NewCipher (_gag );if _cfe !=nil {return nil ,_cfe ;};_cgb :=make ([]byte ,_ceb .BlockSize +len (_eab ));
_gga :=_cgb [:_ceb .BlockSize ];if _ ,_fgbc :=_cd .ReadFull (_gc .Reader ,_gga );_fgbc !=nil {return nil ,_fgbc ;};_fcbf :=_fa .NewCFBEncrypter (_eef ,_gga );_fcbf .XORKeyStream (_cgb [_ceb .BlockSize :],_eab );_geb :=make ([]byte ,_fb .URLEncoding .EncodedLen (len (_cgb )));
_fb .URLEncoding .Encode (_geb ,_cgb );return _geb ,nil ;};func _dggg ()(string ,error ){_bge :=_ab .TrimSpace (_e .Getenv (_bfb ));if _bge ==""{_eca .Log .Debug ("\u0024\u0025\u0073\u0020e\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061\u0072\u0069\u0061\u0062l\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020\u0057\u0069\u006c\u006c\u0020\u0075\u0073\u0065\u0020\u0068\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0074\u006f\u0020s\u0074\u006f\u0072\u0065\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020in\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u002e",_bfb );
_cce :=_bgf ();if len (_cce )==0{return "",_ac .Errorf ("r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0024\u0025\u0073\u0020\u0065\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061r\u0069a\u0062\u006c\u0065\u0020o\u0072\u0020h\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_bfb );
};_bge =_d .Join (_cce ,"\u002eu\u006e\u0069\u0064\u006f\u0063");};_bff :=_e .MkdirAll (_bge ,0777);if _bff !=nil {return "",_bff ;};return _bge ,nil ;};func _cef ()([]string ,[]string ,error ){_ccfb ,_ecee :=_cc .Interfaces ();if _ecee !=nil {return nil ,nil ,_ecee ;
};var _edc []string ;var _baca []string ;for _ ,_dgd :=range _ccfb {if _dgd .Flags &_cc .FlagUp ==0||_ec .Equal (_dgd .HardwareAddr ,nil ){continue ;};_dgc ,_fbd :=_dgd .Addrs ();if _fbd !=nil {return nil ,nil ,_fbd ;};_bacc :=0;for _ ,_efb :=range _dgc {var _gbd _cc .IP ;
switch _adc :=_efb .(type ){case *_cc .IPNet :_gbd =_adc .IP ;case *_cc .IPAddr :_gbd =_adc .IP ;};if _gbd .IsLoopback (){continue ;};if _gbd .To4 ()==nil {continue ;};_baca =append (_baca ,_gbd .String ());_bacc ++;};_gbb :=_dgd .HardwareAddr .String ();
if _gbb !=""&&_bacc > 0{_edc =append (_edc ,_gbb );};};return _edc ,_baca ,nil ;};func _fefc (_dbg string ,_bf string ,_bcfg string ,_fdf bool )error {if _fgb ==nil {return _gd .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_fgb ._fef ||len (_fgb ._ccg )==0{return nil ;};if len (_dbg )==0&&!_fdf {return _gd .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_gda .Lock ();defer _gda .Unlock ();if _dad ==nil {_dad =map[string ]struct{}{};
};if _acce ==nil {_acce =map[string ]int {};};_dea :=0;if len (_dbg )> 0{_ ,_adg :=_dad [_dbg ];if !_adg {_dad [_dbg ]=struct{}{};_dea ++;};if _fgb ._cde {_fcb =append (_fcb ,map[string ]interface{}{"\u0074\u0069\u006d\u0065":_cg .Now ().String (),"\u0066\u0075\u006e\u0063":_bf ,"\u0072\u0065\u0066":_dbg [:8],"\u0066\u0069\u006c\u0065":_bcfg ,"\u0063\u006f\u0073\u0074":_dea });
if _adg &&_dea ==0{_eca .Log .Info ("\u0025\u0073\u0020\u0052\u0065\u0066\u003a\u0020\u0025\u0073\u0020\u007c\u0020\u0025\u0073 \u007c \u004e\u006f\u0020\u0063\u0072\u0065\u0064\u0069\u0074\u0020\u0075\u0073\u0065\u0064",_cg .Now ().String (),_dbg [:8],_bf );
};};};if _dea ==0&&!_fdf {return nil ;};_acce [_bf ]++;_efa :=_cg .Now ();_ddc ,_fced :=_ge .loadState (_fgb ._ccg );if _fced !=nil {_eca .Log .Error ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fced );return _fced ;};_ddc .UsageLogs =append (_ddc .UsageLogs ,_fcb ...);
if _ddc .Usage ==nil {_ddc .Usage =map[string ]int {};};for _cfc ,_fdd :=range _acce {if _cfc !=""{_ddc .Usage [_cfc ]+=_fdd ;};};_acce =nil ;const _gbg =24*_cg .Hour ;const _faaa =3*24*_cg .Hour ;if len (_ddc .Instance )==0||_efa .Sub (_ddc .LastReported )> _gbg ||(_ddc .LimitDocs &&_ddc .RemainingDocs <=_ddc .Docs +int64 (_dea ))||_fdf {_gab ,_ccf :=_e .Hostname ();
if _ccf !=nil {return _ccf ;};_edg :=_ddc .Docs ;_dg ,_gceg ,_ccf :=_cef ();if _ccf !=nil {_eca .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_ccf .Error ());
_dg =append (_dg ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_gceg =append (_gceg ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_ca .Strings (_gceg );_ca .Strings (_dg );_aaeg ,_adgc :=_daa ();if _adgc !=nil {return _adgc ;};_gaf :=false ;for _ ,_gceb :=range _gceg {if _gceb ==_aaeg .String (){_gaf =true ;};};if !_gaf {_gceg =append (_gceg ,_aaeg .String ());};};_cdag :=_acc ();
_cdag ._fgg =_fgb ._ccg ;_edg +=int64 (_dea );_bdcg :=meteredUsageCheckinForm {Instance :_ddc .Instance ,Next :_ddc .Next ,UsageNumber :int (_edg ),NumFailed :_ddc .NumErrors ,Hostname :_gab ,LocalIP :_ab .Join (_gceg ,"\u002c\u0020"),MacAddress :_ab .Join (_dg ,"\u002c\u0020"),Package :"\u0075n\u0069\u006f\u0066\u0066\u0069\u0063e",PackageVersion :_be .Version ,Usage :_ddc .Usage ,IsPersistentCache :_fgb ._aab ,Timestamp :_efa .Unix ()};
if len (_dg )==0{_bdcg .MacAddress ="\u006e\u006f\u006e\u0065";};if _fgb ._cde {_bdcg .UsageLogs =_ddc .UsageLogs ;};_cabc :=int64 (0);_ggc :=_ddc .NumErrors ;_aeb :=_efa ;_dafb :=0;_ffga :=_ddc .LimitDocs ;_cfb ,_ccf :=_cdag .checkinUsage (_bdcg );if _ccf !=nil {if _efa .Sub (_ddc .LastReported )> _faaa {if !_cfb .Success {return _gd .New (_cfb .Message );
};return _gd .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_cabc =_edg ;_ggc ++;
_aeb =_ddc .LastReported ;}else {_ffga =_cfb .LimitDocs ;_dafb =_cfb .RemainingDocs ;_ggc =0;};if len (_cfb .Instance )==0{_cfb .Instance =_bdcg .Instance ;};if len (_cfb .Next )==0{_cfb .Next =_bdcg .Next ;};_ccf =_ge .updateState (_cdag ._fgg ,_cfb .Instance ,_cfb .Next ,int (_cabc ),_ffga ,_dafb ,int (_ggc ),_aeb ,nil );
if _ccf !=nil {return _ccf ;};if !_cfb .Success {return _ac .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_cfb .Message );};}else {_fced =_ge .updateState (_fgb ._ccg ,_ddc .Instance ,_ddc .Next ,int (_ddc .Docs )+_dea ,_ddc .LimitDocs ,int (_ddc .RemainingDocs ),int (_ddc .NumErrors ),_ddc .LastReported ,_ddc .Usage ,_ddc .UsageLogs ...);
if _fced !=nil {return _fced ;};};if _fgb ._cde &&len (_dbg )> 0{_dgb :="";if _bcfg !=""{_dgb =_ac .Sprintf ("\u0046i\u006c\u0065\u0020\u0025\u0073\u0020|",_bcfg );};_eca .Log .Info ("%\u0073\u0020\u007c\u0020\u0025\u0073\u0020\u0052\u0065\u0066\u003a\u0020\u0025\u0073\u0020\u007c\u0020\u0025s\u0020\u007c\u0020\u0025\u0064\u0020\u0063\u0072\u0065\u0064it\u0028\u0073\u0029 \u0075s\u0065\u0064",_efa .String (),_dgb ,_dbg [:8],_bf ,_dea );
};return nil ;};func GetLicenseKey ()*LicenseKey {if _fgb ==nil {return nil ;};_dgg :=*_fgb ;return &_dgg ;};const (_dd ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_df ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func (_gff LegacyLicense )Verify (pubKey *_ga .PublicKey )error {_ade :=_gff ;
_ade .Signature ="";_gce :=_ec .Buffer {};_fgdg :=_aa .NewEncoder (&_gce );if _bcf :=_fgdg .Encode (_ade );_bcf !=nil {return _bcf ;};_aae ,_aaba :=_fg .DecodeString (_gff .Signature );if _aaba !=nil {return _aaba ;};_gge :=_ag .Sum256 (_gce .Bytes ());
_aaba =_ga .VerifyPKCS1v15 (pubKey ,_c .SHA256 ,_gge [:],_aae );return _aaba ;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_eca .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_eca .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ac .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _fgb !=nil &&(_fgb ._fef ||_fgb .Tier !=LicenseTierUnlicensed ){_eca .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _gd .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_bad :=_acc ();_bad ._fgg =apiKey ;_fag ,_bdc :=_bad .getStatus ();if _bdc !=nil {return _bdc ;};if !_fag .Valid {return _gd .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_faa :=&LicenseKey {_fef :true ,_ccg :apiKey ,_aab :true };_fgb =_faa ;return nil ;};const _gbc ="\u0033\u0030\u0035\u0063\u0033\u0030\u0030\u00640\u0036\u0030\u0039\u0032\u0061\u0038\u00364\u0038\u0038\u0036\u0066\u0037\u0030d\u0030\u0031\u0030\u0031\u0030\u00310\u0035\u0030\u0030\u0030\u0033\u0034\u0062\u0030\u0030\u0033\u0030\u00348\u0030\u0032\u0034\u0031\u0030\u0030\u0062\u0038\u0037\u0065\u0061\u0066\u0062\u0036\u0063\u0030\u0037\u0034\u0039\u0039\u0065\u0062\u00397\u0063\u0063\u0039\u0064\u0033\u0035\u0036\u0035\u0065\u0063\u00663\u0031\u0036\u0038\u0031\u0039\u0036\u0033\u0030\u0031\u0039\u0030\u0037c\u0038\u0034\u0031\u0061\u0064\u0064c6\u0036\u0035\u0030\u0038\u0036\u0062\u0062\u0033\u0065\u0064\u0038\u0065\u0062\u0031\u0032\u0064\u0039\u0064\u0061\u0032\u0036\u0063\u0061\u0066\u0061\u0039\u0036\u00345\u0030\u00314\u0036\u0064\u0061\u0038\u0062\u0064\u0030\u0063c\u0066\u0031\u0035\u0035\u0066\u0063a\u0063\u0063\u00368\u0036\u0039\u0035\u0035\u0065\u0066\u0030\u0033\u0030\u0032\u0066\u0061\u0034\u0034\u0061\u0061\u0033\u0065\u0063\u0038\u0039\u0034\u0031\u0037\u0062\u0030\u0032\u0030\u0033\u0030\u0031\u0030\u0030\u0030\u0031";
var _dad map[string ]struct{};func GetMeteredState ()(MeteredStatus ,error ){if _fgb ==nil {return MeteredStatus {},_gd .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};if !_fgb ._fef ||len (_fgb ._ccg )==0{return MeteredStatus {},_gd .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_ebg ,_gcec :=_ge .loadState (_fgb ._ccg );if _gcec !=nil {_eca .Log .Error ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcec );return MeteredStatus {},_gcec ;};if _ebg .Docs > 0{_cab :=_fefc ("","","",true );if _cab !=nil {return MeteredStatus {},_cab ;
};};_gda .Lock ();defer _gda .Unlock ();_ecf :=_acc ();_ecf ._fgg =_fgb ._ccg ;_agf ,_gcec :=_ecf .getStatus ();if _gcec !=nil {return MeteredStatus {},_gcec ;};if !_agf .Valid {return MeteredStatus {},_gd .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_dde :=MeteredStatus {OK :true ,Credits :_agf .OrgCredits ,Used :_agf .OrgUsed };return _dde ,nil ;};func _bgf ()string {_gfe :=_e .Getenv ("\u0048\u004f\u004d\u0045");if len (_gfe )==0{_gfe ,_ =_e .UserHomeDir ();};return _gfe ;};func _cec (_abfc ,_edga []byte )([]byte ,error ){_dadc :=make ([]byte ,_fb .URLEncoding .DecodedLen (len (_edga )));
_fgdgg ,_ebgc :=_fb .URLEncoding .Decode (_dadc ,_edga );if _ebgc !=nil {return nil ,_ebgc ;};_dadc =_dadc [:_fgdgg ];_cdae ,_ebgc :=_ceb .NewCipher (_abfc );if _ebgc !=nil {return nil ,_ebgc ;};if len (_dadc )< _ceb .BlockSize {return nil ,_gd .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_aad :=_dadc [:_ceb .BlockSize ];_dadc =_dadc [_ceb .BlockSize :];_ada :=_fa .NewCFBDecrypter (_cdae ,_aad );_ada .XORKeyStream (_dadc ,_dadc );return _dadc ,nil ;};func (_ffge defaultStateHolder )loadState (_ebff string )(reportState ,error ){_bac ,_cca :=_dggg ();
if _cca !=nil {return reportState {},_cca ;};_cca =_e .MkdirAll (_bac ,0777);if _cca !=nil {return reportState {},_cca ;};if len (_ebff )< 20{return reportState {},_gd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_gaa :=[]byte (_ebff );
_dbbdd :=_da .Sum512_256 (_gaa [:20]);_gec :=_fg .EncodeToString (_dbbdd [:]);_cga :=_d .Join (_bac ,_gec );_feb ,_cca :=_gb .ReadFile (_cga );if _cca !=nil {if _e .IsNotExist (_cca ){return reportState {},nil ;};_eca .Log .Error ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cca );
return reportState {},_gd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _cba ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_feb ,_cca =_cec ([]byte (_cba ),_feb );if _cca !=nil {return reportState {},_cca ;
};var _dcbc reportState ;_cca =_aa .Unmarshal (_feb ,&_dcbc );if _cca !=nil {_eca .Log .Error ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_cca );return reportState {},_gd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _dcbc ,nil ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func TrackUse (useKey string ){if _fgb ==nil {return ;
};if !_fgb ._fef ||len (_fgb ._ccg )==0{return ;};if len (useKey )==0{return ;};_gda .Lock ();defer _gda .Unlock ();if _acce ==nil {_acce =map[string ]int {};};_acce [useKey ]++;};func init (){_ggg ,_cf :=_fg .DecodeString (_gbc );if _cf !=nil {_a .Fatalf ("e\u0072\u0072\u006f\u0072 r\u0065a\u0064\u0069\u006e\u0067\u0020k\u0065\u0079\u003a\u0020\u0025\u0073",_cf );
};_cda ,_cf :=_ae .ParsePKIXPublicKey (_ggg );if _cf !=nil {_a .Fatalf ("e\u0072\u0072\u006f\u0072 r\u0065a\u0064\u0069\u006e\u0067\u0020k\u0065\u0079\u003a\u0020\u0025\u0073",_cf );};_ddf =_cda .(*_ga .PublicKey );};const _bfb ="\u0055N\u0049D\u004f\u0043\u005f\u004c\u0049C\u0045\u004eS\u0045\u005f\u0044\u0049\u0052";
func _daa ()(_cc .IP ,error ){_dbgb ,_cbag :=_cc .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _cbag !=nil {return nil ,_cbag ;};defer _dbgb .Close ();_ggcd :=_dbgb .LocalAddr ().(*_cc .UDPAddr );return _ggcd .IP ,nil ;
};func (_agb *LicenseKey )TypeToString ()string {if _agb ._fef {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _agb .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _agb .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _agb .Tier ==LicenseTierIndividual ||_agb .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};type meteredClient struct{_ebf string ;
_fgg string ;_bgd *_g .Client ;};func _bea (_ccd string ,_abf []byte )(string ,error ){_af ,_ :=_cag .Decode ([]byte (_ccd ));if _af ==nil {return "",_ac .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_cae ,_dc :=_ae .ParsePKCS1PrivateKey (_af .Bytes );
if _dc !=nil {return "",_dc ;};_cgd :=_da .New ();_cgd .Write (_abf );_bc :=_cgd .Sum (nil );_fe ,_dc :=_ga .SignPKCS1v15 (_gc .Reader ,_cae ,_c .SHA512 ,_bc );if _dc !=nil {return "",_dc ;};_bce :=_fb .StdEncoding .EncodeToString (_abf );_bce +="\u000a\u002b\u000a";
_bce +=_fb .StdEncoding .EncodeToString (_fe );return _bce ,nil ;};func (_cee *LicenseKey )Validate ()error {if _cee ._fef {return nil ;};if len (_cee .LicenseId )< 10{return _ac .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_cee .CustomerId )< 10{return _ac .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_cee .CustomerName )< 1{return _ac .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _fc .After (_cee .CreatedAt ){return _ac .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cee .ExpiresAt .IsZero (){_gfg :=_cee .CreatedAt .AddDate (1,0,0);if _ad .After (_gfg ){_gfg =_ad ;};_cee .ExpiresAt =_gfg ;};if _cee .CreatedAt .After (_cee .ExpiresAt ){return _ac .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _cee .isExpired (){_abe :="\u0054\u0068\u0065\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064\u002e\u000a"+"\u0059o\u0075\u0020\u006d\u0061y\u0020n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0075\u0070d\u0061\u0074\u0065\u0020\u0074\u0068\u0065\u0020l\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0065\u0077\u0065s\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0066\u006f\u0072\u0020\u0079o\u0075\u0072\u0020\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074i\u006fn\u002e\u000a"+"\u0054o\u0020\u0066\u0069\u006ed y\u006f\u0075\u0072\u0020n\u0065\u0077\u0065\u0073\u0074\u0020\u006c\u0069\u0063\u0065n\u0073\u0065\u0020\u006b\u0065\u0079\u002c\u0020\u0067\u006f\u0020\u0074\u006f\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063l\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064oc\u002e\u0069\u006f \u0061\u006e\u0064\u0020\u0067o\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006d\u0065\u006e\u0075\u002e";
return _ac .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0025\u0073",_abe );};if len (_cee .CreatorName )< 1{return _ac .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");
};if len (_cee .CreatorEmail )< 1{return _ac .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _cee .CreatedAt .After (_acd ){if !_cee .UniOffice {return _ac .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u003a\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020\u006b\u0065\u0079\u0020i\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0066\u006f\u0072\u0020\u0055\u006e\u0069\u004f\u0066\u0066\u0069\u0063\u0065");
};};return nil ;};var _ge stateLoader =defaultStateHolder {};func (_ccc *meteredClient )checkinUsage (_ccb meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_ccb .Package ="\u0075n\u0069\u006f\u0066\u0066\u0069\u0063e";_ccb .PackageVersion =_be .Version ;
var _cb meteredUsageCheckinResp ;_fce :=_ccc ._ebf +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_bdda ,_ffg :=_aa .Marshal (_ccb );if _ffg !=nil {return _cb ,_ffg ;};_bbe ,_ffg :=_dgcg (_bdda );
if _ffg !=nil {return _cb ,_ffg ;};_ggf ,_ffg :=_g .NewRequest ("\u0050\u004f\u0053\u0054",_fce ,_bbe );if _ffg !=nil {return _cb ,_ffg ;};_ggf .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_ggf .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_ggf .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_ggf .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ccc ._fgg );_bcff ,_ffg :=_ccc ._bgd .Do (_ggf );if _ffg !=nil {_eca .Log .Error ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0068\u0074\u0074\u0070 \u0072e\u0073p\u006f\u006e\u0073\u0065\u003a\u0020\u0025v",_ffg );
return _cb ,_ffg ;};defer _bcff .Body .Close ();if _bcff .StatusCode !=200{_gfgd ,_ece :=_eba (_bcff );if _ece !=nil {return _cb ,_ece ;};_ece =_aa .Unmarshal (_gfgd ,&_cb );if _ece !=nil {return _cb ,_ece ;};return _cb ,_ac .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_bcff .StatusCode );
};_edb :=_bcff .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_bgb :=_dfg (_ccb .MacAddress ,string (_bdda ));if _bgb !=_edb {_eca .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _cb ,_gd .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_gcf ,_ffg :=_eba (_bcff );if _ffg !=nil {return _cb ,_ffg ;};_ffg =_aa .Unmarshal (_gcf ,&_cb );if _ffg !=nil {return _cb ,_ffg ;};return _cb ,nil ;};var _fcb []interface{};type stateLoader interface{loadState (_ffc string )(reportState ,error );updateState (_egf ,_bae ,_fedd string ,_bgda int ,_dfd bool ,_fbg int ,_agg int ,_gdg _cg .Time ,_fgec map[string ]int ,_gdb ...interface{})error ;
};func (_ecef defaultStateHolder )updateState (_cggd ,_ebd ,_fgf string ,_adee int ,_egg bool ,_aaac int ,_adb int ,_gcfc _cg .Time ,_eag map[string ]int ,_baf ...interface{})error {_gbf ,_dcd :=_dggg ();if _dcd !=nil {return _dcd ;};_dcd =_e .MkdirAll (_gbf ,0777);
if _dcd !=nil {return _dcd ;};if len (_cggd )< 20{return _gd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_beb :=[]byte (_cggd );_bed :=_da .Sum512_256 (_beb [:20]);_gae :=_fg .EncodeToString (_bed [:]);_cegf :=_d .Join (_gbf ,_gae );
var _bbd reportState ;_bbd .Docs =int64 (_adee );_bbd .NumErrors =int64 (_adb );_bbd .LimitDocs =_egg ;_bbd .RemainingDocs =int64 (_aaac );_bbd .LastWritten =_cg .Now ().UTC ();_bbd .LastReported =_gcfc ;_bbd .Instance =_ebd ;_bbd .Next =_fgf ;_bbd .Usage =_eag ;
_efd ,_dcd :=_aa .Marshal (_bbd );if _dcd !=nil {return _dcd ;};const _fd ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_efd ,_dcd =_eac ([]byte (_fd ),_efd );if _dcd !=nil {return _dcd ;};_dcd =_gb .WriteFile (_cegf ,_efd ,0600);
if _dcd !=nil {return _dcd ;};return nil ;};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _cg .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;
ExpiresAt _cg .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;
UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_fef bool ;_ccg string ;_aab bool ;_cde bool ;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;
};func _dgcg (_bafd []byte )(_cd .Reader ,error ){_febe :=new (_ec .Buffer );_cfa :=_b .NewWriter (_febe );_cfa .Write (_bafd );_cagg :=_cfa .Close ();if _cagg !=nil {return nil ,_cagg ;};return _febe ,nil ;};var _gda =&_ce .Mutex {};const _gged ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
var _acce map[string ]int ;var _ad =_cg .Date (2020,1,1,0,0,0,0,_cg .UTC );func _abd (_gf string ,_ff string ,_ddb string )(string ,error ){_bb :=_ab .Index (_ddb ,_gf );if _bb ==-1{return "",_ac .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_eb :=_ab .Index (_ddb ,_ff );if _eb ==-1{return "",_ac .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eg :=_bb +len (_gf )+1;return _ddb [_eg :_eb -1],nil ;};const _gaag ="\u0055\u004e\u0049OF\u0046\u0049\u0043\u0045\u005f\u0043\u0055\u0053\u0054\u004f\u004d\u0045\u0052\u005f\u004e\u0041\u004d\u0045";
const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";
);var _fc =_cg .Date (2010,1,1,0,0,0,0,_cg .UTC );func SetMeteredKeyUsageLogVerboseMode (val bool ){_fgb ._cde =val };func (_afd *LicenseKey )ToString ()string {if _afd ._fef {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_dac :=_ac .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_afd .LicenseId );_dac +=_ac .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_afd .CustomerId );
_dac +=_ac .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_afd .CustomerName );_dac +=_ac .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_afd .Tier );_dac +=_ac .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_be .UtcTimeFormat (_afd .CreatedAt ));
if _afd .ExpiresAt .IsZero (){_dac +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_dac +=_ac .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_be .UtcTimeFormat (_afd .ExpiresAt ));
};_dac +=_ac .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_afd .CreatorName ,_afd .CreatorEmail );return _dac ;};const _ddef ="\u0055\u004e\u0049\u004fFF\u0049\u0043\u0045\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041T\u0048";
func (_dbe *LicenseKey )getExpiryDateToCompare ()_cg .Time {if _dbe .Trial {return _cg .Now ().UTC ();};return _be .ReleasedAt ;};func GenRefId (prefix string )(string ,error ){var _ffb _ec .Buffer ;_ffb .WriteString (prefix );_eefe :=make ([]byte ,8+16);
_gad :=_cg .Now ().UTC ().UnixNano ();_ba .BigEndian .PutUint64 (_eefe ,uint64 (_gad ));_ ,_dga :=_gc .Read (_eefe [8:]);if _dga !=nil {return "",_dga ;};_ffb .WriteString (_fg .EncodeToString (_eefe ));return _ffb .String (),nil ;};func _acc ()*meteredClient {_ea :=meteredClient {_ebf :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_bgd :&_g .Client {Timeout :30*_cg .Second }};
if _cdee :=_e .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_ab .HasPrefix (_cdee ,"\u0068\u0074\u0074\u0070"){_ea ._ebf =_cdee ;};return &_ea ;};type defaultStateHolder struct{};
func Track (docKey string ,useKey string ,docName string )error {return _fefc (docKey ,useKey ,docName ,!_fgb ._aab );};func _cdb (_eaga *_g .Response )(_cd .ReadCloser ,error ){var _efda error ;var _ee _cd .ReadCloser ;switch _ab .ToLower (_eaga .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_ee ,_efda =_b .NewReader (_eaga .Body );
if _efda !=nil {return _ee ,_efda ;};defer _ee .Close ();default:_ee =_eaga .Body ;};return _ee ,nil ;};func _dfg (_afg ,_ebfg string )string {_bef :=[]byte (_afg );_aadg :=_ceg .New (_ag .New ,_bef );_aadg .Write ([]byte (_ebfg ));return _fb .StdEncoding .EncodeToString (_aadg .Sum (nil ));
};var _fgb =MakeUnlicensedKey ();var _aff =false ;type LegacyLicense struct{Name string ;Signature string `json:",omitempty"`;Expiration _cg .Time ;LicenseType LegacyLicenseType ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;
UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;UsageLogs []interface{}`json:"ul,omitempty"`;};func init (){_ede :=_e .Getenv (_ddef );_gbge :=_e .Getenv (_gaag );if len (_ede )==0||len (_gbge )==0{return ;
};_eff ,_gcgb :=_gb .ReadFile (_ede );if _gcgb !=nil {_eca .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_gcgb );return ;
};_gcgb =SetLicenseKey (string (_eff ),_gbge );if _gcgb !=nil {_eca .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gcgb );
return ;};};func (_deg *meteredClient )getStatus ()(meteredStatusResp ,error ){var _dbbd meteredStatusResp ;_ef :=_deg ._ebf +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _dcg meteredStatusForm ;_dfb ,_fgae :=_aa .Marshal (_dcg );
if _fgae !=nil {return _dbbd ,_fgae ;};_gfgf ,_fgae :=_dgcg (_dfb );if _fgae !=nil {return _dbbd ,_fgae ;};_fadb ,_fgae :=_g .NewRequest ("\u0050\u004f\u0053\u0054",_ef ,_gfgf );if _fgae !=nil {return _dbbd ,_fgae ;};_fadb .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_fadb .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fadb .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_fadb .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_deg ._fgg );_cff ,_fgae :=_deg ._bgd .Do (_fadb );if _fgae !=nil {return _dbbd ,_fgae ;};defer _cff .Body .Close ();if _cff .StatusCode !=200{return _dbbd ,_ac .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_cff .StatusCode );
};_ggef ,_fgae :=_eba (_cff );if _fgae !=nil {return _dbbd ,_fgae ;};_fgae =_aa .Unmarshal (_ggef ,&_dbbd );if _fgae !=nil {return _dbbd ,_fgae ;};return _dbbd ,nil ;};func SetLicenseKey (content string ,customerName string )error {if _aff {return nil ;
};_abfg ,_add :=_gg (content );if _add !=nil {_eca .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_add );return _add ;};if !_ab .EqualFold (_abfg .CustomerName ,customerName ){_eca .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_abfg .CustomerName ,customerName );
return _ac .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_abfg .CustomerName ,customerName );
};_add =_abfg .Validate ();if _add !=nil {_eca .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_add );
return _add ;};_fgb =&_abfg ;return nil ;};func MakeUnlicensedKey ()*LicenseKey {_bbb :=LicenseKey {};_bbb .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_bbb .Tier =LicenseTierUnlicensed ;_bbb .CreatedAt =_cg .Now ().UTC ();
_bbb .CreatedAtInt =_bbb .CreatedAt .Unix ();return &_bbb ;};func _eba (_bged *_g .Response )([]byte ,error ){var _gggc []byte ;_ggd ,_gdac :=_cdb (_bged );if _gdac !=nil {return _gggc ,_gdac ;};return _gb .ReadAll (_ggd );};var _ddf *_ga .PublicKey ;func _gg (_cgg string )(LicenseKey ,error ){var _daf LicenseKey ;
_dcb ,_gbef :=_abd (_dd ,_df ,_cgg );if _gbef !=nil {return _daf ,_gbef ;};_aaa ,_gbef :=_db (_gged ,_dcb );if _gbef !=nil {return _daf ,_gbef ;};_gbef =_aa .Unmarshal (_aaa ,&_daf );if _gbef !=nil {return _daf ,_gbef ;};_daf .CreatedAt =_cg .Unix (_daf .CreatedAtInt ,0);
if _daf .ExpiresAtInt > 0{_bg :=_cg .Unix (_daf .ExpiresAtInt ,0);_daf .ExpiresAt =_bg ;};return _daf ,nil ;};func _db (_fed string ,_aac string )([]byte ,error ){var (_bca int ;_dbf string ;);for _ ,_dbf =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _bca =_ab .Index (_aac ,_dbf );
_bca !=-1{break ;};};if _bca ==-1{return nil ,_ac .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_ecd :=_aac [:_bca ];
_ed :=_bca +len (_dbf );_abfb :=_aac [_ed :];if _ecd ==""||_abfb ==""{return nil ,_ac .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_fad ,_gcg :=_fb .StdEncoding .DecodeString (_ecd );if _gcg !=nil {return nil ,_ac .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_bd ,_gcg :=_fb .StdEncoding .DecodeString (_abfb );
if _gcg !=nil {return nil ,_ac .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_fgd ,_ :=_cag .Decode ([]byte (_fed ));if _fgd ==nil {return nil ,_ac .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_gbe ,_gcg :=_ae .ParsePKIXPublicKey (_fgd .Bytes );if _gcg !=nil {return nil ,_gcg ;};_dbb :=_gbe .(*_ga .PublicKey );if _dbb ==nil {return nil ,_ac .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_fge :=_da .New ();_fge .Write (_fad );_fbe :=_fge .Sum (nil );_gcg =_ga .VerifyPKCS1v15 (_dbb ,_c .SHA512 ,_fbe ,_bd );if _gcg !=nil {return nil ,_gcg ;};return _fad ,nil ;};func SetMeteredKeyPersistentCache (val bool ){_fgb ._aab =val };type LegacyLicenseType byte ;
var _acd =_cg .Date (2019,6,6,0,0,0,0,_cg .UTC );