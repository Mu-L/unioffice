//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_df "bytes";_db "compress/gzip";_ab "crypto";_abe "crypto/aes";_bb "crypto/cipher";_gb "crypto/hmac";_bd "crypto/rand";_fdb "crypto/rsa";_da "crypto/sha256";_eg "crypto/sha512";_gecd "crypto/x509";_gec "encoding/base64";_ed "encoding/binary";
_fa "encoding/hex";_ce "encoding/json";_fac "encoding/pem";_fd "errors";_b "fmt";_ef "github.com/unidoc/unioffice/common";_be "github.com/unidoc/unioffice/common/logger";_g "io";_ac "io/ioutil";_gf "log";_ge "net";_f "net/http";_c "os";_ea "path/filepath";
_d "regexp";_e "sort";_cg "strings";_ad "sync";_gd "time";);func _aeec ()*meteredClient {_acb :=meteredClient {_bdf :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_aeb :&_f .Client {Timeout :30*_gd .Second }};
if _bea :=_c .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_cg .HasPrefix (_bea ,"\u0068\u0074\u0074\u0070"){_acb ._bdf =_bea ;};return &_acb ;};func _cae (_dcd string ,_ade string ,_feb bool )error {if _baf ==nil {return _fd .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_baf ._bff ||len (_baf ._bdg )==0{return nil ;};if len (_dcd )==0&&!_feb {return _fd .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_dfbc .Lock ();defer _dfbc .Unlock ();if _aac ==nil {_aac =map[string ]struct{}{};
};if _gad ==nil {_gad =map[string ]int {};};_cac :=0;if len (_dcd )> 0{_ ,_fda :=_aac [_dcd ];if !_fda {_aac [_dcd ]=struct{}{};_cac ++;};};if _cac ==0&&!_feb {return nil ;};_gad [_ade ]++;_dbd :=_gd .Now ();_dff ,_gefg :=_cfbd .loadState (_baf ._bdg );
if _gefg !=nil {_be .Log .Error ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gefg );return _gefg ;};if _dff .Usage ==nil {_dff .Usage =map[string ]int {};};for _abb ,_bdac :=range _gad {if _abb !=""{_dff .Usage [_abb ]+=_bdac ;};};_gad =nil ;const _eac =24*_gd .Hour ;
const _ebe =3*24*_gd .Hour ;if len (_dff .Instance )==0||_dbd .Sub (_dff .LastReported )> _eac ||(_dff .LimitDocs &&_dff .RemainingDocs <=_dff .Docs +int64 (_cac ))||_feb {_aebe ,_ebc :=_c .Hostname ();if _ebc !=nil {return _ebc ;};_ddg :=_dff .Docs ;_fbb ,_cbf ,_ebc :=_bcf ();
if _ebc !=nil {_be .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_ebc .Error ());_fbb =append (_fbb ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
_cbf =append (_cbf ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");}else {_e .Strings (_cbf );_e .Strings (_fbb );_bdgd ,_ege :=_edfb ();if _ege !=nil {return _ege ;};_edb :=false ;
for _ ,_egd :=range _cbf {if _egd ==_bdgd .String (){_edb =true ;};};if !_edb {_cbf =append (_cbf ,_bdgd .String ());};};_bfea :=_aeec ();_bfea ._aee =_baf ._bdg ;_ddg +=int64 (_cac );_ggab :=meteredUsageCheckinForm {Instance :_dff .Instance ,Next :_dff .Next ,UsageNumber :int (_ddg ),NumFailed :_dff .NumErrors ,Hostname :_aebe ,LocalIP :_cg .Join (_cbf ,"\u002c\u0020"),MacAddress :_cg .Join (_fbb ,"\u002c\u0020"),Package :"\u0075n\u0069\u006f\u0066\u0066\u0069\u0063e",PackageVersion :_ef .Version ,Usage :_dff .Usage ,IsPersistentCache :_baf ._eag ,Timestamp :_dbd .Unix ()};
if len (_fbb )==0{_ggab .MacAddress ="\u006e\u006f\u006e\u0065";};_edfe :=int64 (0);_facg :=_dff .NumErrors ;_bfcf :=_dbd ;_aebg :=0;_agcc :=_dff .LimitDocs ;_gbg ,_ebc :=_bfea .checkinUsage (_ggab );if _ebc !=nil {if _dbd .Sub (_dff .LastReported )> _ebe {if !_gbg .Success {return _fd .New (_gbg .Message );
};return _fd .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_edfe =_ddg ;_facg ++;
_bfcf =_dff .LastReported ;}else {_agcc =_gbg .LimitDocs ;_aebg =_gbg .RemainingDocs ;_facg =0;};if len (_gbg .Instance )==0{_gbg .Instance =_ggab .Instance ;};if len (_gbg .Next )==0{_gbg .Next =_ggab .Next ;};_ebc =_cfbd .updateState (_bfea ._aee ,_gbg .Instance ,_gbg .Next ,int (_edfe ),_agcc ,_aebg ,int (_facg ),_bfcf ,nil );
if _ebc !=nil {return _ebc ;};if !_gbg .Success {return _b .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_gbg .Message );};}else {_gefg =_cfbd .updateState (_baf ._bdg ,_dff .Instance ,_dff .Next ,int (_dff .Docs )+_cac ,_dff .LimitDocs ,int (_dff .RemainingDocs ),int (_dff .NumErrors ),_dff .LastReported ,_dff .Usage );
if _gefg !=nil {return _gefg ;};};return nil ;};var _gad map[string ]int ;type meteredClient struct{_bdf string ;_aee string ;_aeb *_f .Client ;};func GetMeteredState ()(MeteredStatus ,error ){if _baf ==nil {return MeteredStatus {},_fd .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_baf ._bff ||len (_baf ._bdg )==0{return MeteredStatus {},_fd .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_bfc ,_cfb :=_cfbd .loadState (_baf ._bdg );if _cfb !=nil {_be .Log .Error ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfb );
return MeteredStatus {},_cfb ;};if _bfc .Docs > 0{_fb :=_cae ("","",true );if _fb !=nil {return MeteredStatus {},_fb ;};};_dfbc .Lock ();defer _dfbc .Unlock ();_ceg :=_aeec ();_ceg ._aee =_baf ._bdg ;_edc ,_cfb :=_ceg .getStatus ();if _cfb !=nil {return MeteredStatus {},_cfb ;
};if !_edc .Valid {return MeteredStatus {},_fd .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_bg :=MeteredStatus {OK :true ,Credits :_edc .OrgCredits ,Used :_edc .OrgUsed };return _bg ,nil ;};func (_gaf *meteredClient )getStatus ()(meteredStatusResp ,error ){var _gae meteredStatusResp ;
_gdb :=_gaf ._bdf +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _cdgb meteredStatusForm ;_cab ,_agd :=_ce .Marshal (_cdgb );if _agd !=nil {return _gae ,_agd ;};_bbb ,_agd :=_feag (_cab );if _agd !=nil {return _gae ,_agd ;
};_ecb ,_agd :=_f .NewRequest ("\u0050\u004f\u0053\u0054",_gdb ,_bbb );if _agd !=nil {return _gae ,_agd ;};_ecb .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_ecb .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_ecb .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_ecb .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_gaf ._aee );_cdf ,_agd :=_gaf ._aeb .Do (_ecb );if _agd !=nil {return _gae ,_agd ;};defer _cdf .Body .Close ();if _cdf .StatusCode !=200{return _gae ,_b .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_cdf .StatusCode );
};_gc ,_agd :=_gdcc (_cdf );if _agd !=nil {return _gae ,_agd ;};_agd =_ce .Unmarshal (_gc ,&_gae );if _agd !=nil {return _gae ,_agd ;};return _gae ,nil ;};type stateLoader interface{loadState (_gca string )(reportState ,error );updateState (_bdgb ,_ddc ,_feg string ,_fbg int ,_eagg bool ,_bfd int ,_ggg int ,_gbf _gd .Time ,_ebd map[string ]int )error ;
};func _feag (_gba []byte )(_g .Reader ,error ){_cdb :=new (_df .Buffer );_aeba :=_db .NewWriter (_cdb );_aeba .Write (_gba );_ece :=_aeba .Close ();if _ece !=nil {return nil ,_ece ;};return _cdb ,nil ;};func (_cad *LicenseKey )Validate ()error {if _cad ._bff {return nil ;
};if len (_cad .LicenseId )< 10{return _b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");};if len (_cad .CustomerId )< 10{return _b .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");
};if len (_cad .CustomerName )< 1{return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");};if _cgb .After (_cad .CreatedAt ){return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cad .ExpiresAt .IsZero (){_cc :=_cad .CreatedAt .AddDate (1,0,0);if _fe .After (_cc ){_cc =_fe ;};_cad .ExpiresAt =_cc ;};if _cad .CreatedAt .After (_cad .ExpiresAt ){return _b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _cad .isExpired (){_cda :="\u0054\u0068\u0065\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064\u002e\u000a"+"\u0059o\u0075\u0020\u006d\u0061y\u0020n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0075\u0070d\u0061\u0074\u0065\u0020\u0074\u0068\u0065\u0020l\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0065\u0077\u0065s\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0066\u006f\u0072\u0020\u0079o\u0075\u0072\u0020\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074i\u006fn\u002e\u000a"+"\u0054o\u0020\u0066\u0069\u006ed y\u006f\u0075\u0072\u0020n\u0065\u0077\u0065\u0073\u0074\u0020\u006c\u0069\u0063\u0065n\u0073\u0065\u0020\u006b\u0065\u0079\u002c\u0020\u0067\u006f\u0020\u0074\u006f\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063l\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064oc\u002e\u0069\u006f \u0061\u006e\u0064\u0020\u0067o\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006d\u0065\u006e\u0075\u002e";
return _b .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0025\u0073",_cda );};if len (_cad .CreatorName )< 1{return _b .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");
};if len (_cad .CreatorEmail )< 1{return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _cad .CreatedAt .After (_fde ){if !_cad .UniOffice {return _b .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u003a\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020\u006b\u0065\u0079\u0020i\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0066\u006f\u0072\u0020\u0055\u006e\u0069\u004f\u0066\u0066\u0069\u0063\u0065");
};};return nil ;};func _afd (_egec ,_egb []byte )([]byte ,error ){_egba :=make ([]byte ,_gec .URLEncoding .DecodedLen (len (_egb )));_dbg ,_cdfg :=_gec .URLEncoding .Decode (_egba ,_egb );if _cdfg !=nil {return nil ,_cdfg ;};_egba =_egba [:_dbg ];_eed ,_cdfg :=_abe .NewCipher (_egec );
if _cdfg !=nil {return nil ,_cdfg ;};if len (_egba )< _abe .BlockSize {return nil ,_fd .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");};_becb :=_egba [:_abe .BlockSize ];_egba =_egba [_abe .BlockSize :];
_abga :=_bb .NewCFBDecrypter (_eed ,_becb );_abga .XORKeyStream (_egba ,_egba );return _egba ,nil ;};func _dde (_gdbe *_f .Response )(_g .ReadCloser ,error ){var _gggb error ;var _ffg _g .ReadCloser ;switch _cg .ToLower (_gdbe .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_ffg ,_gggb =_db .NewReader (_gdbe .Body );
if _gggb !=nil {return _ffg ,_gggb ;};defer _ffg .Close ();default:_ffg =_gdbe .Body ;};return _ffg ,nil ;};func TrackUse (useKey string ){if _baf ==nil {return ;};if !_baf ._bff ||len (_baf ._bdg )==0{return ;};if len (useKey )==0{return ;};_dfbc .Lock ();
defer _dfbc .Unlock ();if _gad ==nil {_gad =map[string ]int {};};_gad [useKey ]++;};func (_bce *LicenseKey )TypeToString ()string {if _bce ._bff {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};
if _bce .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _bce .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _bce .Tier ==LicenseTierIndividual ||_bce .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func MakeUnlicensedKey ()*LicenseKey {_ba :=LicenseKey {};_ba .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_ba .Tier =LicenseTierUnlicensed ;_ba .CreatedAt =_gd .Now ().UTC ();_ba .CreatedAtInt =_ba .CreatedAt .Unix ();return &_ba ;};type defaultStateHolder struct{};func _dgf (_gbd string )(LicenseKey ,error ){var _dab LicenseKey ;_fc ,_ace :=_geb (_bf ,_bfe ,_gbd );
if _ace !=nil {return _dab ,_ace ;};_fae ,_ace :=_ff (_afa ,_fc );if _ace !=nil {return _dab ,_ace ;};_ace =_ce .Unmarshal (_fae ,&_dab );if _ace !=nil {return _dab ,_ace ;};_dab .CreatedAt =_gd .Unix (_dab .CreatedAtInt ,0);if _dab .ExpiresAtInt > 0{_ggb :=_gd .Unix (_dab .ExpiresAtInt ,0);
_dab .ExpiresAt =_ggb ;};return _dab ,nil ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func SetLicenseKey (content string ,customerName string )error {if _bfb {return nil ;};_gbgb ,_ccb :=_dgf (content );if _ccb !=nil {_be .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_ccb );
return _ccb ;};if !_cg .EqualFold (_gbgb .CustomerName ,customerName ){_be .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_gbgb .CustomerName ,customerName );
return _b .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_gbgb .CustomerName ,customerName );
};_ccb =_gbgb .Validate ();if _ccb !=nil {_be .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ccb );
return _ccb ;};_baf =&_gbgb ;return nil ;};type LegacyLicenseType byte ;func _cfc (_aca ,_efb []byte )([]byte ,error ){_cag ,_dagb :=_abe .NewCipher (_aca );if _dagb !=nil {return nil ,_dagb ;};_abf :=make ([]byte ,_abe .BlockSize +len (_efb ));_fbef :=_abf [:_abe .BlockSize ];
if _ ,_gggg :=_g .ReadFull (_bd .Reader ,_fbef );_gggg !=nil {return nil ,_gggg ;};_agcca :=_bb .NewCFBEncrypter (_cag ,_fbef );_agcca .XORKeyStream (_abf [_abe .BlockSize :],_efb );_bbfga :=make ([]byte ,_gec .URLEncoding .EncodedLen (len (_abf )));_gec .URLEncoding .Encode (_bbfga ,_abf );
return _bbfga ,nil ;};func init (){_bbc ,_faea :=_fa .DecodeString (_caf );if _faea !=nil {_gf .Fatalf ("e\u0072\u0072\u006f\u0072 r\u0065a\u0064\u0069\u006e\u0067\u0020k\u0065\u0079\u003a\u0020\u0025\u0073",_faea );};_aceb ,_faea :=_gecd .ParsePKIXPublicKey (_bbc );
if _faea !=nil {_gf .Fatalf ("e\u0072\u0072\u006f\u0072 r\u0065a\u0064\u0069\u006e\u0067\u0020k\u0065\u0079\u003a\u0020\u0025\u0073",_faea );};_acd =_aceb .(*_fdb .PublicKey );};var _cfbd stateLoader =defaultStateHolder {};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);func (_ggc *LicenseKey )getExpiryDateToCompare ()_gd .Time {if _ggc .Trial {return _gd .Now ().UTC ();
};return _ef .ReleasedAt ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;
MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;};func _geb (_dgd string ,_geg string ,_dag string )(string ,error ){_ag :=_cg .Index (_dag ,_dgd );
if _ag ==-1{return "",_b .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bbfg :=_cg .Index (_dag ,_geg );if _bbfg ==-1{return "",_b .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_eff :=_ag +len (_dgd )+1;return _dag [_eff :_bbfg -1],nil ;};var _baf =MakeUnlicensedKey ();func Track (docKey string ,useKey string )error {return _cae (docKey ,useKey ,!_baf ._eag )};const _dee ="\u0055\u004e\u0049\u004fFF\u0049\u0043\u0045\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041T\u0048";
func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_be .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_be .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _b .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _baf !=nil &&(_baf ._bff ||_baf .Tier !=LicenseTierUnlicensed ){_be .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _fd .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_gdc :=_aeec ();_gdc ._aee =apiKey ;_edg ,_fg :=_gdc .getStatus ();if _fg !=nil {return _fg ;};if !_edg .Valid {return _fd .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_edf :=&LicenseKey {_bff :true ,_bdg :apiKey ,_eag :true };_baf =_edf ;return nil ;};func (_fgg defaultStateHolder )updateState (_gbe ,_aebc ,_cbga string ,_efdb int ,_dadf bool ,_bead int ,_eea int ,_dada _gd .Time ,_gga map[string ]int )error {_gafc ,_bbbc :=_fbgb ();
if _bbbc !=nil {return _bbbc ;};_bbbc =_c .MkdirAll (_gafc ,0777);if _bbbc !=nil {return _bbbc ;};if len (_gbe )< 20{return _fd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_afg :=[]byte (_gbe );_eba :=_eg .Sum512_256 (_afg [:20]);
_dea :=_fa .EncodeToString (_eba [:]);_bbff :=_ea .Join (_gafc ,_dea );var _bdd reportState ;_bdd .Docs =int64 (_efdb );_bdd .NumErrors =int64 (_eea );_bdd .LimitDocs =_dadf ;_bdd .RemainingDocs =int64 (_bead );_bdd .LastWritten =_gd .Now ().UTC ();_bdd .LastReported =_dada ;
_bdd .Instance =_aebc ;_bdd .Next =_cbga ;_bdd .Usage =_gga ;_adb ,_bbbc :=_ce .Marshal (_bdd );if _bbbc !=nil {return _bbbc ;};const _deae ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_adb ,_bbbc =_cfc ([]byte (_deae ),_adb );
if _bbbc !=nil {return _bbbc ;};_bbbc =_ac .WriteFile (_bbff ,_adb ,0600);if _bbbc !=nil {return _bbbc ;};return nil ;};func _bcf ()([]string ,[]string ,error ){_edca ,_cba :=_ge .Interfaces ();if _cba !=nil {return nil ,nil ,_cba ;};var _afe []string ;
var _cgd []string ;for _ ,_gge :=range _edca {if _gge .Flags &_ge .FlagUp ==0||_df .Equal (_gge .HardwareAddr ,nil ){continue ;};_aed ,_fga :=_gge .Addrs ();if _fga !=nil {return nil ,nil ,_fga ;};_baa :=0;for _ ,_dfd :=range _aed {var _dec _ge .IP ;switch _gdcf :=_dfd .(type ){case *_ge .IPNet :_dec =_gdcf .IP ;
case *_ge .IPAddr :_dec =_gdcf .IP ;};if _dec .IsLoopback (){continue ;};if _dec .To4 ()==nil {continue ;};_cgd =append (_cgd ,_dec .String ());_baa ++;};_fba :=_gge .HardwareAddr .String ();if _fba !=""&&_baa > 0{_afe =append (_afe ,_fba );};};return _afe ,_cgd ,nil ;
};func _aea ()string {_baad :=_c .Getenv ("\u0048\u004f\u004d\u0045");if len (_baad )==0{_baad ,_ =_c .UserHomeDir ();};return _baad ;};type meteredStatusForm struct{};func (_adcg defaultStateHolder )loadState (_gecc string )(reportState ,error ){_eec ,_daf :=_fbgb ();
if _daf !=nil {return reportState {},_daf ;};_daf =_c .MkdirAll (_eec ,0777);if _daf !=nil {return reportState {},_daf ;};if len (_gecc )< 20{return reportState {},_fd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_bcc :=[]byte (_gecc );
_bda :=_eg .Sum512_256 (_bcc [:20]);_beada :=_fa .EncodeToString (_bda [:]);_bbbb :=_ea .Join (_eec ,_beada );_fdc ,_daf :=_ac .ReadFile (_bbbb );if _daf !=nil {if _c .IsNotExist (_daf ){return reportState {},nil ;};_be .Log .Error ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_daf );
return reportState {},_fd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _aaf ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_fdc ,_daf =_afd ([]byte (_aaf ),_fdc );if _daf !=nil {return reportState {},_daf ;
};var _abed reportState ;_daf =_ce .Unmarshal (_fdc ,&_abed );if _daf !=nil {_be .Log .Error ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_daf );return reportState {},_fd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _abed ,nil ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func (_aa LegacyLicense )Verify (pubKey *_fdb .PublicKey )error {_agc :=_aa ;
_agc .Signature ="";_fed :=_df .Buffer {};_ga :=_ce .NewEncoder (&_fed );if _bed :=_ga .Encode (_agc );_bed !=nil {return _bed ;};_cfa ,_eb :=_fa .DecodeString (_aa .Signature );if _eb !=nil {return _eb ;};_bcd :=_da .Sum256 (_fed .Bytes ());_eb =_fdb .VerifyPKCS1v15 (pubKey ,_ab .SHA256 ,_bcd [:],_cfa );
return _eb ;};func GetLicenseKey ()*LicenseKey {if _baf ==nil {return nil ;};_cgg :=*_baf ;return &_cgg ;};func _edfb ()(_ge .IP ,error ){_adcd ,_dffg :=_ge .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _dffg !=nil {return nil ,_dffg ;
};defer _adcd .Close ();_fea :=_adcd .LocalAddr ().(*_ge .UDPAddr );return _fea .IP ,nil ;};var _bfb =false ;var _fe =_gd .Date (2020,1,1,0,0,0,0,_gd .UTC );const _eda ="\u0055\u004e\u0049OF\u0046\u0049\u0043\u0045\u005f\u0043\u0055\u0053\u0054\u004f\u004d\u0045\u0052\u005f\u004e\u0041\u004d\u0045";
func _dg (_abg string ,_bc []byte )(string ,error ){_ee ,_ :=_fac .Decode ([]byte (_abg ));if _ee ==nil {return "",_b .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_cf ,_ega :=_gecd .ParsePKCS1PrivateKey (_ee .Bytes );
if _ega !=nil {return "",_ega ;};_egf :=_eg .New ();_egf .Write (_bc );_dfb :=_egf .Sum (nil );_dc ,_ega :=_fdb .SignPKCS1v15 (_bd .Reader ,_cf ,_ab .SHA512 ,_dfb );if _ega !=nil {return "",_ega ;};_gg :=_gec .StdEncoding .EncodeToString (_bc );_gg +="\u000a\u002b\u000a";
_gg +=_gec .StdEncoding .EncodeToString (_dc );return _gg ,nil ;};func (_fedd *meteredClient )checkinUsage (_ccg meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_ccg .Package ="\u0075n\u0069\u006f\u0066\u0066\u0069\u0063e";_ccg .PackageVersion =_ef .Version ;
var _bag meteredUsageCheckinResp ;_dd :=_fedd ._bdf +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_acc ,_cfac :=_ce .Marshal (_ccg );if _cfac !=nil {return _bag ,_cfac ;};_de ,_cfac :=_feag (_acc );
if _cfac !=nil {return _bag ,_cfac ;};_eeg ,_cfac :=_f .NewRequest ("\u0050\u004f\u0053\u0054",_dd ,_de );if _cfac !=nil {return _bag ,_cfac ;};_eeg .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_eeg .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_eeg .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_eeg .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_fedd ._aee );_gfd ,_cfac :=_fedd ._aeb .Do (_eeg );if _cfac !=nil {_be .Log .Error ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0068\u0074\u0074\u0070 \u0072e\u0073p\u006f\u006e\u0073\u0065\u003a\u0020\u0025v",_cfac );
return _bag ,_cfac ;};defer _gfd .Body .Close ();if _gfd .StatusCode !=200{_cdgd ,_ccf :=_gdcc (_gfd );if _ccf !=nil {return _bag ,_ccf ;};_ccf =_ce .Unmarshal (_cdgd ,&_bag );if _ccf !=nil {return _bag ,_ccf ;};return _bag ,_b .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_gfd .StatusCode );
};_bfg :=_gfd .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_ddb :=_efa (_ccg .MacAddress ,string (_acc ));if _ddb !=_bfg {_be .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _bag ,_fd .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_dgfc ,_cfac :=_gdcc (_gfd );if _cfac !=nil {return _bag ,_cfac ;};_cfac =_ce .Unmarshal (_dgfc ,&_bag );if _cfac !=nil {return _bag ,_cfac ;};return _bag ,nil ;};func SetMeteredKeyPersistentCache (val bool ){_baf ._eag =val };type meteredStatusResp struct{Valid bool `json:"valid"`;
OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};type LegacyLicense struct{Name string ;Signature string `json:",omitempty"`;Expiration _gd .Time ;LicenseType LegacyLicenseType ;};var _aac map[string ]struct{};
func (_cff *LicenseKey )isExpired ()bool {return _cff .getExpiryDateToCompare ().After (_cff .ExpiresAt )};const _fbe ="\u0055N\u0049D\u004f\u0043\u005f\u004c\u0049C\u0045\u004eS\u0045\u005f\u0044\u0049\u0052";var _dfbc =&_ad .Mutex {};func GenRefId (prefix string )(string ,error ){var _ecf _df .Buffer ;
_ecf .WriteString (prefix );_bfef :=make ([]byte ,8+16);_gbed :=_gd .Now ().UTC ().UnixNano ();_ed .BigEndian .PutUint64 (_bfef ,uint64 (_gbed ));_ ,_gda :=_bd .Read (_bfef [8:]);if _gda !=nil {return "",_gda ;};_ecf .WriteString (_fa .EncodeToString (_bfef ));
return _ecf .String (),nil ;};const (_bf ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";_bfe ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
);func SetLegacyLicenseKey (s string )error {_fcf :=_d .MustCompile ("\u005c\u0073");s =_fcf .ReplaceAllString (s ,"");var _ged _g .Reader ;_ged =_cg .NewReader (s );_ged =_gec .NewDecoder (_gec .RawURLEncoding ,_ged );_ged ,_gfg :=_db .NewReader (_ged );
if _gfg !=nil {return _gfg ;};_acg :=_ce .NewDecoder (_ged );_baab :=&LegacyLicense {};if _gfa :=_acg .Decode (_baab );_gfa !=nil {return _gfa ;};if _dbe :=_baab .Verify (_acd );_dbe !=nil {return _fd .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006e\u0020\u0065\u0072\u0072\u006f\u0072");
};if _baab .Expiration .Before (_ef .ReleasedAt ){return _fd .New ("\u006ci\u0063e\u006e\u0073\u0065\u0020\u0065\u0078\u0070\u0069\u0072\u0065\u0064");};_beag :=_gd .Now ().UTC ();_afgg :=LicenseKey {};_afgg .CreatedAt =_beag ;_afgg .CustomerId ="\u004c\u0065\u0067\u0061\u0063\u0079";
_afgg .CustomerName =_baab .Name ;_afgg .Tier =LicenseTierBusiness ;_afgg .ExpiresAt =_baab .Expiration ;_afgg .CreatorName ="\u0055\u006e\u0069\u0044\u006f\u0063\u0020\u0073\u0075p\u0070\u006f\u0072\u0074";_afgg .CreatorEmail ="\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0040\u0075\u006e\u0069\u0064o\u0063\u002e\u0069\u006f";
_afgg .UniOffice =true ;_baf =&_afgg ;return nil ;};var _acd *_fdb .PublicKey ;type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _gd .Time `json:"-"`;
CreatedAtInt int64 `json:"created_at"`;ExpiresAt _gd .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;
UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_bff bool ;_bdg string ;_eag bool ;};func init (){_faec :=_c .Getenv (_dee );_cdc :=_c .Getenv (_eda );if len (_faec )==0||len (_cdc )==0{return ;};_aaa ,_ccc :=_ac .ReadFile (_faec );
if _ccc !=nil {_be .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_ccc );return ;};_ccc =SetLicenseKey (string (_aaa ),_cdc );
if _ccc !=nil {_be .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_ccc );return ;};};func _gdcc (_cdgdc *_f .Response )([]byte ,error ){var _efe []byte ;
_gcga ,_bede :=_dde (_cdgdc );if _bede !=nil {return _efe ,_bede ;};return _ac .ReadAll (_gcga );};func _efa (_agf ,_fdcc string )string {_bedb :=[]byte (_agf );_ecc :=_gb .New (_da .New ,_bedb );_ecc .Write ([]byte (_fdcc ));return _gec .StdEncoding .EncodeToString (_ecc .Sum (nil ));
};var _fde =_gd .Date (2019,6,6,0,0,0,0,_gd .UTC );func (_gef *LicenseKey )ToString ()string {if _gef ._bff {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_faef :=_b .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_gef .LicenseId );
_faef +=_b .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_gef .CustomerId );_faef +=_b .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_gef .CustomerName );
_faef +=_b .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_gef .Tier );_faef +=_b .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_ef .UtcTimeFormat (_gef .CreatedAt ));if _gef .ExpiresAt .IsZero (){_faef +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_faef +=_b .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_ef .UtcTimeFormat (_gef .ExpiresAt ));};_faef +=_b .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_gef .CreatorName ,_gef .CreatorEmail );
return _faef ;};const _afa ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _gd .Time `json:"lr"`;LastWritten _gd .Time `json:"lw"`;
Usage map[string ]int `json:"u"`;};const _caf ="\u0033\u0030\u0035\u0063\u0033\u0030\u0030\u00640\u0036\u0030\u0039\u0032\u0061\u0038\u00364\u0038\u0038\u0036\u0066\u0037\u0030d\u0030\u0031\u0030\u0031\u0030\u00310\u0035\u0030\u0030\u0030\u0033\u0034\u0062\u0030\u0030\u0033\u0030\u00348\u0030\u0032\u0034\u0031\u0030\u0030\u0062\u0038\u0037\u0065\u0061\u0066\u0062\u0036\u0063\u0030\u0037\u0034\u0039\u0039\u0065\u0062\u00397\u0063\u0063\u0039\u0064\u0033\u0035\u0036\u0035\u0065\u0063\u00663\u0031\u0036\u0038\u0031\u0039\u0036\u0033\u0030\u0031\u0039\u0030\u0037c\u0038\u0034\u0031\u0061\u0064\u0064c6\u0036\u0035\u0030\u0038\u0036\u0062\u0062\u0033\u0065\u0064\u0038\u0065\u0062\u0031\u0032\u0064\u0039\u0064\u0061\u0032\u0036\u0063\u0061\u0066\u0061\u0039\u0036\u00345\u0030\u00314\u0036\u0064\u0061\u0038\u0062\u0064\u0030\u0063c\u0066\u0031\u0035\u0035\u0066\u0063a\u0063\u0063\u00368\u0036\u0039\u0035\u0035\u0065\u0066\u0030\u0033\u0030\u0032\u0066\u0061\u0034\u0034\u0061\u0061\u0033\u0065\u0063\u0038\u0039\u0034\u0031\u0037\u0062\u0030\u0032\u0030\u0033\u0030\u0031\u0030\u0030\u0030\u0031";
func _fbgb ()(string ,error ){_debd :=_cg .TrimSpace (_c .Getenv (_fbe ));if _debd ==""{_be .Log .Debug ("\u0024\u0025\u0073\u0020e\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061\u0072\u0069\u0061\u0062l\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020\u0057\u0069\u006c\u006c\u0020\u0075\u0073\u0065\u0020\u0068\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0074\u006f\u0020s\u0074\u006f\u0072\u0065\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020in\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u002e",_fbe );
_bcef :=_aea ();if len (_bcef )==0{return "",_b .Errorf ("r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0024\u0025\u0073\u0020\u0065\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061r\u0069a\u0062\u006c\u0065\u0020o\u0072\u0020h\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_fbe );
};_debd =_ea .Join (_bcef ,"\u002eu\u006e\u0069\u0064\u006f\u0063");};_caeb :=_c .MkdirAll (_debd ,0777);if _caeb !=nil {return "",_caeb ;};return _debd ,nil ;};func (_ec *LicenseKey )IsLicensed ()bool {if _ec ==nil {return false ;};return _ec .Tier !=LicenseTierUnlicensed ||_ec ._bff ;
};func _ff (_cb string ,_dad string )([]byte ,error ){var (_cbg int ;_ae string ;);for _ ,_ae =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _cbg =_cg .Index (_dad ,_ae );_cbg !=-1{break ;};};if _cbg ==-1{return nil ,_b .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_eef :=_dad [:_cbg ];_adc :=_cbg +len (_ae );_cd :=_dad [_adc :];if _eef ==""||_cd ==""{return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_gff ,_cdg :=_gec .StdEncoding .DecodeString (_eef );if _cdg !=nil {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_af ,_cdg :=_gec .StdEncoding .DecodeString (_cd );
if _cdg !=nil {return nil ,_b .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_ca ,_ :=_fac .Decode ([]byte (_cb ));if _ca ==nil {return nil ,_b .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_bbf ,_cdg :=_gecd .ParsePKIXPublicKey (_ca .Bytes );if _cdg !=nil {return nil ,_cdg ;};_bec :=_bbf .(*_fdb .PublicKey );if _bec ==nil {return nil ,_b .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_efd :=_eg .New ();_efd .Write (_gff );_ffb :=_efd .Sum (nil );_cdg =_fdb .VerifyPKCS1v15 (_bec ,_ab .SHA512 ,_ffb ,_af );if _cdg !=nil {return nil ,_cdg ;};return _gff ,nil ;};var _cgb =_gd .Date (2010,1,1,0,0,0,0,_gd .UTC );